{
 "testCollection": {
  "name": "12.6.1_The_do_while_Statement",
  "numTests": 27,
  "tests": [
   {
    "section": "12.6.1",
    "description": "Evaluating various Expressions",
    "test": "var __in__do;\n\ndo __in__do=1; while ( false );\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__in__do!==1) {\n\t$ERROR('#1: false evaluates to false');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\ndo __in__do=2; while ( 0 );\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__in__do!==2) {\n\t$ERROR('#2: 0 evaluates to false');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\ndo __in__do=3; while ( \"\" );\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif (__in__do!==3) {\n\t$ERROR('#3: \"\" evaluates to false');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A1"
   },
   {
    "section": "12.6.1, 13",
    "description": "Also this a test on FunctionExpression",
    "test": "var check = 0;\ndo {    \n  if(typeof(f) === \"function\"){\n    check = -1;        \n    break; \n  } else {\n    check = 1;        \n    break; \n  }\n} while(function f(){});\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (check !== 1) {\n\t$ERROR('#1: FunctionExpression within a \"do-while\" statement is allowed, but no function with the given name will appear in the global context');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A10"
   },
   {
    "section": "12.6.1",
    "description": "Checking if execution of \"do {} while({})\" passes",
    "test": "do {\n    var __in__do=1;\n    if(__in__do)break;\n} while({});\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__in__do !== 1) {\n\t$ERROR('#1: \"{}\" in do-while expression evaluates to true');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A11"
   },
   {
    "section": "12.6.1",
    "description": ": Checking if execution of \"do var x=1; var y =2; while (0)\" fails;",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ndo var x=1; var y =2; while (0);\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A12"
   },
   {
    "section": "12.6.1, 13",
    "description": "Declaring function within a \"do-while\" loop",
    "negative": "SyntaxError",
    "test": "\"use strict\";\ndo{\n    function __func(){};\n} while(0);\n",
    "id": "S12.6.1_A13_T1"
   },
   {
    "section": "12.6.1, 13",
    "description": "Declaring a function within a \"do-while\" loop that is within a strict function",
    "negative": "SyntaxError",
    "test": "(function(){\n\"use strict\";\ndo{\n    function __func(){};\n}while(0);\n\n});\n",
    "id": "S12.6.1_A13_T2"
   },
   {
    "section": "12.6.1, 13",
    "description": "Declaring a function within a \"do-while\" loop that is within a function declaration itself",
    "negative": "",
    "test": "function(){\n\ndo{\n    function __func(){};\n}while(0);\n\n};\n",
    "id": "S12.6.1_A13_T3"
   },
   {
    "section": "12.6.1, 13",
    "description": ": Using FunctionExpression \"function __func(){return 0;}\" as an Expression;",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#\ndo{\n   var __reached = 1;\n   break;\n}while(function __func(){return 0;});\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__reached !== 1) {\n\t$ERROR('#2: function expession inside of do-while expression is allowed');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A14_T1"
   },
   {
    "section": "12.6.1",
    "description": ": Using FunctionExpression \"function __func(){return 0;}()\" as an Expression;",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#\ndo{\n    var __reached = 1;\n   break;\n}while(function __func(){return 0;}());\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__reached !== 1) {\n\t$ERROR('#2: function expession inside of do-while expression is allowed');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A14_T2"
   },
   {
    "section": "12.6.1",
    "description": "Using \"{0}\" Block as an Expression",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#\ndo{\n    ;\n}while({0});\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A15"
   },
   {
    "section": "12.6.1",
    "description": "Evaluating Statement with error Expression",
    "test": "try {\n\tdo __in__do = \"reached\"; while (abbracadabra);\n\t$ERROR('#1: \\'do __in__do = \"reached\"; while (abbracadabra)\\' lead to throwing exception');\n} catch (e) {}\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__in__do !== \"reached\") {\n\t$ERROR('#1.1: __in__do === \"reached\". Actual:  __in__do ==='+ __in__do  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n\n",
    "id": "S12.6.1_A2"
   },
   {
    "section": "12.6.1",
    "description": ": Using eval \"eval(\"do __in__do=1; while (false)\")\";",
    "test": "__evaluated = eval(\"do __in__do=1; while (false)\");\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#\nif (__in__do !== 1) {\n\t$ERROR('#1: __in__do === 1. Actual:  __in__do ==='+ __in__do  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__evaluated !== 1) {\n\t$ERROR('#2: __evaluated === 1. Actual:  __evaluated ==='+ __evaluated  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A3"
   },
   {
    "section": "12.6.1, 12.8",
    "description": "Using \"break\" within a \"do-while\" loop",
    "test": "do {\n    __in__do__before__break=\"reached\"; \n    break; \n    __in__do__after__break=\"where am i\";\n} while(2===1);\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__in__do__before__break !== \"reached\") {\n\t$ERROR('#1: __in__do__before__break === \"reached\". Actual:  __in__do__before__break ==='+ __in__do__before__break  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (typeof __in__do__after__break !== \"undefined\") {\n\t$ERROR('#2: typeof __in__do__after__break === \"undefined\". Actual:  typeof __in__do__after__break ==='+ typeof __in__do__after__break  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A4_T1"
   },
   {
    "section": "12.6.1, 12.8",
    "description": "\"break\" and VariableDeclaration within a \"do-while\" statement",
    "test": "do_out : do {\n    var __in__do__before__break=\"black\";\n    do_in : do {\n        var __in__do__IN__before__break=\"hole\";\n        break do_in; \n        var __in__do__IN__after__break=\"sun\";\n    } while (0);\n    var __in__do__after__break=\"won't you come\";\n} while(2==1);\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)) {\n\t$ERROR('#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)==='+ (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break) );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A4_T2"
   },
   {
    "section": "12.6.1, 12.2, 12.8",
    "description": "\"break\" and VariableDeclaration within a \"do-while\" statement",
    "test": "do_out : do {\n    var __in__do__before__break=\"once\";\n    do_in : do {\n        var __in__do__IN__before__break=\"in\";\n        break do_out;\n        var __in__do__IN__after__break=\"the\";\n    } while (0);\n    var __in__do__after__break=\"lifetime\";\n} while(2===1);\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)) {\n\t$ERROR('#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)==='+ (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break) );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A4_T3"
   },
   {
    "section": "12.6.1, 12.8",
    "description": "\"break\" and VariableDeclaration within a \"do-while\" statement",
    "test": "do_out : do {\n    var __in__do__before__break=\"reached\";\n    do_in : do {\n        var __in__do__IN__before__break=\"reached\";\n        break;\n        var __in__do__IN__after__break=\"where am i\";\n    } while (0);\n    var __in__do__after__break=\"where am i\";\n} while(2===1);\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)) {\n\t$ERROR('#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)==='+ (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break) );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.6.1_A4_T4"
   },
   {
    "section": "12.6.1, 12.8",
    "description": "Using labeled \"break\" in order to continue a loop",
    "test": "//CHECK#1\nvar i=0;\nwoohoo:{\n  do{\n    i++;\n    if ( ! (i < 10) ) {\n      break woohoo;\n      $ERROR('#1.1: \"break woohoo\" must break loop');\n    }\n  } while ( true );\n  if (i!==10) $ERROR('#1.2: i===10. Actual:  i==='+ i );\n}\n",
    "id": "S12.6.1_A4_T5"
   },
   {
    "section": "12.6.1",
    "description": "Using eval",
    "test": "__evaluated = eval(\"do {__in__do__before__break=1; break; __in__do__after__break=2;} while(0)\");\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__in__do__before__break !== 1) {\n\t$ERROR('#1: __in__do__before__break === 1. Actual:  __in__do__before__break ==='+ __in__do__before__break  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (typeof __in__do__after__break !== \"undefined\") {\n\t$ERROR('#2: typeof __in__do__after__break === \"undefined\". Actual:  typeof __in__do__after__break ==='+ typeof __in__do__after__break  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif (__evaluated !== 1) {\n\t$ERROR('#3: __evaluated === 1. Actual:  __evaluated ==='+ __evaluated  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A5"
   },
   {
    "section": "12.6.1",
    "description": "Checking if execution of \"do{} while 1\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ndo break; while 1;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A6_T1"
   },
   {
    "section": "12.6.1",
    "description": "Checking if execution of \"do{} while 0\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ndo break; while 0;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A6_T2"
   },
   {
    "section": "12.6.1",
    "description": "Checking if execution of \"do{}while true\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ndo break; while true;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A6_T3"
   },
   {
    "section": "12.6.1",
    "description": "Checking if execution of \"do{}while false\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ndo break; while false;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A6_T4"
   },
   {
    "section": "12.6.1",
    "description": "Checking if execution of \"do{}while ''\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ndo break; while '';\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A6_T5"
   },
   {
    "section": "12.6.1",
    "description": "Checking if execution of \"do{}while 'hood'\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ndo break; while 'hood';\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A6_T6"
   },
   {
    "section": "12.6.1",
    "description": "Using eval",
    "test": "var __condition=0\n\n__evaluated = eval(\"do eval(\\\"__condition++\\\"); while (__condition<5)\");\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__condition !== 5) {\n\t$ERROR('#1: The \"do-while\" statement is evaluted according to the Standard ');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__evaluated !== 4) {\n\t$ERROR('#2: The \"do-while\" statement returns (normal, V, empty)');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.6.1_A7"
   },
   {
    "section": "12.6.1",
    "description": "Using eval",
    "test": "var __condition = 0, __odds=0;\n\n__evaluated = eval(\"do { __condition++; if (((''+__condition/2).split('.')).length>1) continue; __odds++;} while(__condition < 10)\");\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__odds !== 5) {\n\t$ERROR('#1: __odds === 5. Actual:  __odds ==='+ __odds  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__evaluated !== 4) {\n\t$ERROR('#2: __evaluated === 4. Actual:  __evaluated ==='+ __evaluated  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.6.1_A8"
   },
   {
    "section": "12.6.1",
    "description": "Throwing system exception whithin a \"do-while\" loop",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ntry {\n\tdo {\n\t    var x = 1; \n\t    abaracadabara;\n\t} while(0);\n\t$ERROR('#1: \"abbracadabra\" lead to throwing exception');\n\n} catch (e) {}\n\nif (x !== 1) {\n\t$ERROR('#1.1: x === 1. Actual:  x ==='+ x  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.1_A9"
   }
  ]
 }
}
