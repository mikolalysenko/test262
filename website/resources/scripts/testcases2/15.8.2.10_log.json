{
 "testCollection": {
  "name": "15.8.2.10_log",
  "numTests": 6,
  "tests": [
   {
    "section": "15.8.2.10",
    "description": "Checking if Math.log(NaN) is NaN",
    "test": "// CHECK#1\nvar x = NaN;\nif (!isNaN(Math.log(x)))\n{\n\t$ERROR(\"#1: 'var x=NaN; isNaN(Math.log(x)) === false'\");\n}\n",
    "id": "S15.8.2.10_A1"
   },
   {
    "section": "15.8.2.10",
    "description": "Checking if Math.log(x) is NaN, where x is less than 0",
    "test": "// CHECK#1\nvar x = -0.000000000000001;\nif (!isNaN(Math.log(x)))\n{\n\t$ERROR(\"#1: 'var x=-0.000000000000001; isNaN(Math.log(x)) === false'\");\n}\n\n// CHECK#2\nx = -1;\nif (!isNaN(Math.log(x)))\n{\n\t$ERROR(\"#1: 'var x=-1; isNaN(Math.log(x)) === false'\");\n}\n\n// CHECK#3\nx = -Infinity;\nif (!isNaN(Math.log(x)))\n{\n\t$ERROR(\"#1: 'var x=-Infinity; isNaN(Math.log(x)) === false'\");\n}\n",
    "id": "S15.8.2.10_A2"
   },
   {
    "section": "15.8.2.10",
    "description": "Checking if Math.log(+0) and Math.log(-0) equals to -Infinity",
    "test": "// CHECK#1\nvar x = +0;\nif (Math.log(x) !== -Infinity)\n{\n\t$ERROR(\"#1: 'var x=+0; Math.log(x) !== -Infinity'\");\n}\n\n// CHECK#2\nvar x = -0;\nif (Math.log(x) !== -Infinity)\n{\n\t$ERROR(\"#1: 'var x=-0; Math.log(x) !== -Infinity'\");\n}\n",
    "id": "S15.8.2.10_A3"
   },
   {
    "section": "15.8.2.10",
    "description": "Checking if Math.log(1) equals to +0",
    "test": "// CHECK#1\nvar x = 1;\nif (Math.log(x) !== +0)\n{\n\t$ERROR(\"#1: 'var x=1; Math.log(x) !== +0'\");\n}\n",
    "id": "S15.8.2.10_A4"
   },
   {
    "section": "15.8.2.10",
    "description": "Checking if Math.log(+Infinity) equals to +Infinity",
    "test": "// CHECK#1\nvar x = +Infinity;\nif (Math.log(x) !== +Infinity)\n{\n\t$ERROR(\"#1: 'var x=+Infinity; Math.log(x) !== +Infinity'\");\n}\n",
    "id": "S15.8.2.10_A5"
   },
   {
    "section": "15.8.2.10",
    "description": ": Checking if Math.log is approximately equals to its mathematical values on the set of 64 argument values; all the sample values is calculated with LibC;",
    "test": "$INCLUDE(\"math_precision.js\");\n$INCLUDE(\"math_isequal.js\");\n\n// CHECK#1\nvnum = 64;\nvar x = new Array();\nx[0] = 0.00000000000000000000;\nx[1] = 0.25396825396825395000;\nx[2] = 0.50793650793650791000;\nx[3] = 0.76190476190476186000;\nx[4] = 1.01587301587301580000;\nx[5] = 1.26984126984126980000;\nx[6] = 1.52380952380952370000;\nx[7] = 1.77777777777777770000;\nx[8] = 2.03174603174603160000;\nx[9] = 2.28571428571428560000;\nx[10] = 2.53968253968253950000;\nx[11] = 2.79365079365079350000;\nx[12] = 3.04761904761904740000;\nx[13] = 3.30158730158730140000;\nx[14] = 3.55555555555555540000;\nx[15] = 3.80952380952380930000;\nx[16] = 4.06349206349206330000;\nx[17] = 4.31746031746031720000;\nx[18] = 4.57142857142857120000;\nx[19] = 4.82539682539682510000;\nx[20] = 5.07936507936507910000;\nx[21] = 5.33333333333333300000;\nx[22] = 5.58730158730158700000;\nx[23] = 5.84126984126984090000;\nx[24] = 6.09523809523809490000;\nx[25] = 6.34920634920634890000;\nx[26] = 6.60317460317460280000;\nx[27] = 6.85714285714285680000;\nx[28] = 7.11111111111111070000;\nx[29] = 7.36507936507936470000;\nx[30] = 7.61904761904761860000;\nx[31] = 7.87301587301587260000;\nx[32] = 8.12698412698412650000;\nx[33] = 8.38095238095238140000;\nx[34] = 8.63492063492063440000;\nx[35] = 8.88888888888888930000;\nx[36] = 9.14285714285714230000;\nx[37] = 9.39682539682539720000;\nx[38] = 9.65079365079365030000;\nx[39] = 9.90476190476190510000;\nx[40] = 10.15873015873015800000;\nx[41] = 10.41269841269841300000;\nx[42] = 10.66666666666666600000;\nx[43] = 10.92063492063492100000;\nx[44] = 11.17460317460317400000;\nx[45] = 11.42857142857142900000;\nx[46] = 11.68253968253968200000;\nx[47] = 11.93650793650793700000;\nx[48] = 12.19047619047619000000;\nx[49] = 12.44444444444444500000;\nx[50] = 12.69841269841269800000;\nx[51] = 12.95238095238095300000;\nx[52] = 13.20634920634920600000;\nx[53] = 13.46031746031746000000;\nx[54] = 13.71428571428571400000;\nx[55] = 13.96825396825396800000;\nx[56] = 14.22222222222222100000;\nx[57] = 14.47619047619047600000;\nx[58] = 14.73015873015872900000;\nx[59] = 14.98412698412698400000;\nx[60] = 15.23809523809523700000;\nx[61] = 15.49206349206349200000;\nx[62] = 15.74603174603174500000;\nx[63] = 16.00000000000000000000;\n\n\n\nvar y = new Array();\ny[0] = -Infinity;\ny[1] = -1.37054600415175140000;\ny[2] = -0.67739882359180614000;\ny[3] = -0.27193371548364181000;\ny[4] = 0.01574835696813911200;\ny[5] = 0.23889190828234888000;\ny[6] = 0.42121346507630347000;\ny[7] = 0.57536414490356180000;\ny[8] = 0.70889553752808443000;\ny[9] = 0.82667857318446791000;\ny[10] = 0.93203908884229414000;\ny[11] = 1.02734926864661900000;\ny[12] = 1.11436064563624870000;\ny[13] = 1.19440335330978530000;\ny[14] = 1.26851132546350720000;\ny[15] = 1.33750419695045860000;\ny[16] = 1.40204271808802970000;\ny[17] = 1.46266733990446450000;\ny[18] = 1.51982575374441310000;\ny[19] = 1.57389297501468910000;\ny[20] = 1.62518626940223940000;\ny[21] = 1.67397643357167160000;\ny[22] = 1.72049644920656440000;\ny[23] = 1.76494821177739820000;\ny[24] = 1.80750782619619410000;\ny[25] = 1.84832982071644910000;\ny[26] = 1.88755053386973050000;\ny[27] = 1.92529086185257750000;\ny[28] = 1.96165850602345240000;\ny[29] = 1.99674982583472250000;\ny[30] = 2.03065137751040400000;\ny[31] = 2.06344120033339480000;\ny[32] = 2.09518989864797510000;\ny[33] = 2.12596155731472880000;\ny[34] = 2.15581452046440970000;\ny[35] = 2.18480205733766210000;\ny[36] = 2.21297293430435850000;\ny[37] = 2.24037190849247290000;\ny[38] = 2.26704015557463420000;\ny[39] = 2.29301564197789490000;\ny[40] = 2.31833344996218480000;\ny[41] = 2.34302606255255650000;\ny[42] = 2.36712361413161700000;\ny[43] = 2.39065411154181100000;\ny[44] = 2.41364362976650960000;\ny[45] = 2.43611648561856820000;\ny[46] = 2.45809539233734360000;\ny[47] = 2.47960159755830700000;\ny[48] = 2.50065500675613930000;\ny[49] = 2.52127429395887500000;\ny[50] = 2.54147700127639450000;\ny[51] = 2.56127962857257430000;\ny[52] = 2.58069771442967570000;\ny[53] = 2.59974590940037050000;\ny[54] = 2.61843804241252310000;\ny[55] = 2.63678718108071930000;\ny[56] = 2.65480568658339780000;\ny[57] = 2.67250526368279880000;\ny[58] = 2.68989700639466770000;\ny[59] = 2.70699143975396780000;\ny[60] = 2.72379855807034900000;\ny[61] = 2.74032786002155990000;\ny[62] = 2.75658838089334020000;\ny[63] = 2.77258872223978110000;\n\n\nvar val;\nfor (i = 0; i < vnum; i++)\n{\n\tval = Math.log(x[i]);\n\tif (!isEqual(val, y[i]))\n\t{\n\t\t$ERROR(\"\\nx = \" + x[i] + \"\\nlibc.log(x) = \" + y[i] + \"\\nMath.log(x) = \" + Math.log(x[i]) + \"\\nMath.abs(libc.log(x) - Math.log(x)) > \" + prec + \"\\n\\n\"); \n\t}\n}\n",
    "id": "S15.8.2.10_A6"
   }
  ]
 }
}
