{
 "testCollection": {
  "name": "7.8.4_String_Literals",
  "numTests": 55,
  "tests": [
   {
    "section": "7.8.4",
    "description": "DoubleStringCharacter :: SourceCharacter but not double-quote \" or LineTerminator",
    "negative": "",
    "test": "//CHECK#1\n\"\"\"\n",
    "id": "S7.8.4_A1.1_T1"
   },
   {
    "section": "7.8.4",
    "description": "DoubleStringCharacter :: SourceCharacter but not double-quote \" or LineTerminator",
    "negative": "",
    "test": "//CHECK#1\n\"\n\"\n",
    "id": "S7.8.4_A1.1_T2"
   },
   {
    "section": "7.8.4",
    "description": "SingleStringCharacter :: SourceCharacter but not single-quote ' or LineTerminator",
    "negative": "",
    "test": "//CHECK#1\n'''\n",
    "id": "S7.8.4_A1.2_T1"
   },
   {
    "section": "7.8.4",
    "description": "SingleStringCharacter :: SourceCharacter but not single-quote ' or LineTerminator",
    "negative": "",
    "test": "//CHECK#1\n'\n'\n",
    "id": "S7.8.4_A1.2_T2"
   },
   {
    "section": "7.8.4",
    "description": "Check ENGLISH CAPITAL ALPHABET",
    "test": "//CHECK#A-Z\nunicode = [\"\\u0041\", \"\\u0042\", \"\\u0043\", \"\\u0044\", \"\\u0045\", \"\\u0046\", \"\\u0047\", \"\\u0048\", \"\\u0049\", \"\\u004A\", \"\\u004B\", \"\\u004C\", \"\\u004D\", \"\\u004E\", \"\\u004F\", \"\\u0050\", \"\\u0051\", \"\\u0052\", \"\\u0053\", \"\\u0054\", \"\\u0055\", \"\\u0056\", \"\\u0057\", \"\\u0058\", \"\\u0059\", \"\\u005A\"];\ncharacter = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\nfor (index = 0; index <= 25; index++) {\n  if (unicode[index] !== character[index]) {\n    $ERROR('#' + character[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A2.1_T1"
   },
   {
    "section": "7.8.4",
    "description": "Check ENGLISH SMALL ALPHABET",
    "test": "//CHECK#a-z\nhex = [\"\\u0061\", \"\\u0062\", \"\\u0063\", \"\\u0064\", \"\\u0065\", \"\\u0066\", \"\\u0067\", \"\\u0068\", \"\\u0069\", \"\\u006A\", \"\\u006B\", \"\\u006C\", \"\\u006D\", \"\\u006E\", \"\\u006F\", \"\\u0070\", \"\\u0071\", \"\\u0072\", \"\\u0073\", \"\\u0074\", \"\\u0075\", \"\\u0076\", \"\\u0077\", \"\\u0078\", \"\\u0079\", \"\\u007A\"];\ncharacter = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\nfor (index = 0; index <= 25; index++) {\n  if (hex[index] !== character[index]) {\n    $ERROR('#' + character[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A2.1_T2"
   },
   {
    "section": "7.8.4",
    "description": "Check RUSSIAN CAPITAL ALPHABET",
    "test": "//CHECK#А-Я\nunicode = [\"\\u0410\", \"\\u0411\", \"\\u0412\", \"\\u0413\", \"\\u0414\", \"\\u0415\", \"\\u0416\", \"\\u0417\", \"\\u0418\", \"\\u0419\", \"\\u041A\", \"\\u041B\", \"\\u041C\", \"\\u041D\", \"\\u041E\", \"\\u041F\", \"\\u0420\", \"\\u0421\", \"\\u0422\", \"\\u0423\", \"\\u0424\", \"\\u0425\", \"\\u0426\", \"\\u0427\", \"\\u0428\", \"\\u0429\", \"\\u042A\", \"\\u042B\", \"\\u042C\", \"\\u042D\", \"\\u042E\", \"\\u042F\", \"\\u0401\"];\ncharacter = [\"А\", \"Б\", \"В\", \"Г\", \"Д\", \"Е\", \"Ж\", \"З\", \"И\", \"Й\", \"К\", \"Л\", \"М\", \"Н\", \"О\", \"П\", \"Р\", \"С\", \"Т\", \"У\", \"Ф\", \"Х\", \"Ц\", \"Ч\", \"Ш\", \"Щ\", \"Ъ\", \"Ы\", \"Ь\", \"Э\", \"Ю\", \"Я\", \"Ё\"];\nfor (index = 0; index <= 32; index++) {\n  if (unicode[index] !== character[index]) {\n    $ERROR('#' + character[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A2.2_T1"
   },
   {
    "section": "7.8.4",
    "description": "Check RUSSIAN SMALL ALPHABET",
    "test": "//CHECK#а-я\nunicode = [\"\\u0430\", \"\\u0431\", \"\\u0432\", \"\\u0433\", \"\\u0434\", \"\\u0435\", \"\\u0436\", \"\\u0437\", \"\\u0438\", \"\\u0439\", \"\\u043A\", \"\\u043B\", \"\\u043C\", \"\\u043D\", \"\\u043E\", \"\\u043F\", \"\\u0440\", \"\\u0441\", \"\\u0442\", \"\\u0443\", \"\\u0444\", \"\\u0445\", \"\\u0446\", \"\\u0447\", \"\\u0448\", \"\\u0449\", \"\\u044A\", \"\\u044B\", \"\\u044C\", \"\\u044D\", \"\\u044E\", \"\\u044F\", \"\\u0451\"];\ncharacter = [\"а\", \"б\", \"в\", \"г\", \"д\", \"е\", \"ж\", \"з\", \"и\", \"й\", \"к\", \"л\", \"м\", \"н\", \"о\", \"п\", \"р\", \"с\", \"т\", \"у\", \"ф\", \"х\", \"ц\", \"ч\", \"ш\", \"щ\", \"ъ\", \"ы\", \"ь\", \"э\", \"ю\", \"я\", \"ё\"];\nfor (index = 0; index <= 32; index++) {\n  if (unicode[index] !== character[index]) {\n    $ERROR('#' + character[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A2.2_T2"
   },
   {
    "section": "7.8.4",
    "description": "Check DIGITS",
    "test": "//CHECK#0-9\nunicode = [\"\\u0030\", \"\\u0031\", \"\\u0032\", \"\\u0033\", \"\\u0034\", \"\\u0035\", \"\\u0036\", \"\\u0037\", \"\\u0038\", \"\\u0039\"];\ncharacter = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nfor (index = 0; index <= 9; index++) {\n  if (unicode[index] !== character[index]) {\n    $ERROR('#' + character[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A2.3_T1"
   },
   {
    "section": "7.8.4",
    "description": "Checking if execution of \"\\\" fails",
    "negative": "",
    "test": "//CHECK#1\n\"\\\"\n",
    "id": "S7.8.4_A3.1_T1"
   },
   {
    "section": "7.8.4",
    "description": "Checking if execution of \"'\\'\" fails",
    "negative": "",
    "test": "//CHECK#1\n'\\'\n",
    "id": "S7.8.4_A3.1_T2"
   },
   {
    "section": "7.8.4",
    "description": "Checking if execution of \"\\\\\\\" fails",
    "negative": "",
    "test": "//CHECK#1\n\"\\\\\\\"\n",
    "id": "S7.8.4_A3.2_T1"
   },
   {
    "section": "7.8.4",
    "description": "Checking if execution of '\\\\\\' fails",
    "negative": "",
    "test": "//CHECK#1\n'\\\\\\'\n",
    "id": "S7.8.4_A3.2_T2"
   },
   {
    "section": "7.8.4",
    "description": "SingleEscapeSequence :: one of b f n r t v",
    "test": "//CHECK#1\nif (String.fromCharCode(0x0008) !== \"\\b\") {\n  $ERROR('#1: String.fromCharCode(0x0008) === \"\\\\b\"');\n}\n\n//CHECK#2\nif (String.fromCharCode(0x0009) !== \"\\t\") {\n  $ERROR('#2: String.fromCharCode(0x0009) === \"\\\\t\"');\n}\n\n//CHECK#3\nif (String.fromCharCode(0x000A) !== \"\\n\") {\n  $ERROR('#3: String.fromCharCode(0x000A) === \"\\\\n\"');\n}\n\n//CHECK#4\nif (String.fromCharCode(0x000B) !== \"\\v\") {\n  $ERROR('#4: String.fromCharCode(0x000B) === \"\\\\v\"');\n}\n\n//CHECK#5\nif (String.fromCharCode(0x000C) !== \"\\f\") {\n  $ERROR('#5: String.fromCharCode(0x000C) === \"\\\\f\"');\n}\n\n//CHECK#6\nif (String.fromCharCode(0x000D) !== \"\\r\") {\n  $ERROR('#6: String.fromCharCode(0x000D) === \"\\\\r\"');\n}\n",
    "id": "S7.8.4_A4.1_T1"
   },
   {
    "section": "7.8.4",
    "description": "SingleEscapeSequence :: one of ' \" \\",
    "test": "//CHECK#1\nif (String.fromCharCode(0x0027) !== \"\\'\") {\n  $ERROR('#1: String.fromCharCode(0x0027) === \"\\\\\\'\"');\n}\n\n//CHECK#2\nif (String.fromCharCode(0x0022) !== '\\\"') {\n  $ERROR('#2: String.fromCharCode(0x0027) === \\'\\\\\\\"\\'');\n}\n\n//CHECK#3\nif (String.fromCharCode(0x005C) !== \"\\\\\") {\n  $ERROR('#3: String.fromCharCode(0x005C) === \"\\\\\\\"');\n}\n\n//CHECK#4\nif (\"\\'\" !== \"'\") {\n  $ERROR('#4: \"\\'\" === \"\\\\\\'\"');\n}\n\n//CHECK#5\nif ('\\\"' !== '\"') {\n  $ERROR('#5: \\'\\\"\\' === \\'\\\\\\\"\\'');\n}\n",
    "id": "S7.8.4_A4.1_T2"
   },
   {
    "section": "7.8.4",
    "description": "NonEscapeSequence :: ENGLISH CAPITAL ALPHABET",
    "test": "//CHECK#A-Z\nCharacterCode = [0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A, 0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A];\nNonEscapeCharacter = [\"\\A\", \"\\B\", \"\\C\", \"\\D\", \"\\E\", \"\\F\", \"\\G\", \"\\H\", \"\\I\", \"\\J\", \"\\K\", \"\\L\", \"\\M\", \"\\N\", \"\\O\", \"\\P\", \"\\Q\", \"\\R\", \"\\S\", \"\\T\", \"\\U\", \"\\V\", \"\\W\", \"\\X\", \"\\Y\", \"\\Z\"];\nfor (index = 0; index <= 25; index++) {\n  if (String.fromCharCode(CharacterCode[index]) !== NonEscapeCharacter[index]) {\n    $ERROR('#' + NonEscapeCharacter[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A4.2_T1"
   },
   {
    "section": "7.8.4",
    "description": "NonEscapeSequence :: ENGLISH CAPITAL ALPHABET",
    "test": "//CHECK#A-Z\nif (\"A\" !== \"\\A\") {\n  $ERROR('#A');\n}\n\nif (\"B\" !== \"\\B\") {\n  $ERROR('#B');\n}\n\nif (\"C\" !== \"\\C\") {\n  $ERROR('#C');\n}\n\nif (\"D\" !== \"\\D\") {\n  $ERROR('#D');\n}\n\nif (\"E\" !== \"\\E\") {\n  $ERROR('#E');\n}\n\nif (\"F\" !== \"\\F\") {\n  $ERROR('#F');\n}\n\nif (\"G\" !== \"\\G\") {\n  $ERROR('#G');\n}\n\nif (\"H\" !== \"\\H\") {\n  $ERROR('#H');\n}\n\nif (\"I\" !== \"\\I\") {\n  $ERROR('#I');\n}\n\nif (\"J\" !== \"\\J\") {\n  $ERROR('#J');\n}\n\nif (\"K\" !== \"\\K\") {\n  $ERROR('#K');\n}\n\nif (\"L\" !== \"\\L\") {\n  $ERROR('#L');\n}\n\nif (\"M\" !== \"\\M\") {\n  $ERROR('#M');\n}\n\nif (\"N\" !== \"\\N\") {\n  $ERROR('#N');\n}\n\nif (\"O\" !== \"\\O\") {\n  $ERROR('#O');\n}\n\nif (\"P\" !== \"\\P\") {\n  $ERROR('#P');\n}\n\nif (\"Q\" !== \"\\Q\") {\n  $ERROR('#Q');\n}\n\nif (\"R\" !== \"\\R\") {\n  $ERROR('#R');\n}\n\nif (\"S\" !== \"\\S\") {\n  $ERROR('#S');\n}\n\nif (\"T\" !== \"\\T\") {\n  $ERROR('#T');\n}\n\nif (\"U\" !== \"\\U\") {\n  $ERROR('#U');\n}\n\nif (\"V\" !== \"\\V\") {\n  $ERROR('#V');\n}\n\nif (\"W\" !== \"\\W\") {\n  $ERROR('#W');\n}\n\nif (\"X\" !== \"\\X\") {\n  $ERROR('#X');\n}\n\nif (\"Y\" !== \"\\Y\") {\n  $ERROR('#Y');\n}\n\nif (\"Z\" !== \"\\Z\") {\n  $ERROR('#Z');\n}\n",
    "id": "S7.8.4_A4.2_T2"
   },
   {
    "section": "7.8.4",
    "description": "NonEscapeSequence :: ENGLISH SMALL ALPHABET",
    "test": "//CHECK#a-z without b, f, n, r, t, v, x, u\nCharacterCode = [0x0061, 0x0063, 0x0064, 0x0065, 0x0067, 0x0068, 0x0069, 0x006A, 0x006B, 0x006C, 0x006D, 0x006F, 0x0070, 0x0071, 0x0073, 0x0077, 0x0079, 0x007A];\nNonEscapeCharacter = [\"\\a\", \"\\c\", \"\\d\", \"\\e\", \"\\g\", \"\\h\", \"\\i\", \"\\j\", \"\\k\", \"\\l\", \"\\m\", \"\\o\", \"\\p\", \"\\q\", \"\\s\", \"\\w\", \"\\y\", \"\\z\"];\nfor (index = 0; index <= 17; index++) {\n  if (String.fromCharCode(CharacterCode[index]) !== NonEscapeCharacter[index]) {\n    $ERROR('#' + NonEscapeCharacter[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A4.2_T3"
   },
   {
    "section": "7.8.4",
    "description": "NonEscapeSequence :: ENGLISH SMALL ALPHABET",
    "test": "//CHECK#a-z without b, f, n, r, t, v, x, u\n\nif (\"a\" !== \"\\a\") {\n  $ERROR('#a');\n}\n\nif (\"c\" !== \"\\c\") {\n  $ERROR('#c');\n}\n\nif (\"d\" !== \"\\d\") {\n  $ERROR('#d');\n}\n\nif (\"e\" !== \"\\e\") {\n  $ERROR('#e');\n}\n\nif (\"g\" !== \"\\g\") {\n  $ERROR('#g');\n}\n\nif (\"h\" !== \"\\h\") {\n  $ERROR('#h');\n}\n\nif (\"i\" !== \"\\i\") {\n  $ERROR('#i');\n}\n\nif (\"j\" !== \"\\j\") {\n  $ERROR('#j');\n}\n\nif (\"k\" !== \"\\k\") {\n  $ERROR('#k');\n}\n\nif (\"l\" !== \"\\l\") {\n  $ERROR('#l');\n}\n\nif (\"m\" !== \"\\m\") {\n  $ERROR('#m');\n}\n\n\nif (\"o\" !== \"\\o\") {\n  $ERROR('#o');\n}\n\nif (\"p\" !== \"\\p\") {\n  $ERROR('#p');\n}\n\nif (\"q\" !== \"\\q\") {\n  $ERROR('#q');\n}\n\nif (\"s\" !== \"\\s\") {\n  $ERROR('#s');\n}\n\nif (\"w\" !== \"\\w\") {\n  $ERROR('#w');\n}\n\nif (\"y\" !== \"\\y\") {\n  $ERROR('#y');\n}\n\nif (\"z\" !== \"\\z\") {\n  $ERROR('#z');\n}\n\n",
    "id": "S7.8.4_A4.2_T4"
   },
   {
    "section": "7.8.4",
    "description": "NonEscapeSequence :: RUSSIAN CAPITAL ALPHABET",
    "test": "//CHECK#А-Я\nCharacterCode = [0x0410, 0x0411, 0x0412, 0x0413, 0x0414, 0x0415, 0x0416, 0x0417, 0x0418, 0x0419, 0x041A, 0x041B, 0x041C, 0x041D, 0x041E, 0x041F, 0x0420, 0x0421, 0x0422, 0x0423, 0x0424, 0x0425, 0x0426, 0x0427, 0x0428, 0x0429, 0x042A, 0x042B, 0x042C, 0x042D, 0x042E, 0x042F, 0x0401];\nNonEscapeCharacter = [\"\\А\", \"\\Б\", \"\\В\", \"\\Г\", \"\\Д\", \"\\Е\", \"\\Ж\", \"\\З\", \"\\И\", \"\\Й\", \"\\К\", \"\\Л\", \"\\М\", \"\\Н\", \"\\О\", \"\\П\", \"\\Р\", \"\\С\", \"\\Т\", \"\\У\", \"\\Ф\", \"\\Х\", \"\\Ц\", \"\\Ч\", \"\\Ш\", \"\\Щ\", \"\\Ъ\", \"\\Ы\", \"\\Ь\", \"\\Э\", \"\\Ю\", \"\\Я\", \"\\Ё\"];\nfor (index = 0; index <= 32; index++) {\n  if (String.fromCharCode(CharacterCode[index]) !== NonEscapeCharacter[index]) {\n    $ERROR('#' + NonEscapeCharacter[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A4.2_T5"
   },
   {
    "section": "7.8.4",
    "description": "NonEscapeSequence :: RUSSIAN CAPITAL ALPHABET",
    "test": "//CHECK#А-Я\n\nif (\"А\" !== \"\\А\") {\n  $ERROR('#А');\n}\n\nif (\"Б\" !== \"\\Б\") {\n  $ERROR('#Б');\n}\n\nif (\"В\" !== \"\\В\") {\n  $ERROR('#В');\n}\n\nif (\"Г\" !== \"\\Г\") {\n  $ERROR('#Г');\n}\n\nif (\"Д\" !== \"\\Д\") {\n  $ERROR('#Д');\n}\n\nif (\"Е\" !== \"\\Е\") {\n  $ERROR('#Е');\n}\n\nif (\"Ж\" !== \"\\Ж\") {\n  $ERROR('#Ж');\n}\n\nif (\"З\" !== \"\\З\") {\n  $ERROR('#З');\n}\n\nif (\"И\" !== \"\\И\") {\n  $ERROR('#И');\n}\n\nif (\"Й\" !== \"\\Й\") {\n  $ERROR('#Й');\n}\n\nif (\"К\" !== \"\\К\") {\n  $ERROR('#К');\n}\n\nif (\"Л\" !== \"\\Л\") {\n  $ERROR('#Л');\n}\n\nif (\"М\" !== \"\\М\") {\n  $ERROR('#М');\n}\n\nif (\"Н\" !== \"\\Н\") {\n  $ERROR('#Н');\n}\n\nif (\"О\" !== \"\\О\") {\n  $ERROR('#О');\n}\n\nif (\"П\" !== \"\\П\") {\n  $ERROR('#П');\n}\n\nif (\"Р\" !== \"\\Р\") {\n  $ERROR('#Р');\n}\n\nif (\"С\" !== \"\\С\") {\n  $ERROR('#С');\n}\n\nif (\"Т\" !== \"\\Т\") {\n  $ERROR('#Т');\n}\n\nif (\"У\" !== \"\\У\") {\n  $ERROR('#У');\n}\n\nif (\"Ф\" !== \"\\Ф\") {\n  $ERROR('#Ф');\n}\n\nif (\"Х\" !== \"\\Х\") {\n  $ERROR('#Х');\n}\n\nif (\"Ц\" !== \"\\Ц\") {\n  $ERROR('#Ц');\n}\n\nif (\"Ч\" !== \"\\Ч\") {\n  $ERROR('#Ч');\n}\n\nif (\"Ш\" !== \"\\Ш\") {\n  $ERROR('#Ш');\n}\n\nif (\"Щ\" !== \"\\Щ\") {\n  $ERROR('#Щ');\n}\n\nif (\"Ъ\" !== \"\\Ъ\") {\n  $ERROR('#Ъ');\n}\n\nif (\"Ы\" !== \"\\Ы\") {\n  $ERROR('#Ы');\n}\n\nif (\"Ь\" !== \"\\Ь\") {\n  $ERROR('#Ь');\n}\n\nif (\"Э\" !== \"\\Э\") {\n  $ERROR('#Э');\n}\n\nif (\"Ю\" !== \"\\Ю\") {\n  $ERROR('#Ю');\n}\n\nif (\"Я\" !== \"\\Я\") {\n  $ERROR('#Я');\n}\n\nif (\"Ё\" !== \"\\Ё\") {\n  $ERROR('#Ё');\n}\n",
    "id": "S7.8.4_A4.2_T6"
   },
   {
    "section": "7.8.4",
    "description": "NonEscapeSequence :: RUSSIAN SMALL ALPHABET",
    "test": "//CHECK#а-я\nCharacterCode = [0x0430, 0x0431, 0x0432, 0x0433, 0x0434, 0x0435, 0x0436, 0x0437, 0x0438, 0x0439, 0x043A, 0x043B, 0x043C, 0x043D, 0x043E, 0x043F, 0x0440, 0x0441, 0x0442, 0x0443, 0x0444, 0x0445, 0x0446, 0x0447, 0x0448, 0x0449, 0x044A, 0x044B, 0x044C, 0x044D, 0x044E, 0x044F, 0x0451];\nNonEscapeCharacter = [\"\\а\", \"\\б\", \"\\в\", \"\\г\", \"\\д\", \"\\е\", \"\\ж\", \"\\з\", \"\\и\", \"\\й\", \"\\к\", \"\\л\", \"\\м\", \"\\н\", \"\\о\", \"\\п\", \"\\р\", \"\\с\", \"\\т\", \"\\у\", \"\\ф\", \"\\х\", \"\\ц\", \"\\ч\", \"\\ш\", \"\\щ\", \"\\ъ\", \"\\ы\", \"\\ь\", \"\\э\", \"\\ю\", \"\\я\", \"\\ё\"];\nfor (index = 0; index <= 32; index++) {\n  if (String.fromCharCode(CharacterCode[index]) !== NonEscapeCharacter[index]) {\n    $ERROR('#' + NonEscapeCharacter[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A4.2_T7"
   },
   {
    "section": "7.8.4",
    "description": "NonEscapeSequence :: RUSSIAN SMALL ALPHABET",
    "test": "//CHECK#а-я\n\nif (\"а\" !== \"\\а\") {\n  $ERROR('#а');\n}\n\nif (\"б\" !== \"\\б\") {\n  $ERROR('#б');\n}\n\nif (\"в\" !== \"\\в\") {\n  $ERROR('#в');\n}\n\nif (\"г\" !== \"\\г\") {\n  $ERROR('#г');\n}\n\nif (\"д\" !== \"\\д\") {\n  $ERROR('#д');\n}\n\nif (\"е\" !== \"\\е\") {\n  $ERROR('#е');\n}\n\nif (\"ж\" !== \"\\ж\") {\n  $ERROR('#ж');\n}\n\nif (\"з\" !== \"\\з\") {\n  $ERROR('#з');\n}\n\nif (\"и\" !== \"\\и\") {\n  $ERROR('#и');\n}\n\nif (\"й\" !== \"\\й\") {\n  $ERROR('#й');\n}\n\nif (\"к\" !== \"\\к\") {\n  $ERROR('#к');\n}\n\nif (\"л\" !== \"\\л\") {\n  $ERROR('#л');\n}\n\nif (\"м\" !== \"\\м\") {\n  $ERROR('#м');\n}\n\nif (\"н\" !== \"\\н\") {\n  $ERROR('#н');\n}\n\nif (\"о\" !== \"\\о\") {\n  $ERROR('#о');\n}\n\nif (\"п\" !== \"\\п\") {\n  $ERROR('#п');\n}\n\nif (\"р\" !== \"\\р\") {\n  $ERROR('#р');\n}\n\nif (\"с\" !== \"\\с\") {\n  $ERROR('#с');\n}\n\nif (\"т\" !== \"\\т\") {\n  $ERROR('#т');\n}\n\nif (\"у\" !== \"\\у\") {\n  $ERROR('#у');\n}\n\nif (\"ф\" !== \"\\ф\") {\n  $ERROR('#ф');\n}\n\nif (\"х\" !== \"\\х\") {\n  $ERROR('#х');\n}\n\nif (\"ц\" !== \"\\ц\") {\n  $ERROR('#ц');\n}\n\nif (\"ч\" !== \"\\ч\") {\n  $ERROR('#ч');\n}\n\nif (\"ш\" !== \"\\ш\") {\n  $ERROR('#ш');\n}\n\nif (\"щ\" !== \"\\щ\") {\n  $ERROR('#щ');\n}\n\nif (\"ъ\" !== \"\\ъ\") {\n  $ERROR('#ъ');\n}\n\nif (\"ы\" !== \"\\ы\") {\n  $ERROR('#ы');\n}\n\nif (\"ь\" !== \"\\ь\") {\n  $ERROR('#ь');\n}\n\nif (\"э\" !== \"\\э\") {\n  $ERROR('#э');\n}\n\nif (\"ю\" !== \"\\ю\") {\n  $ERROR('#ю');\n}\n\nif (\"я\" !== \"\\я\") {\n  $ERROR('#я');\n}\n\nif (\"ё\" !== \"\\ё\") {\n  $ERROR('#ё');\n}\n",
    "id": "S7.8.4_A4.2_T8"
   },
   {
    "section": "7.8.4",
    "description": "EscapeCharacter :: DecimalDigits :: 1",
    "negative": "",
    "test": "//CHECK#1\n\"\\1\"\n",
    "id": "S7.8.4_A4.3_T1"
   },
   {
    "section": "7.8.4",
    "description": "EscapeCharacter :: DecimalDigits :: 7",
    "negative": "",
    "test": "//CHECK#1\n\"\\7\"\n",
    "id": "S7.8.4_A4.3_T2"
   },
   {
    "section": "7.8.4",
    "description": "EscapeCharacter :: DecimalDigits :: 8",
    "negative": "",
    "test": "//CHECK#1\n\"\\8\"\n",
    "id": "S7.8.4_A4.3_T3"
   },
   {
    "section": "7.8.4",
    "description": "EscapeCharacter :: DecimalDigits :: 9",
    "negative": "",
    "test": "//CHECK#1\n\"\\9\"\n",
    "id": "S7.8.4_A4.3_T4"
   },
   {
    "section": "7.8.4",
    "description": "EscapeCharacter :: u",
    "negative": "",
    "test": "//CHECK#1\n\"\\u\"\n",
    "id": "S7.8.4_A4.3_T5"
   },
   {
    "section": "7.8.4",
    "description": "EscapeCharacter :: x",
    "negative": "",
    "test": "//CHECK#1\n\"\\x\"\n",
    "id": "S7.8.4_A4.3_T6"
   },
   {
    "section": "7.8.4",
    "description": "EscapeCharacter :: SingleEscapeCharacter :: one of b f n r t v",
    "test": "//CHECK#bfnrtv\nif (\"b\" === \"\\b\") {\n  $ERROR('#b')\n}\n\nif (\"f\" === \"\\f\") {\n  $ERROR('#f')\n}\n\nif (\"n\" === \"\\n\") {\n  $ERROR('#n')\n}\n\nif (\"r\" === \"\\r\") {\n  $ERROR('#r')\n}\n\nif (\"t\" === \"\\t\") {\n  $ERROR('#t')\n}\n\nif (\"v\" === \"\\v\") {\n  $ERROR('#v')\n}\n\n",
    "id": "S7.8.4_A4.3_T7"
   },
   {
    "section": "7.8.4",
    "description": "String.fromCharCode(0x0000)",
    "test": "//CHECK#1\nif (String.fromCharCode(0x0000) !== \"\\0\") {\n  $ERROR('#1: String.fromCharCode(0x0000) === \"\\\\0\"');\n}\n",
    "id": "S7.8.4_A5.1_T1"
   },
   {
    "section": "7.8.4",
    "description": "\"\\u0000\"",
    "test": "//CHECK#1\nif (\"\\u0000\" !== \"\\0\") {\n  $ERROR('#1: \"\\\\u0000\" === \"\\\\0\"');\n}\n",
    "id": "S7.8.4_A5.1_T2"
   },
   {
    "section": "7.8.4",
    "description": "\"\\x00\"",
    "test": "//CHECK#1\nif (\"\\x00\" !== \"\\0\") {\n  $ERROR('#1: \"\\\\x00\" === \"\\\\0\"');\n}\n",
    "id": "S7.8.4_A5.1_T3"
   },
   {
    "section": "7.8.4",
    "description": "HexEscapeSequence ::  HexDigit",
    "test": "//CHECK#0\nif (\"\\x00\" !== String.fromCharCode(\"0\")) {\n  $ERROR('#0: \"\\\\x00\" === String.fromCharCode(\"0\")');\n}\n\n//CHECK#1\nif (\"\\x01\" !== String.fromCharCode(\"1\")) {\n  $ERROR('#1: \"\\\\x01\" === String.fromCharCode(\"1\")');\n}\n\n//CHECK#2\nif (\"\\x02\" !== String.fromCharCode(\"2\")) {\n  $ERROR('#2: \"\\\\x02\" === String.fromCharCode(\"2\")');\n}\n\n//CHECK#3\nif (\"\\x03\" !== String.fromCharCode(\"3\")) {\n  $ERROR('#3: \"\\\\x03\" === String.fromCharCode(\"3\")');\n}\n\n//CHECK#4\nif (\"\\x04\" !== String.fromCharCode(\"4\")) {\n  $ERROR('#4: \"\\\\x04\" === String.fromCharCode(\"4\")');\n}\n\n//CHECK#5\nif (\"\\x05\" !== String.fromCharCode(\"5\")) {\n  $ERROR('#5: \"\\\\x05\" === String.fromCharCode(\"5\")');\n}\n\n//CHECK#6\nif (\"\\x06\" !== String.fromCharCode(\"6\")) {\n  $ERROR('#6: \"\\\\x06\" === String.fromCharCode(\"6\")');\n}\n\n//CHECK#7\nif (\"\\x07\" !== String.fromCharCode(\"7\")) {\n  $ERROR('#7: \"\\\\x07\" === String.fromCharCode(\"7\")');\n}\n\n//CHECK#8\nif (\"\\x08\" !== String.fromCharCode(\"8\")) {\n  $ERROR('#8: \"\\\\x08\" === String.fromCharCode(\"8\")');\n}\n\n//CHECK#9\nif (\"\\x09\" !== String.fromCharCode(\"9\")) {\n  $ERROR('#9: \"\\\\x09\" === String.fromCharCode(\"9\")');\n}\n\n//CHECK#A\nif (\"\\x0A\" !== String.fromCharCode(\"10\")) {\n  $ERROR('#A: \"\\\\x0A\" === String.fromCharCode(\"10\")');\n}\n\n//CHECK#B\nif (\"\\x0B\" !== String.fromCharCode(\"11\")) {\n  $ERROR('#B: \"\\\\x0B\" === String.fromCharCode(\"11\")');\n}\n\n//CHECK#C\nif (\"\\x0C\" !== String.fromCharCode(\"12\")) {\n  $ERROR('#C: \"\\\\x0C\" === String.fromCharCode(\"12\")');\n}\n\n//CHECK#D\nif (\"\\x0D\" !== String.fromCharCode(\"13\")) {\n  $ERROR('#D: \"\\\\x0D\" === String.fromCharCode(\"13\")');\n}\n\n//CHECK#E\nif (\"\\x0E\" !== String.fromCharCode(\"14\")) {\n  $ERROR('#E: \"\\\\x0E\" === String.fromCharCode(\"14\")');\n}\n\n//CHECK#F\nif (\"\\x0F\" !== String.fromCharCode(\"15\")) {\n  $ERROR('#F: \"\\\\x0F\" === String.fromCharCode(\"15\")');\n}\n",
    "id": "S7.8.4_A6.1_T1"
   },
   {
    "section": "7.8.4",
    "description": "HexEscapeSequence ::  ENGLISH CAPITAL ALPHABET",
    "test": "//CHECK#A-Z\nhex = [\"\\x41\", \"\\x42\", \"\\x43\", \"\\x44\", \"\\x45\", \"\\x46\", \"\\x47\", \"\\x48\", \"\\x49\", \"\\x4A\", \"\\x4B\", \"\\x4C\", \"\\x4D\", \"\\x4E\", \"\\x4F\", \"\\x50\", \"\\x51\", \"\\x52\", \"\\x53\", \"\\x54\", \"\\x55\", \"\\x56\", \"\\x57\", \"\\x58\", \"\\x59\", \"\\x5A\"];\ncharacter = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\nfor (index = 0; index <= 25; index++) {\n  if (hex[index] !== character[index]) {\n    $ERROR('#' + character[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A6.1_T2"
   },
   {
    "section": "7.8.4",
    "description": "HexEscapeSequence ::  ENGLISH SMALL ALPHABET",
    "test": "//CHECK#a-z\nhex = [\"\\x61\", \"\\x62\", \"\\x63\", \"\\x64\", \"\\x65\", \"\\x66\", \"\\x67\", \"\\x68\", \"\\x69\", \"\\x6A\", \"\\x6B\", \"\\x6C\", \"\\x6D\", \"\\x6E\", \"\\x6F\", \"\\x70\", \"\\x71\", \"\\x72\", \"\\x73\", \"\\x74\", \"\\x75\", \"\\x76\", \"\\x77\", \"\\x78\", \"\\x79\", \"\\x7A\"];\ncharacter = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\nfor (index = 0; index <= 25; index++) {\n  if (hex[index] !== character[index]) {\n    $ERROR('#' + character[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A6.1_T3"
   },
   {
    "section": "7.8.4",
    "description": "HexEscapeSequence :: x0G is incorrect",
    "negative": "",
    "test": "//CHECK#\n\"\\x0G\"\n",
    "id": "S7.8.4_A6.1_T4"
   },
   {
    "section": "7.8.4",
    "description": "HexDigit :: 1",
    "negative": "",
    "test": "//CHECK#1\n\"\\x1\"\n",
    "id": "S7.8.4_A6.2_T1"
   },
   {
    "section": "7.8.4",
    "description": "HexDigit :: A",
    "negative": "",
    "test": "//CHECK#1\n\"\\xA\"\n",
    "id": "S7.8.4_A6.2_T2"
   },
   {
    "section": "7.8.4",
    "description": "Check similar to ('\\x01F' === String.fromCharCode('1') + 'F')",
    "test": "//CHECK#1\nif ('\\x01F' !== String.fromCharCode('1') + 'F') {\n  $ERROR(\"#1: '\\x01F' === String.fromCharCode('1') + 'F'\");\n}\n\n//CHECK#2\nif ('\\x02E' !== String.fromCharCode('2') + 'E') {\n  $ERROR(\"#2: '\\x02E' === String.fromCharCode('2') + 'E'\");\n}\n\n//CHECK#3\nif ('\\x03D' !== String.fromCharCode('3') + 'D') {\n  $ERROR(\"#3: '\\x03D' === String.fromCharCode('3') + 'D'\");\n}\n\n//CHECK#4\nif ('\\x04C' !== String.fromCharCode('4') + 'C') {\n  $ERROR(\"#4: '\\x04C' === String.fromCharCode('4') + 'C'\");\n}\n\n//CHECK#5\nif ('\\x05B' !== String.fromCharCode('5') + 'B') {\n  $ERROR(\"#5: '\\x05B' === String.fromCharCode('5') + 'B'\");\n}\n\n//CHECK#6\nif ('\\x06A' !== String.fromCharCode('6') + 'A') {\n  $ERROR(\"#6: '\\x06A' === String.fromCharCode('6') + 'A'\");\n}\n\n//CHECK#7\nif ('\\x079' !== String.fromCharCode('7') + '9') {\n  $ERROR(\"#7: '\\x079' === String.fromCharCode('7') + '9'\");\n}\n\n//CHECK#8\nif ('\\x088' !== String.fromCharCode('8') + '8') {\n  $ERROR(\"#8: '\\x088' === String.fromCharCode('8') + '8'\");\n}\n\n//CHECK#9\nif ('\\x097' !== String.fromCharCode('9') + '7') {\n  $ERROR(\"#9: '\\x097' === String.fromCharCode('9') + '7'\");\n}\n\n//CHECK#A\nif ('\\x0A6' !== String.fromCharCode('10') + '6') {\n  $ERROR(\"#A: '\\x0A6' === String.fromCharCode('10') + '6'\");\n}\n\n//CHECK#B\nif ('\\x0B5' !== String.fromCharCode('11') + '5') {\n  $ERROR(\"#B: '\\x0B5' === String.fromCharCode('11') + '5'\");\n}\n\n//CHECK#C\nif ('\\x0C4' !== String.fromCharCode('12') + '4') {\n  $ERROR(\"#C: '\\x0C4' === String.fromCharCode('12') + '4'\");\n}\n\n//CHECK#D\nif ('\\x0D3' !== String.fromCharCode('13') + '3') {\n  $ERROR(\"#D: '\\x0D3' === String.fromCharCode('13') + '3'\");\n}\n\n//CHECK#E\nif ('\\x0E2' !== String.fromCharCode('14') + '2') {\n  $ERROR(\"#E: '\\x0E2' === String.fromCharCode('14') + '2'\");\n}\n\n//CHECK#F\nif ('\\x0F1' !== String.fromCharCode('15') + '1') {\n  $ERROR(\"#F: '\\x0F1' === String.fromCharCode('15') + '1'\");\n}\n",
    "id": "S7.8.4_A6.3_T1"
   },
   {
    "section": "7.8.4",
    "description": "Checking if execution of \"\\X01\" passes",
    "negative": "",
    "test": "//CHECK#1\n\"\\X01\"\n",
    "id": "S7.8.4_A6.4_T1"
   },
   {
    "section": "7.8.4",
    "description": "Checking if execution of \"\\X0A\" passes",
    "negative": "",
    "test": "//CHECK#1\n\"\\X0A\"\n",
    "id": "S7.8.4_A6.4_T2"
   },
   {
    "section": "7.8.4",
    "description": "Check similar to (\"\\u0000\" === String.fromCharCode(\"0\"))",
    "test": "//CHECK#0\nif (\"\\u0000\" !== String.fromCharCode(\"0\")) {\n  $ERROR('#0: \"\\\\u0000\" === String.fromCharCode(\"0\")');\n}\n\n//CHECK#1\nif (\"\\u0001\" !== String.fromCharCode(\"1\")) {\n  $ERROR('#1: \"\\\\u0001\" === String.fromCharCode(\"1\")');\n}\n\n//CHECK#2\nif (\"\\u0002\" !== String.fromCharCode(\"2\")) {\n  $ERROR('#2: \"\\\\u0002\" === String.fromCharCode(\"2\")');\n}\n\n//CHECK#3\nif (\"\\u0003\" !== String.fromCharCode(\"3\")) {\n  $ERROR('#3: \"\\\\u0003\" === String.fromCharCode(\"3\")');\n}\n\n//CHECK#4\nif (\"\\u0004\" !== String.fromCharCode(\"4\")) {\n  $ERROR('#4: \"\\\\u0004\" === String.fromCharCode(\"4\")');\n}\n\n//CHECK#5\nif (\"\\u0005\" !== String.fromCharCode(\"5\")) {\n  $ERROR('#5: \"\\\\u0005\" === String.fromCharCode(\"5\")');\n}\n\n//CHECK#6\nif (\"\\u0006\" !== String.fromCharCode(\"6\")) {\n  $ERROR('#6: \"\\\\u0006\" === String.fromCharCode(\"6\")');\n}\n\n//CHECK#7\nif (\"\\u0007\" !== String.fromCharCode(\"7\")) {\n  $ERROR('#7: \"\\\\u0007\" === String.fromCharCode(\"7\")');\n}\n\n//CHECK#8\nif (\"\\u0008\" !== String.fromCharCode(\"8\")) {\n  $ERROR('#8: \"\\\\u0008\" === String.fromCharCode(\"8\")');\n}\n\n//CHECK#9\nif (\"\\u0009\" !== String.fromCharCode(\"9\")) {\n  $ERROR('#9: \"\\\\u0009\" === String.fromCharCode(\"9\")');\n}\n\n//CHECK#A\nif (\"\\u000A\" !== String.fromCharCode(\"10\")) {\n  $ERROR('#A: \"\\\\u000A\" === String.fromCharCode(\"10\")');\n}\n\n//CHECK#B\nif (\"\\u000B\" !== String.fromCharCode(\"11\")) {\n  $ERROR('#B: \"\\\\u000B\" === String.fromCharCode(\"11\")');\n}\n\n//CHECK#C\nif (\"\\u000C\" !== String.fromCharCode(\"12\")) {\n  $ERROR('#C: \"\\\\u000C\" === String.fromCharCode(\"12\")');\n}\n\n//CHECK#D\nif (\"\\u000D\" !== String.fromCharCode(\"13\")) {\n  $ERROR('#D: \"\\\\u000D\" === String.fromCharCode(\"13\")');\n}\n\n//CHECK#E\nif (\"\\u000E\" !== String.fromCharCode(\"14\")) {\n  $ERROR('#E: \"\\\\u000E\" === String.fromCharCode(\"14\")');\n}\n\n//CHECK#F\nif (\"\\u000F\" !== String.fromCharCode(\"15\")) {\n  $ERROR('#F: \"\\\\u000F\" === String.fromCharCode(\"15\")');\n}\n",
    "id": "S7.8.4_A7.1_T1"
   },
   {
    "section": "7.8.4",
    "description": "UnicodeEscapeSequence ::  ENGLISH CAPITAL ALPHABET",
    "test": "//CHECK#A-Z\nunicode = [\"\\u0041\", \"\\u0042\", \"\\u0043\", \"\\u0044\", \"\\u0045\", \"\\u0046\", \"\\u0047\", \"\\u0048\", \"\\u0049\", \"\\u004A\", \"\\u004B\", \"\\u004C\", \"\\u004D\", \"\\u004E\", \"\\u004F\", \"\\u0050\", \"\\u0051\", \"\\u0052\", \"\\u0053\", \"\\u0054\", \"\\u0055\", \"\\u0056\", \"\\u0057\", \"\\u0058\", \"\\u0059\", \"\\u005A\"];\ncharacter = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\nfor (index = 0; index <= 25; index++) {\n  if (unicode[index] !== character[index]) {\n    $ERROR('#' + character[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A7.1_T2"
   },
   {
    "section": "7.8.4",
    "description": "UnicodeEscapeSequence ::  ENGLISH SMALL ALPHABET",
    "test": "//CHECK#a-z\nunicode = [\"\\u0061\", \"\\u0062\", \"\\u0063\", \"\\u0064\", \"\\u0065\", \"\\u0066\", \"\\u0067\", \"\\u0068\", \"\\u0069\", \"\\u006A\", \"\\u006B\", \"\\u006C\", \"\\u006D\", \"\\u006E\", \"\\u006F\", \"\\u0070\", \"\\u0071\", \"\\u0072\", \"\\u0073\", \"\\u0074\", \"\\u0075\", \"\\u0076\", \"\\u0077\", \"\\u0078\", \"\\u0079\", \"\\u007A\"];\ncharacter = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\nfor (index = 0; index <= 25; index++) {\n  if (unicode[index] !== character[index]) {\n    $ERROR('#' + character[index] + ' ');\n  }\n}\n",
    "id": "S7.8.4_A7.1_T3"
   },
   {
    "section": "7.8.4",
    "description": "UnicodeEscapeSequence :: u000G is incorrect",
    "negative": "",
    "test": "//CHECK#\n\"\\u000G\"\n",
    "id": "S7.8.4_A7.1_T4"
   },
   {
    "section": "7.8.4",
    "description": ":: HexDigit :: 1",
    "negative": "",
    "test": "//CHECK#1\n\"\\u1\"\n",
    "id": "S7.8.4_A7.2_T1"
   },
   {
    "section": "7.8.4",
    "description": ":: HexDigit :: A",
    "negative": "",
    "test": "//CHECK#1\n\"\\uA\"\n",
    "id": "S7.8.4_A7.2_T2"
   },
   {
    "section": "7.8.4",
    "description": ":: HexDigit :: 1",
    "negative": "",
    "test": "//CHECK#1\n\"\\u11\"\n",
    "id": "S7.8.4_A7.2_T3"
   },
   {
    "section": "7.8.4",
    "description": ":: HexDigit :: A",
    "negative": "",
    "test": "//CHECK#1\n\"\\uAA\"\n",
    "id": "S7.8.4_A7.2_T4"
   },
   {
    "section": "7.8.4",
    "description": ":: HexDigit :: 1",
    "negative": "",
    "test": "//CHECK#1\n\"\\u111\"\n",
    "id": "S7.8.4_A7.2_T5"
   },
   {
    "section": "7.8.4",
    "description": ":: HexDigit :: A",
    "negative": "",
    "test": "//CHECK#1\n\"\\uAAA\"\n",
    "id": "S7.8.4_A7.2_T6"
   },
   {
    "section": "7.8.4",
    "description": "Check similar to (\"\\u0001F\" === String.fromCharCode(\"1\") + \"F\")",
    "test": "//CHECK#1\nif (\"\\u0001F\" !== String.fromCharCode(\"1\") + \"F\") {\n  $ERROR('#1: \"\\\\u0001F\" === String.fromCharCode(\"1\") + \"F\"');\n}\n\n//CHECK#2\nif (\"\\u0002E\" !== String.fromCharCode(\"2\") + \"E\") {\n  $ERROR('#2: \"\\\\u0002E\" === String.fromCharCode(\"2\") + \"E\"');\n}\n\n//CHECK#3\nif (\"\\u0003D\" !== String.fromCharCode(\"3\") + \"D\") {\n  $ERROR('#3: \"\\\\u0003D\" === String.fromCharCode(\"3\") + \"D\"');\n}\n\n//CHECK#4\nif (\"\\u0004C\" !== String.fromCharCode(\"4\") + \"C\") {\n  $ERROR('#4: \"\\\\u0004C\" === String.fromCharCode(\"4\") + \"C\"');\n}\n\n//CHECK#5\nif (\"\\u0005B\" !== String.fromCharCode(\"5\") + \"B\") {\n  $ERROR('#5: \"\\\\u0005B\" === String.fromCharCode(\"5\") + \"B\"');\n}\n\n//CHECK#6\nif (\"\\u0006A\" !== String.fromCharCode(\"6\") + \"A\") {\n  $ERROR('#6: \"\\\\u0006A\" === String.fromCharCode(\"6\") + \"A\"');\n}\n\n//CHECK#7\nif (\"\\u00079\" !== String.fromCharCode(\"7\") + \"9\") {\n  $ERROR('#7: \"\\\\u00079\" === String.fromCharCode(\"7\") + \"9\"');\n}\n\n//CHECK#8\nif (\"\\u00088\" !== String.fromCharCode(\"8\") + \"8\") {\n  $ERROR('#8: \"\\\\u00088\" === String.fromCharCode(\"8\") + \"8\"');\n}\n\n//CHECK#9\nif (\"\\u00097\" !== String.fromCharCode(\"9\") + \"7\") {\n  $ERROR('#9: \"\\\\u00097\" === String.fromCharCode(\"9\") + \"7\"');\n}\n\n//CHECK#A\nif (\"\\u000A6\" !== String.fromCharCode(\"10\") + \"6\") {\n  $ERROR('#A: \"\\\\u000A6\" === String.fromCharCode(\"10\") + \"6\"');\n}\n\n//CHECK#B\nif (\"\\u000B5\" !== String.fromCharCode(\"11\") + \"5\") {\n  $ERROR('#B: \"\\\\u000B5\" === String.fromCharCode(\"11\") + \"5\"');\n}\n\n//CHECK#C\nif (\"\\u000C4\" !== String.fromCharCode(\"12\") + \"4\") {\n  $ERROR('#C: \"\\\\u000C4\" === String.fromCharCode(\"12\") + \"4\"');\n}\n\n//CHECK#D\nif (\"\\u000D3\" !== String.fromCharCode(\"13\") + \"3\") {\n  $ERROR('#D: \"\\\\u000D3\" === String.fromCharCode(\"13\") + \"3\"');\n}\n\n//CHECK#E\nif (\"\\u000E2\" !== String.fromCharCode(\"14\") + \"2\") {\n  $ERROR('#E: \"\\\\u000E2\" === String.fromCharCode(\"14\") + \"2\"');\n}\n\n//CHECK#F\nif (\"\\u000F1\" !== String.fromCharCode(\"15\") + \"1\") {\n  $ERROR('#F: \"\\\\u000F1\" === String.fromCharCode(\"15\") + \"1\"');\n}\n",
    "id": "S7.8.4_A7.3_T1"
   },
   {
    "section": "7.8.4",
    "description": "Checking if execution of \"\\U0001\" passes",
    "negative": "",
    "test": "//CHECK#1\n\"\\U0001\"\n",
    "id": "S7.8.4_A7.4_T1"
   },
   {
    "section": "7.8.4",
    "description": "Checking if execution of \"\\U000A\" passes",
    "negative": "",
    "test": "//CHECK#1\n\"\\U000A\"\n",
    "id": "S7.8.4_A7.4_T2"
   }
  ]
 }
}
