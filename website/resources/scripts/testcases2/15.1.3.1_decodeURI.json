{
 "testCollection": {
  "name": "15.1.3.1_decodeURI",
  "numTests": 52,
  "tests": [
   {
    "section": "15.1.3.1",
    "description": "Complex tests",
    "test": "//CHECK\nvar result = true;\nvar interval = [[0x00, 0x29], [0x40,0x40], [0x47, 0x60], [0x67, 0xFFFF]];\nfor (var indexI = 0; indexI < interval.length; indexI++) {\n  for (var indexJ = interval[indexI][0]; indexJ <= interval[indexI][1]; indexJ++) {\n    try {\n      decodeURI(\"%C0%\" + String.fromCharCode(indexJ, indexJ));\n      result = false;      \n    } catch (e) {   \n      if ((e instanceof URIError) !== true) {\n        result = false;        \n      }\n    }      \n  }  \n}  \n\nif (result !== true) {    \n  $ERROR('#1: If B = 110xxxxx (n = 2) and (string.charAt(k + 4) and  string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError');\n}\n",
    "id": "S15.1.3.1_A1.10_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests, string.charAt(k + 4) and string.charAt(k + 5)\ndo not represent hexadecimal digits",
    "test": "//CHECK\nvar result = true;\nvar interval = [[0x00, 0x29], [0x40,0x40], [0x47, 0x60], [0x67, 0xFFFF]];\nfor (var indexI = 0; indexI < interval.length; indexI++) {\n  for (var indexJ = interval[indexI][0]; indexJ <= interval[indexI][1]; indexJ++) {\n    try {\n      decodeURI(\"%E0%\" + String.fromCharCode(indexJ, indexJ) + \"%A0\");\n      result = false;      \n    } catch (e) {   \n      if ((e instanceof URIError) !== true) {\n        result = false;        \n      }\n    }      \n  }  \n}  \n\nif (result !== true) {    \n  $ERROR('#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 4) and  string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError');\n}\n",
    "id": "S15.1.3.1_A1.11_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests, string.charAt(k + 7) and string.charAt(k + 8)\ndo not represent hexadecimal digits",
    "test": "//CHECK\nvar result = true;\nvar interval = [[0x00, 0x29], [0x40,0x40], [0x47, 0x60], [0x67, 0xFFFF]];\nfor (var indexI = 0; indexI < interval.length; indexI++) {\n  for (var indexJ = interval[indexI][0]; indexJ <= interval[indexI][1]; indexJ++) {\n    try {\n      decodeURI(\"%E0%\" + \"%A0\" + String.fromCharCode(indexJ, indexJ));\n      result = false;      \n    } catch (e) {   \n      if ((e instanceof URIError) !== true) {\n        result = false;        \n      }\n    }      \n  }  \n}  \n\nif (result !== true) {    \n  $ERROR('#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 7) and  string.charAt(k + 8)) do not represent hexadecimal digits, throw URIError');\n}\n",
    "id": "S15.1.3.1_A1.11_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests, string.charAt(k + 4) and string.charAt(k + 5)\ndo not represent hexadecimal digits",
    "test": "//CHECK\nvar result = true;\nvar interval = [[0x00, 0x29], [0x40,0x40], [0x47, 0x60], [0x67, 0xFFFF]];\nfor (var indexI = 0; indexI < interval.length; indexI++) {\n  for (var indexJ = interval[indexI][0]; indexJ <= interval[indexI][1]; indexJ++) {\n    try {\n      decodeURI(\"%F0%\" + String.fromCharCode(indexJ, indexJ) + \"%A0%A0\");\n      result = false;      \n    } catch (e) {   \n      if ((e instanceof URIError) !== true) {\n        result = false;        \n      }\n    }      \n  }  \n}  \n\nif (result !== true) {    \n  $ERROR('#1: If B = 11110xxx (n = 4) and (string.charAt(k + 4) and string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError');\n}\n",
    "id": "S15.1.3.1_A1.12_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests, string.charAt(k + 7) and string.charAt(k + 7)\ndo not represent hexadecimal digits",
    "test": "//CHECK\nvar result = true;\nvar interval = [[0x00, 0x29], [0x40,0x40], [0x47, 0x60], [0x67, 0xFFFF]];\nfor (var indexI = 0; indexI < interval.length; indexI++) {\n  for (var indexJ = interval[indexI][0]; indexJ <= interval[indexI][1]; indexJ++) {\n    try {\n      decodeURI(\"%F0%\" + \"%A0\" + String.fromCharCode(indexJ, indexJ) + \"%A0\");\n      result = false;      \n    } catch (e) {   \n      if ((e instanceof URIError) !== true) {\n        result = false;        \n      }\n    }      \n  }  \n}  \n\nif (result !== true) {    \n  $ERROR('#1: If B = 11110xxx (n = 4) and (string.charAt(k + 7) and string.charAt(k + 8)) do not represent hexadecimal digits, throw URIError');\n}\n",
    "id": "S15.1.3.1_A1.12_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests, string.charAt(k + 10) and string.charAt(k + 11)\ndo not represent hexadecimal digits",
    "test": "//CHECK\nvar result = true;\nvar interval = [[0x00, 0x29], [0x40,0x40], [0x47, 0x60], [0x67, 0xFFFF]];\nfor (var indexI = 0; indexI < interval.length; indexI++) {\n  for (var indexJ = interval[indexI][0]; indexJ <= interval[indexI][1]; indexJ++) {\n    try {\n      decodeURI(\"%F0%\" + \"%A0%A0\" + String.fromCharCode(indexJ, indexJ));\n      result = false;      \n    } catch (e) {   \n      if ((e instanceof URIError) !== true) {\n        result = false;        \n      }\n    }      \n  }  \n}  \n\nif (result !== true) {    \n  $ERROR('#1: If B = 11110xxx (n = 4) and (string.charAt(k + 10) and string.charAt(k + 11)) do not represent hexadecimal digits, throw URIError');\n}\n",
    "id": "S15.1.3.1_A1.12_T3"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xC0 - 0xDF], C = [0x00, 0x7F]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xC0; indexB <= 0xDF; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB);  \n  var result = true;\n  for (var indexC = 0x00; indexC <= 0x7F; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%\" + hexC.substring(2));\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.13_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xC0 - 0xDF], C = [0xC0, 0xFF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xC0; indexB <= 0xDF; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB);  \n  var result = true;\n  for (var indexC = 0xC0; indexC <= 0xFF; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%\" + hexC.substring(2));\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.13_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xE0 - 0xEF], C = [0x00, 0x7F]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xE0; indexB <= 0xEF; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB); \n  var result = true;\n  for (var indexC = 0x00; indexC <= 0x7F; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%\" + hexC.substring(2) + \"%A0\");\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.14_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xE0 - 0xEF], C = [0x00, 0x7F]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xE0; indexB <= 0xEF; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB);  \n  var result = true;\n  for (var indexC = 0x00; indexC <= 0x7F; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%A0\" + \"%\" + hexC.substring(2));\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.14_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xE0 - 0xEF], C = [0xC0, 0xFF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xE0; indexB <= 0xEF; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB); \n  var result = true;\n  for (var indexC = 0xC0; indexC <= 0xFF; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%\" + hexC.substring(2) + \"%A0\");\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.14_T3"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xE0 - 0xEF], C = [0xC0, 0xFF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xE0; indexB <= 0xEF; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB);  \n  var result = true;\n  for (var indexC = 0xC0; indexC <= 0xFF; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%A0\" + \"%\" + hexC.substring(2));\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.14_T4"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0x0F7], C = [0x00, 0x7F]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xF0; indexB <= 0xF7; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB); \n  var result = true;\n  for (var indexC = 0x00; indexC <= 0x7F; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%\" + hexC.substring(2) + \"%A0%A0\");\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.15_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0x0F7], C = [0x00, 0x7F]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xF0; indexB <= 0xF7; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB); \n  var result = true;\n  for (var indexC = 0x00; indexC <= 0x7F; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%A0\" + \"%\" + hexC.substring(2) + \"%A0\");\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.15_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0x0F7], C = [0x00, 0x7F]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xF0; indexB <= 0xF7; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB); \n  var result = true;\n  for (var indexC = 0x00; indexC <= 0x7F; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%A0%A0\" + \"%\" + hexC.substring(2));\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.15_T3"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0x0F7], C = [0xC0, 0xFF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xF0; indexB <= 0xF7; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB); \n  var result = true;\n  for (var indexC = 0xC0; indexC <= 0xFF; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%\" + hexC.substring(2) + \"%A0%A0\");\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.15_T4"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0x0F7], C = [0xC0, 0xFF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xF0; indexB <= 0xF7; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB); \n  var result = true;\n  for (var indexC = 0xC0; indexC <= 0xFF; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%A0\" + \"%\" + hexC.substring(2) + \"%A0\");\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.15_T5"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0x0F7], C = [0xC0, 0xFF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB = 0xF0; indexB <= 0xF7; indexB++) {\n  count++; \n  var hexB = decimalToHexString(indexB); \n  var result = true;\n  for (var indexC = 0xC0; indexC <= 0xFF; indexC++) {\n    var hexC = decimalToHexString(indexC);  \n    try {\n      decodeURI(\"%\" + hexB.substring(2) + \"%A0%A0\" + \"%\" + hexC.substring(2));\n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = indexB;\n    } else {\n      if ((indexB - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = indexB;\n      }         \n    }\n    indexP = indexB;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.15_T6"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests",
    "test": "var result = true;\n\n//CHECK#1\ntry {\n  decodeURI(\"%\");\n  result = false;\n} catch(e) {\n  if ((e instanceof URIError) !== true) {\n    result = false;\n  }\n}\n\n//CHECK#2\ntry {\n  decodeURI(\"%A\");\n  result = false;\n} catch(e) {\n  if ((e instanceof URIError) !== true) {\n    result = false;\n  }\n}\n\n//CHECK#3\ntry {\n  decodeURI(\"%1\");\n  result = false;\n} catch(e) {\n  if ((e instanceof URIError) !== true) {\n    result = false;\n  }\n}\n\n//CHECK#4\ntry {\n  decodeURI(\"% \");\n  result = false;\n} catch(e) {\n  if ((e instanceof URIError) !== true) {\n    result = false;\n  }\n}\n\nif (result !== true) {\n  $ERROR('#1: If string.charAt(k) equal \"%\" and k + 2 >= string.length, throw URIError');\n}\n\n\n\n",
    "id": "S15.1.3.1_A1.1_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests",
    "test": "//CHECK\nvar result = true;\nvar interval = [[0x00, 0x29], [0x40,0x40], [0x47, 0x60], [0x67, 0xFFFF]];\nfor (var indexI = 0; indexI < interval.length; indexI++) {\n  for (var indexJ = interval[indexI][0]; indexJ <= interval[indexI][1]; indexJ++) {\n    try {\n      decodeURI(\"%\" + String.fromCharCode(indexJ) + \"1\");\n      result = false;\n    } catch (e) {   \n      if ((e instanceof URIError) !== true) {\n        result = false;\n      }\n    }    \n  }  \n}  \n\nif (result !== true) {    \n  $ERROR('#1: If string.charAt(k+1) does not represent hexadecimal digits, throw URIError');\n}\n",
    "id": "S15.1.3.1_A1.2_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests",
    "test": "//CHECK\nvar result = true;\nvar interval = [[0x00, 0x29], [0x40,0x40], [0x47, 0x60], [0x67, 0xFFFF]];\nfor (var indexI = 0; indexI < interval.length; indexI++) {\n  for (var indexJ = interval[indexI][0]; indexJ <= interval[indexI][1]; indexJ++) {\n    try {\n      decodeURI(\"%\" + \"1\" + String.fromCharCode(indexJ));\n      result = false;\n    } catch (e) {   \n      if ((e instanceof URIError) !== true) {\n        result = false;\n      }\n    }      \n  }  \n}  \n\nif (result !== true) {    \n  $ERROR('#1: If string.charAt(k+2) does not represent hexadecimal digits, throw URIError');\n}\n",
    "id": "S15.1.3.1_A1.2_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = 10xxxxxx -> B in [0x80 - 0xBF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0x80; index <= 0xBF; index++) {\n  count++; \n  var hex = decimalToHexString(index);\n  try {\n    decodeURI(\"%\" + hex.substring(2));\n  } catch (e) { \n    if ((e instanceof URIError) === true) continue;                \n  }\n  if (indexO === 0) { \n    indexO = index;\n  } else {\n    if ((index - indexP) !== 1) {             \n      if ((indexP - indexO) !== 0) {\n        var hexP = decimalToHexString(indexP);\n        var hexO = decimalToHexString(indexO);\n        $ERROR('#' + hexO + '-' + hexP + ' ');\n      } \n      else {\n        var hexP = decimalToHexString(indexP);\n        $ERROR('#' + hexP + ' ');\n      }  \n      indexO = index;\n    }         \n  }\n  indexP = index;\n  errorCount++;       \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.3_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = 11111xxx -> B in [0xF8 - 0xFF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xF8; index <= 0xFF; index++) {\n  count++; \n  var hex = decimalToHexString(index);\n  try {\n    decodeURI(\"%\" + hex.substring(2));\n  } catch (e) { \n    if ((e instanceof URIError) === true) continue;                \n  }\n  if (indexO === 0) { \n    indexO = index;\n  } else {\n    if ((index - indexP) !== 1) {             \n      if ((indexP - indexO) !== 0) {\n        var hexP = decimalToHexString(indexP);\n        var hexO = decimalToHexString(indexO);\n        $ERROR('#' + hexO + '-' + hexP + ' ');\n      } \n      else {\n        var hexP = decimalToHexString(indexP);\n        $ERROR('#' + hexP + ' ');\n      }  \n      indexO = index;\n    }         \n  }\n  indexP = index;\n  errorCount++;       \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.3_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xC0 - 0xDF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xC0; index <= 0xDF; index++) {\n  count++; \n  var str = \"\";\n  var result = true;\n  for (var len = 0; len < 3; len++) {\n    var hex = decimalToHexString(index);\n    try {\n      decodeURI(\"%\" + hex.substring(2) + str);      \n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n    str = str + \"1\";\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = index;\n    } else {\n      if ((index - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = index;\n      }         \n    }\n    indexP = index;\n    errorCount++;      \n  } \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.4_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xE0 - 0xEF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xE0; index <= 0xEF; index++) {\n  count++; \n  var str = \"\";\n  var result = true;\n  for (var len = 0; len < 6; len++) {\n    var hex = decimalToHexString(index);\n    try {\n      decodeURI(\"%\" + hex.substring(2) + str);      \n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n    str = str + \"1\";\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = index;\n    } else {\n      if ((index - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = index;\n      }         \n    }\n    indexP = index;\n    errorCount++;      \n  } \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.5_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0xF7]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xF0; index <= 0xF7; index++) {\n  count++; \n  var str = \"\";\n  var result = true;\n  for (var len = 0; len < 9; len++) {\n    var hex = decimalToHexString(index);\n    try {\n      decodeURI(\"%\" + hex.substring(2) + str);      \n    } catch (e) { \n      if ((e instanceof URIError) === true) continue;                \n    }\n    result = false;\n    str = str + \"1\";\n  }\n  if (result !== true) {\n    if (indexO === 0) { \n      indexO = index;\n    } else {\n      if ((index - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = index;\n      }         \n    }\n    indexP = index;\n    errorCount++;      \n  } \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.6_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xC0 - 0xDF]",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xC0; index <= 0xDF; index++) {\n  count++; \n  var hex = decimalToHexString(index);\n  try {\n    decodeURI(\"%\" + hex.substring(2) + \"111\");\n  } catch (e) { \n    if ((e instanceof URIError) === true) continue;                \n  }\n  if (indexO === 0) { \n    indexO = index;\n  } else {\n    if ((index - indexP) !== 1) {             \n      if ((indexP - indexO) !== 0) {\n        var hexP = decimalToHexString(indexP);\n        var hexO = decimalToHexString(indexO);\n        $ERROR('#' + hexO + '-' + hexP + ' ');\n      } \n      else {\n        var hexP = decimalToHexString(indexP);\n        $ERROR('#' + hexP + ' ');\n      }  \n      indexO = index;\n    }         \n  }\n  indexP = index;\n  errorCount++;       \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.7_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xE0 - 0xEF],\nstring.charAt(k + 3) not equal \"%\"",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xE0; index <= 0xEF; index++) {\n  count++; \n  var hex = decimalToHexString(index);\n  try {\n    decodeURI(\"%\" + hex.substring(2) + \"111%A0\");\n  } catch (e) { \n    if ((e instanceof URIError) === true) continue;                \n  }\n  if (indexO === 0) { \n    indexO = index;\n  } else {\n    if ((index - indexP) !== 1) {             \n      if ((indexP - indexO) !== 0) {\n        var hexP = decimalToHexString(indexP);\n        var hexO = decimalToHexString(indexO);\n        $ERROR('#' + hexO + '-' + hexP + ' ');\n      } \n      else {\n        var hexP = decimalToHexString(indexP);\n        $ERROR('#' + hexP + ' ');\n      }  \n      indexO = index;\n    }         \n  }\n  indexP = index;\n  errorCount++;       \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.8_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xE0 - 0xEF],\nstring.charAt(k + 6) not equal \"%\"",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xE0; index <= 0xEF; index++) {\n  count++; \n  var hex = decimalToHexString(index);\n  try {\n    decodeURI(\"%\" + hex.substring(2) + \"%A0111\");\n  } catch (e) { \n    if ((e instanceof URIError) === true) continue;                \n  }\n  if (indexO === 0) { \n    indexO = index;\n  } else {\n    if ((index - indexP) !== 1) {             \n      if ((indexP - indexO) !== 0) {\n        var hexP = decimalToHexString(indexP);\n        var hexO = decimalToHexString(indexO);\n        $ERROR('#' + hexO + '-' + hexP + ' ');\n      } \n      else {\n        var hexP = decimalToHexString(indexP);\n        $ERROR('#' + hexP + ' ');\n      }  \n      indexO = index;\n    }         \n  }\n  indexP = index;\n  errorCount++;       \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.8_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0x0F7],\nstring.charAt(k + 3) not equal \"%\"",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xF0; index <= 0xF7; index++) {\n  count++; \n  var hex = decimalToHexString(index);\n  try {\n    decodeURI(\"%\" + hex.substring(2) + \"111%A0%A0\");\n  } catch (e) { \n    if ((e instanceof URIError) === true) continue;                \n  }\n  if (indexO === 0) { \n    indexO = index;\n  } else {\n    if ((index - indexP) !== 1) {             \n      if ((indexP - indexO) !== 0) {\n        var hexP = decimalToHexString(indexP);\n        var hexO = decimalToHexString(indexO);\n        $ERROR('#' + hexO + '-' + hexP + ' ');\n      } \n      else {\n        var hexP = decimalToHexString(indexP);\n        $ERROR('#' + hexP + ' ');\n      }  \n      indexO = index;\n    }         \n  }\n  indexP = index;\n  errorCount++;       \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.9_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0x0F7],\nstring.charAt(k + 6) not equal \"%\"",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xF0; index <= 0xF7; index++) {\n  count++; \n  var hex = decimalToHexString(index);\n  try {\n    decodeURI(\"%\" + hex.substring(2) + \"%A0111%A0\");\n  } catch (e) { \n    if ((e instanceof URIError) === true) continue;                \n  }\n  if (indexO === 0) { \n    indexO = index;\n  } else {\n    if ((index - indexP) !== 1) {             \n      if ((indexP - indexO) !== 0) {\n        var hexP = decimalToHexString(indexP);\n        var hexO = decimalToHexString(indexO);\n        $ERROR('#' + hexO + '-' + hexP + ' ');\n      } \n      else {\n        var hexP = decimalToHexString(indexP);\n        $ERROR('#' + hexP + ' ');\n      }  \n      indexO = index;\n    }         \n  }\n  indexP = index;\n  errorCount++;       \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.9_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests. B = [0xF0 - 0x0F7],\nstring.charAt(k + 9) not equal \"%\"",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var index = 0xF0; index <= 0xF7; index++) {\n  count++; \n  var hex = decimalToHexString(index);\n  try {\n    decodeURI(\"%\" + hex.substring(2) + \"%A0%A0111\");\n  } catch (e) { \n    if ((e instanceof URIError) === true) continue;                \n  }\n  if (indexO === 0) { \n    indexO = index;\n  } else {\n    if ((index - indexP) !== 1) {             \n      if ((indexP - indexO) !== 0) {\n        var hexP = decimalToHexString(indexP);\n        var hexO = decimalToHexString(indexO);\n        $ERROR('#' + hexO + '-' + hexP + ' ');\n      } \n      else {\n        var hexP = decimalToHexString(indexP);\n        $ERROR('#' + hexP + ' ');\n      }  \n      indexO = index;\n    }         \n  }\n  indexP = index;\n  errorCount++;       \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A1.9_T3"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests",
    "test": "//CHECK\nvar errorCount = 0;\nvar count = 0;\nfor (var indexI = 0; indexI <= 65535; indexI++) {\n  if (indexI !== 0x25) {\n    var hex = decimalToHexString(indexI);\n    try {    \n      var str = String.fromCharCode(indexI);\n      if (decodeURI(str) !== str) {    \n        $ERROR('#' + hex + ' ');\n        errorCount++;\n      }    \n    } catch (e){\n      $ERROR('#' + hex + ' ');\n      errorCount++;\n    } \n    count++;\n  }\n}  \n\nif (errorCount > 0) {    \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count);\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A2.1_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests, use RFC 3629",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\nvar uriReserved = [\";\", \"/\", \"?\", \":\", \"@\", \"&\", \"=\", \"+\", \"$\", \",\"];\nl:\nfor (var indexB1 = 0x00; indexB1 <= 0x7F; indexB1++) {       \n  count++;\n  var hexB1 = decimalToHexString(indexB1);  \n  var index = indexB1;  \n  try {\n    var hex = String.fromCharCode(index);\n    for (indexC = 0; indexC < uriReserved.length; indexC++) {    \n      if (hex === uriReserved[indexC]) continue l;        \n    } \n    if (hex === \"#\") continue l;\n    if (decodeURI(\"%\" + hexB1.substring(2)) === hex) continue;\n  } catch (e) {}   \n  if (indexO === 0) { \n    indexO = index;\n  } else {\n    if ((index - indexP) !== 1) {             \n      if ((indexP - indexO) !== 0) {\n        var hexP = decimalToHexString(indexP);\n        var hexO = decimalToHexString(indexO);\n        $ERROR('#' + hexO + '-' + hexP + ' ');\n      } \n      else {\n        var hexP = decimalToHexString(indexP);\n        $ERROR('#' + hexP + ' ');\n      }  \n      indexO = index;\n    }         \n  }\n  indexP = index;\n  errorCount++;         \n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A2.2_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests, use RFC 3629",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB1 = 0xC2; indexB1 <= 0xDF; indexB1++) {     \n  var hexB1 = decimalToHexString(indexB1);\n  for (var indexB2 = 0x80; indexB2 <= 0xBF; indexB2++) {\n    count++;\n    var hexB2 = decimalToHexString(indexB2);\n    var index = (indexB1 & 0x1F) * 0x40 + (indexB2 & 0x3F);  \n    try {\n      if (decodeURI(\"%\" + hexB1.substring(2) + \"%\" + hexB2.substring(2)) === String.fromCharCode(index)) continue;\n    } catch (e) {}   \n    if (indexO === 0) { \n      indexO = index;\n    } else {\n      if ((index - indexP) !== 1) {             \n        if ((indexP - indexO) !== 0) {\n          var hexP = decimalToHexString(indexP);\n          var hexO = decimalToHexString(indexO);\n          $ERROR('#' + hexO + '-' + hexP + ' ');\n        } \n        else {\n          var hexP = decimalToHexString(indexP);\n          $ERROR('#' + hexP + ' ');\n        }  \n        indexO = index;\n      }         \n    }\n    indexP = index;\n    errorCount++;       \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A2.3_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests, use RFC 3629",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB1 = 0xE0; indexB1 <= 0xEF; indexB1++) {     \n  var hexB1 = decimalToHexString(indexB1);\n  for (var indexB2 = 0x80; indexB2 <= 0xBF; indexB2++) {\n    if ((indexB1 === 0xE0) && (indexB2 <= 0x9F)) continue;\n    if ((indexB1 === 0xED) && (0xA0 <= indexB2)) continue;         \n    var hexB2 = decimalToHexString(indexB2);\n    for (var indexB3 = 0x80; indexB3 <= 0xBF; indexB3++) {\n      count++;\n      var hexB3 = decimalToHexString(indexB3);\n      var index = (indexB1 & 0x0F) * 0x1000 + (indexB2 & 0x3F) * 0x40 + (indexB3 & 0x3F);  \n      try {\n        if (decodeURI(\"%\" + hexB1.substring(2) + \"%\" + hexB2.substring(2) + \"%\" + hexB3.substring(2)) === String.fromCharCode(index)) continue;        \n      } catch (e) {}   \n      if (indexO === 0) { \n        indexO = index;\n      } else {\n        if ((index - indexP) !== 1) {             \n          if ((indexP - indexO) !== 0) {\n            var hexP = decimalToHexString(indexP);\n            var hexO = decimalToHexString(indexO);\n            $ERROR('#' + hexO + '-' + hexP + ' ');\n          } \n          else {\n            var hexP = decimalToHexString(indexP);\n            $ERROR('#' + hexP + ' ');\n          }  \n          indexO = index;\n        }         \n      }\n      indexP = index;\n      errorCount++;  \n    }     \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 3; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A2.4_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex tests, use RFC 3629",
    "test": "var errorCount = 0;\nvar count = 0;\nvar indexP;\nvar indexO = 0;\n\nfor (var indexB1 = 0xF0; indexB1 <= 0xF4; indexB1++) {     \n  var hexB1 = decimalToHexString(indexB1);\n  for (var indexB2 = 0x80; indexB2 <= 0xBF; indexB2++) {\n    if ((indexB1 === 0xF0) && (indexB2 <= 0x9F)) continue;            \n    if ((indexB1 === 0xF4) && (indexB2 >= 0x90)) continue;\n    var hexB2 = decimalToHexString(indexB2);\n    for (var indexB3 = 0x80; indexB3 <= 0xBF; indexB3++) {\n      var hexB3 = decimalToHexString(indexB3);\n      for (var indexB4 = 0x80; indexB4 <= 0xBF; indexB4++) {\n        var hexB4 = decimalToHexString(indexB4);\n        count++;\n        var index = (indexB1 & 0x07) * 0x40000 + (indexB2 & 0x3F) * 0x1000 + (indexB3 & 0x3F) * 0x40 + (indexB4 & 0x3F);\n        var L = ((index - 0x10000) & 0x03FF) + 0xDC00;\n        var H = (((index - 0x10000) >> 10) & 0x03FF) + 0xD800;  \n        try {\n          if (decodeURI(\"%\" + hexB1.substring(3) + \"%\" + hexB2.substring(3) + \"%\" + hexB3.substring(3) + \"%\" + hexB4.substring(3)) === String.fromCharCode(H) + String.fromCharCode(L)) continue;        \n        } catch (e) {}   \n        if (indexO === 0) { \n          indexO = index;\n        } else {\n          if ((index - indexP) !== 1) {             \n            if ((indexP - indexO) !== 0) {\n              var hexP = decimalToHexString(indexP);\n              var hexO = decimalToHexString(indexO);\n              $ERROR('#' + hexO + '-' + hexP + ' ');\n            } \n            else {\n              var hexP = decimalToHexString(indexP);\n              $ERROR('#' + hexP + ' ');\n            }  \n            indexO = index;\n          }         \n        }\n        indexP = index;\n        errorCount++;  \n      }\n    }     \n  }\n}\n\nif (errorCount > 0) {\n  if ((indexP - indexO) !== 0) {\n    var hexP = decimalToHexString(indexP);\n    var hexO = decimalToHexString(indexO);\n    $ERROR('#' + hexO + '-' + hexP + ' ');\n  } else {\n    var hexP = decimalToHexString(indexP);\n    $ERROR('#' + hexP + ' ');\n  }     \n  $ERROR('Total error: ' + errorCount + ' bad Unicode character in ' + count + ' ');\n}\n\nfunction decimalToHexString(n) {\n  n = Number(n);\n  var h = \"\";\n  for (var i = 4; i >= 0; i--) {\n    if (n >= Math.pow(16, i)) {\n      var t = Math.floor(n / Math.pow(16, i));\n      n -= t * Math.pow(16, i);\n      if ( t >= 10 ) {\n        if ( t == 10 ) { h += \"A\"; }\n        if ( t == 11 ) { h += \"B\"; }\n        if ( t == 12 ) { h += \"C\"; }\n        if ( t == 13 ) { h += \"D\"; }\n        if ( t == 14 ) { h += \"E\"; }\n        if ( t == 15 ) { h += \"F\"; }\n      } else {\n        h += String(t);\n      }\n    } else {\n      h += \"0\";\n    }\n  }\n  return h;\n}\n",
    "id": "S15.1.3.1_A2.5_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Checking all character in reservedURISet. HexDigit in [0..9, A..F]",
    "test": "//CHECK#1\nif (decodeURI(\"%3B\") !== \"%3B\") {\n  $ERROR('#1: decodeURI(\"%3B\") equal \"%3B\", not \";\"');\n}\n\n//CHECK#2\nif (decodeURI(\"%2F\") !== \"%2F\") {\n  $ERROR('#2: decodeURI(\"%2F\") equal \"%2F\", not \"/\"');\n}\n\n//CHECK#3\nif (decodeURI(\"%3F\") !== \"%3F\") {\n  $ERROR('#3: decodeURI(\"%3F\") equal \"%3F\", not \"?\"');\n}\n\n//CHECK#4\nif (decodeURI(\"%3A\") !== \"%3A\") {\n  $ERROR('#4: decodeURI(\"%3A\") equal \"%3A\", not \":\"');\n}\n\n//CHECK#5\nif (decodeURI(\"%40\") !== \"%40\") {\n  $ERROR('#5: decodeURI(\"%40\") equal \"%40\", not \"@\"');\n}\n\n//CHECK#6\nif (decodeURI(\"%26\") !== \"%26\") {\n  $ERROR('#6: decodeURI(\"%26\") equal \"%26\", not \"&\"');\n}\n\n//CHECK#7\nif (decodeURI(\"%3D\") !== \"%3D\") {\n  $ERROR('#7.1: decodeURI(\"%3D\") equal \"%3D\", not \"=\"');\n}\n\n//CHECK#8\nif (decodeURI(\"%2B\") !== \"%2B\") {\n  $ERROR('#8.1: decodeURI(\"%2B\") equal \"%2B\", not \"+\"');\n}\n\n//CHECK#9\nif (decodeURI(\"%24\") !== \"%24\") {\n  $ERROR('#9: decodeURI(\"%24\") equal \"%24\", not \"$\"');\n}\n\n//CHECK#10\nif (decodeURI(\"%2C\") !== \"%2C\") {\n  $ERROR('#10: decodeURI(\"%2C\") equal \"%2C\", not \",\"');\n}\n\n//CHECK#11\nif (decodeURI(\"%23\") !== \"%23\") {\n  $ERROR('#11: decodeURI(\"%23\") equal \"%23\", not \"#\"');\n}\n",
    "id": "S15.1.3.1_A3_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Checking all character in reservedURISet. HexDigit in [0..9, a..f]",
    "test": "//CHECK#1\nif (decodeURI(\"%3b\") !== \"%3b\") {\n  $ERROR('#1: decodeURI(\"%3b\") equal \"%3b\", not \";\" or \"%3B\"');\n}\n\n//CHECK#2\nif (decodeURI(\"%2f\") !== \"%2f\") {\n  $ERROR('#2: decodeURI(\"%2f\") equal \"%2f\", not \"/\" or \"%2F\"');\n}\n\n//CHECK#3\nif (decodeURI(\"%3f\") !== \"%3f\") {\n  $ERROR('#3: decodeURI(\"%3f\") equal \"%3f\", not \"?\" or \"%3F\"');\n}\n\n//CHECK#4\nif (decodeURI(\"%3a\") !== \"%3a\") {\n  $ERROR('#4: decodeURI(\"%3a\") equal \"%3a\", not \":\" or \"%3A\"');\n}\n\n//CHECK#5\nif (decodeURI(\"%40\") !== \"%40\") {\n  $ERROR('#5: decodeURI(\"%40\") equal \"%40\", not \"@\"');\n}\n\n//CHECK#6\nif (decodeURI(\"%26\") !== \"%26\") {\n  $ERROR('#6: decodeURI(\"%26\") equal \"%26\", not \"&\"');\n}\n\n//CHECK#7\nif (decodeURI(\"%3d\") !== \"%3d\") {\n  $ERROR('#7.1: decodeURI(\"%3d\") equal \"%3d\", not \"=\" or \"%3D\"');\n}\n\n//CHECK#8\nif (decodeURI(\"%2b\") !== \"%2b\") {\n  $ERROR('#8.1: decodeURI(\"%2b\") equal \"%2b\", not \"+\" or \"%2B\"');\n}\n\n//CHECK#9\nif (decodeURI(\"%24\") !== \"%24\") {\n  $ERROR('#9: decodeURI(\"%24\") equal \"%24\", not \"$\"');\n}\n\n//CHECK#10\nif (decodeURI(\"%2c\") !== \"%2c\") {\n  $ERROR('#10: decodeURI(\"%2c\") equal \"%2c\", not \",\" or \"%2C\"');\n}\n\n//CHECK#11\nif (decodeURI(\"%23\") !== \"%23\") {\n  $ERROR('#11: decodeURI(\"%23\") equal \"%23\", not \"#\"');\n}\n",
    "id": "S15.1.3.1_A3_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Complex test",
    "test": "//CHECK#1\nif (decodeURI(\"%3B%2F%3F%3A%40%26%3D%2B%24%2C%23\") !== \"%3B%2F%3F%3A%40%26%3D%2B%24%2C%23\") {\n  $ERROR('#1: decodeURI(\"%3B%2F%3F%3A%40%26%3D%2B%24%2C%23\") equal \"%3B%2F%3F%3A%40%26%3D%2B%24%2C%23\", not \";/?:@&=+$,#\"');\n}\n\n//CHECK#2\nif (decodeURI(\"%3b%2f%3f%3a%40%26%3d%2b%24%2c%23\") !== \"%3b%2f%3f%3a%40%26%3d%2b%24%2c%23\") {\n  $ERROR('#2: decodeURI(\"%3b%2f%3f%3a%40%26%3d%2b%24%2c%23\") equal \"%3b%2f%3f%3a%40%26%3d%2b%24%2c%23\", not \";/?:@&=+$,#\" or \"%3B%2F%3F%3A%40%26%3D%2B%24%2C%23\"');\n}\n",
    "id": "S15.1.3.1_A3_T3"
   },
   {
    "section": "15.1.3.1",
    "description": "Checking ENGLISH ALPHABET",
    "test": "//CHECK#1\nif (decodeURI(\"http://unipro.ru/0123456789\") !== \"http://unipro.ru/0123456789\") {\n  $ERROR('#1: http://unipro.ru/0123456789');\n}\n\n//CHECK#2\nif (decodeURI(\"%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F%50%51%52%53%54%55%56%57%58%59%5A\") !== \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") {\n  $ERROR('#2: ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n}\n\n//CHECK#3\nif (decodeURI(\"%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F%70%71%72%73%74%75%76%77%78%79%7A\") !== \"abcdefghijklmnopqrstuvwxyz\") {\n  $ERROR('#3: abcdefghijklmnopqrstuvwxyz');\n}\n",
    "id": "S15.1.3.1_A4_T1"
   },
   {
    "section": "15.1.3.1",
    "description": "Checking RUSSIAN ALPHABET",
    "test": "//CHECK#1\nif (decodeURI(\"http://ru.wikipedia.org/wiki/%d0%ae%D0%bd%D0%B8%D0%BA%D0%BE%D0%B4\") !== \"http://ru.wikipedia.org/wiki/Юникод\") {\n  $ERROR('#1: http://ru.wikipedia.org/wiki/Юникод');\n}\n\n//CHECK#2\nif (decodeURI(\"http://ru.wikipedia.org/wiki/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4#%D0%A1%D1%81%D1%8B%D0%BB%D0%BA%D0%B8\") !== \"http://ru.wikipedia.org/wiki/Юникод#Ссылки\") {\n  $ERROR('#2: http://ru.wikipedia.org/wiki/Юникод#Ссылки');\n}\n\n//CHECK#3\nif (decodeURI(\"http://ru.wikipedia.org/wiki/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4%23%D0%92%D0%B5%D1%80%D1%81%D0%B8%D0%B8%20%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4%D0%B0\") !== \"http://ru.wikipedia.org/wiki/Юникод%23Версии Юникода\") {\n  $ERROR('#3: http://ru.wikipedia.org/wiki/Юникод%23Версии Юникода');\n}\n",
    "id": "S15.1.3.1_A4_T2"
   },
   {
    "section": "15.1.3.1",
    "description": "Checking URL with Line Terminator",
    "test": "//CHECK#1\nif (decodeURI(\"http://unipro.ru/%0Aabout\") !== \"http://unipro.ru/\\nabout\") {\n  $ERROR('#1: http://unipro.ru/%A0about');\n}\n\n//CHECK#2\nif (decodeURI(\"http://unipro.ru/%0Babout\") !== \"http://unipro.ru/\\vabout\") {\n  $ERROR('#2: http://unipro.ru/%0Babout');\n}\n\n//CHECK#3\nif (decodeURI(\"http://unipro.ru/%0Cabout\") !== \"http://unipro.ru/\\fabout\") {\n  $ERROR('#3: http://unipro.ru/%0Cabout');\n}\n\n//CHECK#4\nif (decodeURI(\"http://unipro.ru/%0Dabout\") !== \"http://unipro.ru/\\rabout\") {\n  $ERROR('#4: http://unipro.ru/%0Dabout');\n}\n",
    "id": "S15.1.3.1_A4_T3"
   },
   {
    "section": "15.1.3.1",
    "description": "Test some url",
    "test": "//CHECK#1\nif (decodeURI(\"\") !== \"\") {\n  $ERROR('#1: \"\"');\n}\n\n//CHECK#2\nif (decodeURI(\"http:%2f%2Funipro.ru\") !== \"http:%2f%2Funipro.ru\") {\n  $ERROR('#2: http:%2f%2Funipro.ru');\n}\n\n//CHECK#3\nif (decodeURI(\"http://www.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork\") !== \"http://www.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork\") {\n  $ERROR('#3: http://www.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork\"');\n}           \n\n//CHECK%234\nif (decodeURI(\"http://en.wikipedia.org/wiki/UTF-8%23Description\") !== \"http://en.wikipedia.org/wiki/UTF-8%23Description\") {\n  $ERROR('%234: http://en.wikipedia.org/wiki/UTF-8%23Description');\n}\n",
    "id": "S15.1.3.1_A4_T4"
   },
   {
    "section": "15.1.3.1, 15.2.4.7, 12.6.4",
    "description": "Checking use propertyIsEnumerable, for-in",
    "test": "//CHECK#1\nif (decodeURI.propertyIsEnumerable('length') !== false) {\n  $ERROR('#1: decodeURI.propertyIsEnumerable(\\'length\\') === false. Actual: ' + (decodeURI.propertyIsEnumerable('length')));\n}\n\n//CHECK#2\nresult = true;\nfor (p in decodeURI){\n  if (p === \"length\") {\n    result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#2: result = true; for (p in decodeURI) { if (p === \"length\") result = false; }  result === true;');\n}\n",
    "id": "S15.1.3.1_A5.1"
   },
   {
    "section": "15.1.3.1, 15.2.4.5, 11.4.1",
    "description": "Checking use hasOwnProperty, delete",
    "strict_mode_negative": "",
    "test": "//CHECK#1\nif (decodeURI.hasOwnProperty('length') !== true) {\n  $FAIL('#1: decodeURI.hasOwnProperty(\\'length\\') === true. Actual: ' + (decodeURI.hasOwnProperty('length')));\n}\n\ndelete decodeURI.length;\n\n//CHECK#2\nif (decodeURI.hasOwnProperty('length') !== true) {\n  $ERROR('#2: delete decodeURI.length; decodeURI.hasOwnProperty(\\'length\\') === true. Actual: ' + (decodeURI.hasOwnProperty('length')));\n}\n\n//CHECK#3\nif (decodeURI.length === undefined) {\n  $ERROR('#3: delete decodeURI.length; decodeURI.length !== undefined');\n}\n\n\n\n",
    "id": "S15.1.3.1_A5.2",
    "strict_only": ""
   },
   {
    "section": "15.1.3.1",
    "description": "Checking if varying the length property fails",
    "strict_mode_negative": "",
    "test": "//CHECK#1\nvar x = decodeURI.length;\ndecodeURI.length = Infinity;\nif (decodeURI.length !== x) {\n  $ERROR('#1: x = decodeURI.length; decodeURI.length = Infinity; decodeURI.length === x. Actual: ' + (decodeURI.length));\n}\n\n",
    "id": "S15.1.3.1_A5.3",
    "strict_only": ""
   },
   {
    "section": "15.1.3.1",
    "description": "decodeURI.length === 1",
    "test": "//CHECK#1\nif (decodeURI.length !== 1) {\n  $ERROR('#1: decodeURI.length === 1. Actual: ' + (decodeURI.length));\n} \n\n",
    "id": "S15.1.3.1_A5.4"
   },
   {
    "section": "15.1.3.1, 15.2.4.7, 12.6.4",
    "description": "Checking use propertyIsEnumerable, for-in",
    "test": "//CHECK#1\nif (this.propertyIsEnumerable('decodeURI') !== false) {\n  $ERROR('#1: this.propertyIsEnumerable(\\'decodeURI\\') === false. Actual: ' + (this.propertyIsEnumerable('decodeURI')));\n}\n\n//CHECK#2\nresult = true;\nfor (p in this){\n  if (p === \"decodeURI\") {\n    result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#2: result = true; for (p in this) { if (p === \"decodeURI\") result = false; }  result === true;');\n}\n",
    "id": "S15.1.3.1_A5.5"
   },
   {
    "section": "15.1.3.1",
    "description": "Checking decodeURI.prototype",
    "test": "//CHECK#1\nif (decodeURI.prototype !== undefined) {\n  $ERROR('#1: decodeURI.prototype === undefined. Actual: ' + (decodeURI.prototype));\n}\n",
    "id": "S15.1.3.1_A5.6"
   },
   {
    "section": "15.1.3.1, 11.2.2",
    "description": "If property does not implement the internal [[Construct]] method, throw a TypeError exception",
    "test": "//CHECK#1\n\ntry {\n  new decodeURI();\n  $ERROR('#1.1: new decodeURI() throw TypeError. Actual: ' + (new decodeURI()));\n} catch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#1.2: new decodeURI() throw TypeError. Actual: ' + (e));\n  }\n}\n",
    "id": "S15.1.3.1_A5.7"
   },
   {
    "section": "15.1.3.1, 9.8, 8.6.2.6",
    "description": "If Type(value) is Object, evaluate ToPrimitive(value, String)",
    "test": "//CHECK#1\nvar object = {valueOf: function() {return \"%5E\"}};\nif (decodeURI(object) !== \"[object Object]\") {\n  $ERROR('#1: var object = {valueOf: function() {return \"%5E\"}}; decodeURI(object) === [object Object]. Actual: ' + (decodeURI(object)));\n}\n\n//CHECK#2\nvar object = {valueOf: function() {return \"\"}, toString: function() {return \"%5E\"}};\nif (decodeURI(object) !== \"^\") {\n  $ERROR('#2: var object = {valueOf: function() {return \"\"}, toString: function() {return \"%5E\"}}; decodeURI(object) === \"^\". Actual: ' + (decodeURI(object)));\n} \n\n//CHECK#3\nvar object = {valueOf: function() {return \"%5E\"}, toString: function() {return {}}};\nif (decodeURI(object) !== \"^\") {\n  $ERROR('#3: var object = {valueOf: function() {return \"%5E\"}, toString: function() {return {}}}; decodeURI(object) === \"^\". Actual: ' + (decodeURI(object)));\n}\n\n//CHECK#4\ntry {\n  var object = {valueOf: function() {throw \"error\"}, toString: function() {return \"%5E\"}};\n  if (decodeURI(object) !== \"^\") {\n    $ERROR('#4.1: var object = {valueOf: function() {throw \"error\"}, toString: function() {return \"%5E\"}}; decodeURI(object) === \"^\". Actual: ' + (decodeURI(object)));\n  }\n}\ncatch (e) {\n  if (e === \"error\") {\n    $ERROR('#4.2: var object = {valueOf: function() {throw \"error\"}, toString: function() {return \"%5E\"}}; decodeURI(object) not throw \"error\"');\n  } else {\n    $ERROR('#4.3: var object = {valueOf: function() {throw \"error\"}, toString: function() {return \"%5E\"}}; decodeURI(object) not throw Error. Actual: ' + (e));\n  }\n}\n\n//CHECK#5\nvar object = {toString: function() {return \"%5E\"}};\nif (decodeURI(object) !== \"^\") {\n  $ERROR('#5: var object = {toString: function() {return \"%5E\"}}; decodeURI(object) === \"^\". Actual: ' + (decodeURI(object)));\n}\n\n//CHECK#6\nvar object = {valueOf: function() {return {}}, toString: function() {return \"%5E\"}}\nif (decodeURI(object) !== \"^\") {\n  $ERROR('#6: var object = {valueOf: function() {return {}}, toString: function() {return \"%5E\"}}; decodeURI(object) === \"^\". Actual: ' + (decodeURI(object)));\n}\n\n//CHECK#7\ntry {\n  var object = {valueOf: function() {return \"%5E\"}, toString: function() {throw \"error\"}};\n  decodeURI(object);\n  $ERROR('#7.1: var object = {valueOf: function() {return \"%5E\"}, toString: function() {throw \"error\"}}; decodeURI(object) throw \"error\". Actual: ' + (decodeURI(object)));\n}  \ncatch (e) {\n  if (e !== \"error\") {\n    $ERROR('#7.2: var object = {valueOf: function() {return \"%5E\"}, toString: function() {throw \"error\"}}; decodeURI(object) throw \"error\". Actual: ' + (e));\n  } \n}\n\n//CHECK#8\ntry {\n  var object = {valueOf: function() {return {}}, toString: function() {return {}}};\n  decodeURI(object);\n  $ERROR('#8.1: var object = {valueOf: function() {return {}}, toString: function() {return {}}}; decodeURI(object) throw TypeError. Actual: ' + (decodeURI(object)));\n}  \ncatch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#8.2: var object = {valueOf: function() {return {}}, toString: function() {return {}}}; decodeURI(object) throw TypeError. Actual: ' + (e));\n  } \n}\n",
    "id": "S15.1.3.1_A6_T1"
   }
  ]
 }
}
