{
 "testCollection": {
  "name": "15.8.2.7_cos",
  "numTests": 7,
  "tests": [
   {
    "section": "15.8.2.7",
    "description": "Checking if Math.cos(NaN) is NaN",
    "test": "// CHECK#1\nvar x = NaN;\nif (!isNaN(Math.cos(x)))\n{\n\t$ERROR(\"#1: 'var x=NaN; isNaN(Math.cos(x)) === false'\");\n}\n",
    "id": "S15.8.2.7_A1"
   },
   {
    "section": "15.8.2.7",
    "description": "Checking if Math.cos(+0) is 1",
    "test": "// CHECK#1\nvar x = +0;\nif (Math.cos(x) !== 1)\n{\n\t$ERROR(\"#1: 'var x = +0; Math.cos(x) !== 1'\");\n}\n",
    "id": "S15.8.2.7_A2"
   },
   {
    "section": "15.8.2.7",
    "description": "Checking if Math.cos(-0) is 1",
    "test": "// CHECK#1\nvar x = -0;\nif (Math.cos(x) !== 1)\n{\n\t$ERROR(\"#1: 'var x = -0; Math.cos(x) !== 1'\");\n}\n",
    "id": "S15.8.2.7_A3"
   },
   {
    "section": "15.8.2.7",
    "description": "Checking if Math.cos(+Infinity) is NaN",
    "test": "// CHECK#1\nvar x = +Infinity;\nif (!isNaN(Math.cos(x)))\n{\n\t$ERROR(\"#1: 'var x = +Infinity; isNaN(Math.cos(x)) === false'\");\n}\n",
    "id": "S15.8.2.7_A4"
   },
   {
    "section": "15.8.2.7",
    "description": "Checking if Math.cos(-Infinity) is NaN",
    "test": "// CHECK#1\nvar x = -Infinity;\nif (!isNaN(Math.cos(x)))\n{\n\t$ERROR(\"#1: 'var x = -Infinity; isNaN(Math.cos(x)) === false'\");\n}\n",
    "id": "S15.8.2.7_A5"
   },
   {
    "section": "15.8.2.7",
    "description": "Checking if Math.cos(x) equals to Math.cos(x+n*2*Math.PI) with precision 0.000000000003, where n is an integer from 1 to 100 and x is one of 10 float point values from -Math.PI to +Math.PI",
    "test": "// CHECK#1\n  prec = 0.000000000003;\n//prec = 0.000000000000001;\nperiod = 2*Math.PI;\npernum = 100;\n\na = -pernum * period;\nb = pernum * period;\nsnum = 9; \nstep = period/snum + 0.0;\nx = new Array();\nfor (i = 0; i < snum; i++)\n{\n\tx[i] = a + i*step;\n}\nx[9] = a + period;\n\nvar curval;\nvar curx;\nvar j;\nfor (i = 0; i < snum; i++)\n{\n\tcurval = Math.cos(x[i]);\n\tcurx = x[i] + period;\n\tj = 0;\n\twhile (curx <= b)\n\t{\n\t\tcurx += period;\n\t\tj++;\n\t\tif (Math.abs(Math.cos(curx) - curval) >= prec)\n\t\t{\n\t\t\t$FAIL(\"#1: cos is found out to not be periodic:\\n Math.abs(Math.cos(\" + x[i] + \") - Math.cos(\" + x[i] + \" + 2*Math.PI*\" + j + \")) >= \" + prec + \"\\n Math.cos(\" + x[i] + \") === \" + curval + \"\\n Math.cos(\" + curx + \") === \" + Math.cos(curx));\n\t\t}\n\t}\n}\n",
    "id": "S15.8.2.7_A6"
   },
   {
    "section": "15.8.2.7",
    "description": ": Checking if Math.cos is approximately equals to its mathematical values on the set of 64 argument values; all the sample values is calculated with LibC;",
    "test": "$INCLUDE(\"math_precision.js\");\n$INCLUDE(\"math_isequal.js\");\n\n// CHECK#1\nvnum = 64;\nvar x = new Array();\nx[0] = -3.14159265358979310000;\nx[1] = -3.04185955347583150000;\nx[2] = -2.94212645336186980000;\nx[3] = -2.84239335324790820000;\nx[4] = -2.74266025313394660000;\nx[5] = -2.64292715301998450000;\nx[6] = -2.54319405290602290000;\nx[7] = -2.44346095279206120000;\nx[8] = -2.34372785267809960000;\nx[9] = -2.24399475256413790000;\nx[10] = -2.14426165245017630000;\nx[11] = -2.04452855233621470000;\nx[12] = -1.94479545222225280000;\nx[13] = -1.84506235210829120000;\nx[14] = -1.74532925199432950000;\nx[15] = -1.64559615188036790000;\nx[16] = -1.54586305176640600000;\nx[17] = -1.44612995165244440000;\nx[18] = -1.34639685153848280000;\nx[19] = -1.24666375142452110000;\nx[20] = -1.14693065131055950000;\nx[21] = -1.04719755119659740000;\nx[22] = -0.94746445108263622000;\nx[23] = -0.84773135096867458000;\nx[24] = -0.74799825085471250000;\nx[25] = -0.64826515074075086000;\nx[26] = -0.54853205062678922000;\nx[27] = -0.44879895051282759000;\nx[28] = -0.34906585039886595000;\nx[29] = -0.24933275028490431000;\nx[30] = -0.14959965017094268000;\nx[31] = -0.04986655005698104000;\nx[32] = 0.04986655005698104000;\nx[33] = 0.14959965017094268000;\nx[34] = 0.24933275028490431000;\nx[35] = 0.34906585039886595000;\nx[36] = 0.44879895051282759000;\nx[37] = 0.54853205062678922000;\nx[38] = 0.64826515074075086000;\nx[39] = 0.74799825085471250000;\nx[40] = 0.84773135096867414000;\nx[41] = 0.94746445108263533000;\nx[42] = 1.04719755119659830000;\nx[43] = 1.14693065131055950000;\nx[44] = 1.24666375142452070000;\nx[45] = 1.34639685153848280000;\nx[46] = 1.44612995165244400000;\nx[47] = 1.54586305176640600000;\nx[48] = 1.64559615188036810000;\nx[49] = 1.74532925199432930000;\nx[50] = 1.84506235210829140000;\nx[51] = 1.94479545222225260000;\nx[52] = 2.04452855233621470000;\nx[53] = 2.14426165245017670000;\nx[54] = 2.24399475256413790000;\nx[55] = 2.34372785267810000000;\nx[56] = 2.44346095279206120000;\nx[57] = 2.54319405290602240000;\nx[58] = 2.64292715301998450000;\nx[59] = 2.74266025313394660000;\nx[60] = 2.84239335324790780000;\nx[61] = 2.94212645336186980000;\nx[62] = 3.04185955347583100000;\nx[63] = 3.14159265358979310000;\n\n\nvar y = new Array();\ny[0] = -1.00000000000000000000;\ny[1] = -0.99503077536540141000;\ny[2] = -0.98017248784854383000;\ny[3] = -0.95557280578614079000;\ny[4] = -0.92147621187040774000;\ny[5] = -0.87822157337022844000;\ny[6] = -0.82623877431599468000;\ny[7] = -0.76604444311897790000;\ny[8] = -0.69823681808607274000;\ny[9] = -0.62348980185873348000;\ny[10] = -0.54254626386575933000;\ny[11] = -0.45621065735316296000;\ny[12] = -0.36534102436639487000;\ny[13] = -0.27084046814300500000;\ny[14] = -0.17364817766693030000;\ny[15] = -0.07473009358642426800;\ny[16] = 0.02493069173807303500;\ny[17] = 0.12434370464748527000;\ny[18] = 0.22252093395631445000;\ny[19] = 0.31848665025168443000;\ny[20] = 0.41128710313061151000;\ny[21] = 0.50000000000000033000;\ny[22] = 0.58374367223478973000;\ny[23] = 0.66168583759685928000;\ny[24] = 0.73305187182982645000;\ny[25] = 0.79713250722292250000;\ny[26] = 0.85329088163215572000;\ny[27] = 0.90096886790241915000;\ny[28] = 0.93969262078590832000;\ny[29] = 0.96907728622907796000;\ny[30] = 0.98883082622512852000;\ny[31] = 0.99875692121892234000;\ny[32] = 0.99875692121892234000;\ny[33] = 0.98883082622512852000;\ny[34] = 0.96907728622907796000;\ny[35] = 0.93969262078590832000;\ny[36] = 0.90096886790241915000;\ny[37] = 0.85329088163215572000;\ny[38] = 0.79713250722292250000;\ny[39] = 0.73305187182982645000;\ny[40] = 0.66168583759685962000;\ny[41] = 0.58374367223479051000;\ny[42] = 0.49999999999999950000;\ny[43] = 0.41128710313061151000;\ny[44] = 0.31848665025168482000;\ny[45] = 0.22252093395631445000;\ny[46] = 0.12434370464748572000;\ny[47] = 0.02493069173807303500;\ny[48] = -0.07473009358642449000;\ny[49] = -0.17364817766693008000;\ny[50] = -0.27084046814300522000;\ny[51] = -0.36534102436639465000;\ny[52] = -0.45621065735316296000;\ny[53] = -0.54254626386575977000;\ny[54] = -0.62348980185873348000;\ny[55] = -0.69823681808607307000;\ny[56] = -0.76604444311897790000;\ny[57] = -0.82623877431599446000;\ny[58] = -0.87822157337022844000;\ny[59] = -0.92147621187040774000;\ny[60] = -0.95557280578614057000;\ny[61] = -0.98017248784854383000;\ny[62] = -0.99503077536540141000;\ny[63] = -1.00000000000000000000;\n\n\nvar val;\nfor (i = 0; i < vnum; i++)\n{\n\tval = Math.cos(x[i]);\n\tif (!isEqual(val, y[i]))\n\t{\n\t\t$ERROR(\"\\nx = \" + x[i] + \"\\nlibc.cos(x) = \" + y[i] + \"\\nMath.cos(x) = \" + Math.cos(x[i]) + \"\\nMath.abs(libc.cos(x) - Math.cos(x)) > \" + prec + \"\\n\\n\"); \n\t}\n}\n",
    "id": "S15.8.2.7_A7"
   }
  ]
 }
}
