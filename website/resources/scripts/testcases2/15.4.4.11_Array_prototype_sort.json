{
 "testCollection": {
  "name": "15.4.4.11_Array_prototype_sort",
  "numTests": 28,
  "tests": [
   {
    "section": "15.4.4.11",
    "description": "If comparefn is undefined, use SortCompare operator",
    "test": "var x = new Array(2); \nx.sort();\n\n//CHECK#1\nif (x.length !== 2) {\n  $ERROR('#1: var x = new Array(2); x.sort(); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#2\nif (x[0] !== undefined) {\n  $ERROR('#2: var x = new Array(2); x.sort(); x[0] === undefined. Actual: ' + (x[0]));\n}    \n\n//CHECK#3\nif (x[1] !== undefined) {\n  $ERROR('#3: var x = new Array(2); x.sort(); x[1] === undefined. Actual: ' + (x[1]));\n}  \n",
    "id": "S15.4.4.11_A1.1_T1"
   },
   {
    "section": "15.4.4.11",
    "description": "If comparefn is undefined, use SortCompare operator",
    "test": "var x = new Array(2);\nx[1] = 1; \nx.sort();\n\n//CHECK#1\nif (x.length !== 2) {\n  $ERROR('#1: var x = new Array(2); x[1] = 1;  x.sort(); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#2\nif (x[0] !== 1) {\n  $ERROR('#2: var x = new Array(2); x[1] = 1;  x.sort(); x[0] === 1. Actual: ' + (x[0]));\n}    \n\n//CHECK#3\nif (x[1] !== undefined) {\n  $ERROR('#3: var x = new Array(2); x[1] = 1;  x.sort(); x[1] === undefined. Actual: ' + (x[1]));\n}\n\nvar x = new Array(2);\nx[0] = 1; \nx.sort();\n\n//CHECK#4\nif (x.length !== 2) {\n  $ERROR('#4: var x = new Array(2); x[0] = 1;  x.sort(); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#5\nif (x[0] !== 1) {\n  $ERROR('#5: var x = new Array(2); x[0] = 1;  x.sort(); x[0] === 1. Actual: ' + (x[0]));\n}    \n\n//CHECK#6\nif (x[1] !== undefined) {\n  $ERROR('#6: var x = new Array(2); x[0] = 1;  x.sort(); x[1] === undefined. Actual: ' + (x[1]));\n}  \n",
    "id": "S15.4.4.11_A1.2_T1"
   },
   {
    "section": "15.4.4.11",
    "description": "If comparefn is not undefined",
    "test": "var myComparefn = function(x,y) {\n  if (x === undefined) return -1; \n  if (y === undefined) return 1;\n  return 0;\n}\n\nvar x = new Array(2);\nx[1] = 1; \nx.sort(myComparefn);\n\n//CHECK#1\nif (x.length !== 2) {\n  $ERROR('#1: var x = new Array(2); x[1] = 1;  x.sort(myComparefn); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#2\nif (x[0] !== 1) {\n  $ERROR('#2: var x = new Array(2); x[1] = 1;  x.sort(myComparefn); x[0] === 1. Actual: ' + (x[0]));\n}    \n\n//CHECK#3\nif (x[1] !== undefined) {\n  $ERROR('#3: var x = new Array(2); x[1] = 1;  x.sort(myComparefn); x[1] === undefined. Actual: ' + (x[1]));\n}\n\nvar x = new Array(2);\nx[0] = 1; \nx.sort(myComparefn);\n\n//CHECK#4\nif (x.length !== 2) {\n  $ERROR('#4: var x = new Array(2); x[0] = 1;  x.sort(myComparefn); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#5\nif (x[0] !== 1) {\n  $ERROR('#5: var x = new Array(2); x[0] = 1;  x.sort(myComparefn); x[0] === 1. Actual: ' + (x[0]));\n}    \n\n//CHECK#6\nif (x[1] !== undefined) {\n  $ERROR('#6: var x = new Array(2); x[0] = 1;  x.sort(myComparefn); x[1] === undefined. Actual: ' + (x[1]));\n}  \n",
    "id": "S15.4.4.11_A1.2_T2"
   },
   {
    "section": "15.4.4.11",
    "description": "If comparefn is undefined, use SortCompare operator",
    "test": "var x = new Array(undefined, undefined); \nx.sort();\n\n//CHECK#1\nif (x.length !== 2) {\n  $ERROR('#1: var x = new Array(undefined, undefined); x.sort(); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#2\nif (x[0] !== undefined) {\n  $ERROR('#2: var x = new Array(undefined, undefined); x.sort(); x[0] === undefined. Actual: ' + (x[0]));\n}    \n\n//CHECK#3\nif (x[1] !== undefined) {\n  $ERROR('#3: var x = new Array(undefined, undefined); x.sort(); x[1] === undefined. Actual: ' + (x[1]));\n}  \n",
    "id": "S15.4.4.11_A1.3_T1"
   },
   {
    "section": "15.4.4.11",
    "description": "If comparefn is undefined, use SortCompare operator",
    "test": "var x = new Array(undefined, 1);\nx.sort();\n\n//CHECK#1\nif (x.length !== 2) {\n  $ERROR('#1: var x = new Array(undefined, 1); x.sort(); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#2\nif (x[0] !== 1) {\n  $ERROR('#2: var x = new Array(undefined, 1); x.sort(); x[0] === 1. Actual: ' + (x[0]));\n}    \n\n//CHECK#3\nif (x[1] !== undefined) {\n  $ERROR('#3: var x = new Array(undefined, 1); x.sort(); x[1] === undefined. Actual: ' + (x[1]));\n}\n\nvar x = new Array(1, undefined);\nx.sort();\n\n//CHECK#4\nif (x.length !== 2) {\n  $ERROR('#4: var x = new Array(1, undefined); x.sort(); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#5\nif (x[0] !== 1) {\n  $ERROR('#5: var x = new Array(1, undefined); x.sort(); x[0] === 1. Actual: ' + (x[0]));\n}    \n\n//CHECK#6\nif (x[1] !== undefined) {\n  $ERROR('#6: var x = new Array(1, undefined); x.sort(); x[1] === undefined. Actual: ' + (x[1]));\n}  \n",
    "id": "S15.4.4.11_A1.4_T1"
   },
   {
    "section": "15.4.4.11",
    "description": "If comparefn is not undefined",
    "test": "var myComparefn = function(x,y) {\n  if (x === undefined) return -1; \n  if (y === undefined) return 1;\n  return 0;\n}\n\nvar x = new Array(undefined, 1);\nx.sort(myComparefn);\n\n//CHECK#1\nif (x.length !== 2) {\n  $ERROR('#1: var x = new Array(undefined, 1); x.sort(myComparefn); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#2\nif (x[0] !== 1) {\n  $ERROR('#2: var x = new Array(undefined, 1); x.sort(myComparefn); x[0] === 1. Actual: ' + (x[0]));\n}    \n\n//CHECK#3\nif (x[1] !== undefined) {\n  $ERROR('#3: var x = new Array(undefined, 1); x.sort(myComparefn); x[1] === undefined. Actual: ' + (x[1]));\n}\n\nvar x = new Array(1, undefined);\nx.sort(myComparefn);\n\n//CHECK#4\nif (x.length !== 2) {\n  $ERROR('#4: var x = new Array(1, undefined); x.sort(myComparefn); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#5\nif (x[0] !== 1) {\n  $ERROR('#5: var x = new Array(1, undefined); x.sort(myComparefn); x[0] === 1. Actual: ' + (x[0]));\n}    \n\n//CHECK#6\nif (x[1] !== undefined) {\n  $ERROR('#6: var x = new Array(1, undefined); x.sort(myComparefn); x[1] === undefined. Actual: ' + (x[1]));\n}  \n",
    "id": "S15.4.4.11_A1.4_T2"
   },
   {
    "section": "15.4.4.11",
    "description": "Checking sort() and sort(undefined)",
    "test": "var x = new Array(1,0);\nx.sort();\n\n//CHECK#1\nif (x.length !== 2) {\n  $ERROR('#1: var x = new Array(1,0);  x.sort(); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#2\nif (x[0] !== 0) {\n  $ERROR('#2: var x = new Array(1,0);  x.sort(); x[0] === 0. Actual: ' + (x[0]));\n}    \n\n//CHECK#3\nif (x[1] !== 1) {\n  $ERROR('#3: var x = new Array(1,0);  x.sort(); x[1] === 1. Actual: ' + (x[1]));\n}\n\nvar x = new Array(1,0);\nx.sort(undefined);\n\n//CHECK#4\nif (x.length !== 2) {\n  $ERROR('#4: var x = new Array(1,0);  x.sort(undefined); x.length === 2. Actual: ' + (x.length));\n}\n\n//CHECK#5\nif (x[0] !== 0) {\n  $ERROR('#5: var x = new Array(1,0);  x.sort(undefined); x[0] === 0. Actual: ' + (x[0]));\n}    \n\n//CHECK#6\nif (x[1] !== 1) {\n  $ERROR('#6: var x = new Array(1,0);  x.sort(undefined); x[1] === 1. Actual: ' + (x[1]));\n}\n",
    "id": "S15.4.4.11_A1.5_T1"
   },
   {
    "section": "15.4.4.11",
    "description": "Checking ENGLISH ALPHABET",
    "test": "var alphabetR = [\"z\", \"y\", \"x\", \"w\", \"v\", \"u\", \"t\", \"s\", \"r\", \"q\", \"p\", \"o\", \"n\", \"M\", \"L\", \"K\", \"J\", \"I\", \"H\", \"G\", \"F\", \"E\", \"D\", \"C\", \"B\", \"A\"];\nvar alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n\n//CHECK#1\nalphabetR.sort();\nvar result = true;\nfor (var i = 0; i < 26; i++) {\n  if (alphabetR[i] !== alphabet[i]) result = false;\n}\n\nif (result !== true) {\n  $ERROR('#1: CHECK ENGLISH ALPHABET');\n}\n",
    "id": "S15.4.4.11_A2.1_T1"
   },
   {
    "section": "15.4.4.11",
    "description": "Checking RUSSIAN ALPHABET",
    "test": "var alphabetR = [\"ё\", \"я\", \"ю\", \"э\", \"ь\", \"ы\", \"ъ\", \"щ\", \"ш\", \"ч\", \"ц\", \"х\", \"ф\", \"у\", \"т\", \"с\", \"р\", \"П\", \"О\", \"Н\", \"М\", \"Л\", \"К\", \"Й\", \"И\", \"З\", \"Ж\", \"Е\", \"Д\", \"Г\", \"В\", \"Б\", \"А\"];\nvar  alphabet = [\"А\", \"Б\", \"В\", \"Г\", \"Д\", \"Е\", \"Ж\", \"З\", \"И\", \"Й\", \"К\", \"Л\", \"М\", \"Н\", \"О\", \"П\", \"р\", \"с\", \"т\", \"у\", \"ф\", \"х\", \"ц\", \"ч\", \"ш\", \"щ\", \"ъ\", \"ы\", \"ь\", \"э\", \"ю\", \"я\", \"ё\"];\n\n//CHECK#1\nalphabetR.sort();\nvar result = true;\nfor (var i = 0; i < 26; i++) {\n  if (alphabetR[i] !== alphabet[i]) result = false;\n}\n\nif (result !== true) {\n  $ERROR('#1: CHECK RUSSIAN ALPHABET');\n}\n",
    "id": "S15.4.4.11_A2.1_T2"
   },
   {
    "section": "15.4.4.11",
    "description": "Checking ToString operator",
    "test": "var obj = {valueOf: function() {return 1}, toString: function() {return -2}};\nvar alphabetR = [undefined, 2, 1, \"X\", -1, \"a\", true, obj, NaN, Infinity]; \nvar  alphabet = [-1, obj, 1, 2, Infinity, NaN, \"X\", \"a\", true, undefined];\n \n//CHECK#1\nalphabetR.sort();\nvar result = true;\nfor (var i = 0; i < 10; i++) {\n  if (!(isNaN(alphabetR[i]) && isNaN(alphabet[i]))) { \n    if (alphabetR[i] !== alphabet[i]) result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#1: Check ToString operator');\n}\n",
    "id": "S15.4.4.11_A2.1_T3"
   },
   {
    "section": "15.4.4.11",
    "description": "Checking ENGLISH ALPHABET",
    "test": "var alphabetR = [\"z\", \"y\", \"x\", \"w\", \"v\", \"u\", \"t\", \"s\", \"r\", \"q\", \"p\", \"o\", \"n\", \"M\", \"L\", \"K\", \"J\", \"I\", \"H\", \"G\", \"F\", \"E\", \"D\", \"C\", \"B\", \"A\"];\nvar  alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n\nvar myComparefn = function(x,y) {\n  var xS = String(x);\n  var yS = String(y);\n  if (xS < yS) return 1\n  if (xS > yS) return -1;   \n  return 0;\n}\n\n//CHECK#1\nalphabet.sort(myComparefn);\nvar result = true;\nfor (var i = 0; i < 26; i++) {\n  if (alphabetR[i] !== alphabet[i]) result = false;\n}\n\nif (result !== true) {\n  $ERROR('#1: CHECK ENGLISH ALPHABET');\n} \n",
    "id": "S15.4.4.11_A2.2_T1"
   },
   {
    "section": "15.4.4.11",
    "description": "Checking RUSSIAN ALPHABET",
    "test": "var alphabetR = [\"ё\", \"я\", \"ю\", \"э\", \"ь\", \"ы\", \"ъ\", \"щ\", \"ш\", \"ч\", \"ц\", \"х\", \"ф\", \"у\", \"т\", \"с\", \"р\", \"П\", \"О\", \"Н\", \"М\", \"Л\", \"К\", \"Й\", \"И\", \"З\", \"Ж\", \"Е\", \"Д\", \"Г\", \"В\", \"Б\", \"А\"];\nvar  alphabet = [\"А\", \"Б\", \"В\", \"Г\", \"Д\", \"Е\", \"Ж\", \"З\", \"И\", \"Й\", \"К\", \"Л\", \"М\", \"Н\", \"О\", \"П\", \"р\", \"с\", \"т\", \"у\", \"ф\", \"х\", \"ц\", \"ч\", \"ш\", \"щ\", \"ъ\", \"ы\", \"ь\", \"э\", \"ю\", \"я\", \"ё\"];\n\nvar myComparefn = function(x,y) {\n  var xS = String(x);\n  var yS = String(y);\n  if (xS < yS) return 1\n  if (xS > yS) return -1;   \n  return 0;\n}\n\n//CHECK#1\nalphabet.sort(myComparefn);\nvar result = true;\nfor (var i = 0; i < 26; i++) {\n  if (alphabetR[i] !== alphabet[i]) result = false;\n}\n\nif (result !== true) {\n  $ERROR('#1: CHECK RUSSIAN ALPHABET');\n}\n",
    "id": "S15.4.4.11_A2.2_T2"
   },
   {
    "section": "15.4.4.11",
    "description": "Checking ToString operator",
    "test": "var obj = {valueOf: function() {return 1}, toString: function() {return -2}}; \nvar alphabetR = [undefined, 2, 1, \"X\", -1, \"a\", true, obj, NaN, Infinity]; \nvar alphabet = [true, \"a\", \"X\", NaN, Infinity, 2, 1, obj, -1, undefined];\n\nvar myComparefn = function(x,y) {\n  var xS = String(x);\n  var yS = String(y);\n  if (xS < yS) return 1\n  if (xS > yS) return -1;   \n  return 0;\n}\n \n//CHECK#1\nalphabetR.sort(myComparefn);\nvar result = true;\nfor (var i = 0; i < 10; i++) {\n  if (!(isNaN(alphabetR[i]) && isNaN(alphabet[i]))) { \n    if (alphabetR[i] !== alphabet[i]) result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#1: Check ToString operator');\n}\n",
    "id": "S15.4.4.11_A2.2_T3"
   },
   {
    "section": "15.4.4.11",
    "description": "If comparefn is undefined, use SortCompare operator",
    "test": "var obj = {valueOf: function() {return 1}, toString: function() {return -2}};\nvar alphabetR = {0:undefined, 1:2, 2:1, 3:\"X\", 4:-1, 5:\"a\", 6:true, 7:obj, 8:NaN, 9:Infinity};\nalphabetR.sort = Array.prototype.sort; \nalphabetR.length = 10;\nvar alphabet = [-1, obj, 1, 2, Infinity, NaN, \"X\", \"a\", true, undefined];\n  \nalphabetR.sort();\n\n //CHECK#0\nalphabetR.getClass = Object.prototype.toString;\nif (alphabetR.getClass() !== \"[object \" + \"Object\" + \"]\") {\n  $ERROR('#0: alphabetR.sort() is Object object, not Array object');\n}\n \n//CHECK#1\nvar result = true;\nfor (var i = 0; i < 10; i++) {\n  if (!(isNaN(alphabetR[i]) && isNaN(alphabet[i]))) { \n    if (alphabetR[i] !== alphabet[i]) result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#1: Check ToString operator');\n} \n",
    "id": "S15.4.4.11_A3_T1"
   },
   {
    "section": "15.4.4.11",
    "description": "If comparefn is not undefined",
    "test": "var obj = {valueOf: function() {return 1}, toString: function() {return -2}};\nvar alphabetR = {0:undefined, 1:2, 2:1, 3:\"X\", 4:-1, 5:\"a\", 6:true, 7:obj, 8:NaN, 9:Infinity};\nalphabetR.sort = Array.prototype.sort; \nalphabetR.length = 10; \nvar alphabet = [true, \"a\", \"X\", NaN, Infinity, 2, 1, obj, -1, undefined];\n \n var myComparefn = function(x,y) {\n  var xS = String(x);\n  var yS = String(y);\n  if (xS < yS) return 1\n  if (xS > yS) return -1;   \n  return 0;\n}\n  \nalphabetR.sort(myComparefn);\n\n //CHECK#0\nalphabetR.getClass = Object.prototype.toString;\nif (alphabetR.getClass() !== \"[object \" + \"Object\" + \"]\") {\n  $ERROR('#0: alphabetR.sort() is Object object, not Array object');\n}\n \n//CHECK#1\nvar result = true;\nfor (var i = 0; i < 10; i++) {\n  if (!(isNaN(alphabetR[i]) && isNaN(alphabet[i]))) { \n    if (alphabetR[i] !== alphabet[i]) result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#1: Check ToString operator');\n} \n",
    "id": "S15.4.4.11_A3_T2"
   },
   {
    "section": "15.4.4.11",
    "description": "length = 4294967296",
    "test": "var obj = {};\nobj.sort = Array.prototype.sort;\nobj[0] = \"x\";\nobj[4294967295] = \"y\";\nobj.length = 4294967296;\n\n//CHECK#1\nif (obj.sort() !== obj) {\n  $ERROR('#1: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"x\"; obj[4294967295] = \"y\"; obj.length = 4294967296; obj.sort() === obj. Actual: ' + (obj.sort()));\n}\n\n//CHECK#2\nif (obj.length !== 4294967296) {\n  $ERROR('#2: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"x\"; obj[4294967295] = \"y\"; obj.length = 4294967296; obj.sort(); obj.length === 4294967296. Actual: ' + (obj.length));\n}\n\n//CHECK#3\nif (obj[0] !== \"x\") {\n  $ERROR('#3: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"x\"; obj[4294967295] = \"y\"; obj.length = 4294967296; obj.sort(); obj[0] == \"x\"');\n}\n\n//CHECK#4\nif (obj[4294967295] !== \"y\") {\n  $ERROR('#4: var obj = {}; obj.sort = Array.prototype.sort; obj[] = \"x\"; obj[4294967295] = \"y\"; obj.length = 4294967296; obj.sort(); obj[4294967295] == \"y\"');\n}\n",
    "id": "S15.4.4.11_A4_T1"
   },
   {
    "section": "15.4.4.11",
    "description": "length = 4294967298",
    "test": "var obj = {};\nobj.sort = Array.prototype.sort;\nobj[0] = \"z\";\nobj[1] = \"y\";\nobj[4294967297] = \"x\";\nobj.length = 4294967298;\n\n//CHECK#1\nif (obj.sort() !== obj) {\n  $ERROR('#1: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[4294967297] = \"x\"; obj.length = 4294967298; obj.sort() === obj. Actual: ' + (obj.sort()));\n}\n\n//CHECK#2\nif (obj.length !== 4294967298) {\n  $ERROR('#2: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[4294967297] = \"x\"; obj.length = 4294967298; obj.sort(); obj.length === 4294967298. Actual: ' + (obj.length));\n}\n\n//CHECK#3\nif (obj[0] !== \"y\") {\n  $ERROR('#3: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[4294967297] = \"x\"; obj.length = 4294967298; obj.sort(); obj[0] === \"y\". Actual: ' + (obj[0]));\n}   \n\n//CHECK#4\nif (obj[1] !== \"z\") {\n  $ERROR('#4: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[4294967297] = \"x\"; obj.length = 4294967298; obj.sort(); obj[1] === \"z\". Actual: ' + (obj[1]));\n} \n\n//CHECK#5\nif (obj[4294967297] !== \"x\") {\n  $ERROR('#5: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[4294967297] = \"x\"; obj.length = 4294967298; obj.sort(); obj[4294967297] === \"x\". Actual: ' + (obj[4294967297]));\n} \n",
    "id": "S15.4.4.11_A4_T2"
   },
   {
    "section": "15.4.4.11",
    "description": "length = -4294967294",
    "test": "var obj = {};\nobj.sort = Array.prototype.sort;\nobj[0] = \"z\";\nobj[1] = \"y\";\nobj[2] = \"x\";\nobj.length = -4294967294;\n\n//CHECK#1\nif (obj.sort() !== obj) {\n  $ERROR('#1: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[2] = \"x\"; obj.length = -4294967294; obj.sort() === obj. Actual: ' + (obj.sort()));\n}\n\n//CHECK#2\nif (obj.length !== -4294967294) {\n  $ERROR('#2: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[2] = \"x\"; obj.length = -4294967294; obj.sort(); obj.length === -4294967294. Actual: ' + (obj.length));\n}\n\n//CHECK#3\nif (obj[0] !== \"y\") {\n  $ERROR('#3: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[2] = \"x\"; obj.length = -4294967294; obj.sort(); obj[0] === \"y\". Actual: ' + (obj[0]));\n}   \n\n//CHECK#4\nif (obj[1] !== \"z\") {\n  $ERROR('#4: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[2] = \"x\"; obj.length = -4294967294; obj.sort(); obj[1] === \"z\". Actual: ' + (obj[1]));\n} \n\n//CHECK#5\nif (obj[2] !== \"x\") {\n  $ERROR('#5: var obj = {}; obj.sort = Array.prototype.sort; obj[0] = \"z\"; obj[1] = \"y\"; obj[2] = \"x\"; obj.length = -4294967294; obj.sort(); obj[2] === \"x\". Actual: ' + (obj[2]));\n}  \n",
    "id": "S15.4.4.11_A4_T3"
   },
   {
    "section": "15.4.4.11",
    "description": "comparefn function throw \"error\"",
    "test": "//CHECK#1\nvar myComparefn = function(x,y) {\n  throw \"error\";\n}\nvar x = [1,0];\ntry {\n  x.sort(myComparefn)\n  $ERROR('#1.1: Array.sort should not eat exceptions');\n} catch(e) {\n  if (e !== \"error\") {\n    $ERROR('#1.2: Array.sort should not eat exceptions');\n  }\n}     \n",
    "id": "S15.4.4.11_A5_T1"
   },
   {
    "section": "15.4.4.11, 8.6.2.1, 8.6.2.5",
    "description": "[[Prototype]] of Array instance is Array.prototype, [[Prototype] of Array.prototype is Object.prototype",
    "test": "Array.prototype[1] = -1;\nvar x = [1,0];\nx.length = 2;\nx.sort();\n\n//CHECK#1\nif (x[0] !== 0) {  \n  $ERROR('#1: Array.prototype[1] = -1; x = [1,0]; x.length = 2; x.sort(); x[0] === 0. Actual: ' + (x[0]));    \n}\n\n//CHECK#2\nif (x[1] !== 1) {  \n  $ERROR('#2: Array.prototype[1] = -1; x = [1,0]; x.length = 2; x.sort(); x[1] === 1. Actual: ' + (x[1]));    \n}\n\nx.length = 0;\n\n//CHECK#3\nif (x[0] !== undefined) {  \n  $ERROR('#3: Array.prototype[1] = -1; x = [1,0]; x.length = 2; x.sort(); x.length = 0; x[0] === undefined. Actual: ' + (x[0]));    \n}\n\n//CHECK#4\nif (x[1] !== -1) {  \n  $ERROR('#4: Array.prototype[1] = -1; x = [1,0]; x.length = 2; x.sort(); x.length = 0; x[1] === -1. Actual: ' + (x[1]));    \n}\n\nObject.prototype[1] = -1;\nObject.prototype.length = 2;\nObject.prototype.sort = Array.prototype.sort;\nx = {0:1,1:0};\nx.sort();\n\n//CHECK#5\nif (x[0] !== 0) {  \n  $ERROR('#5: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.sort = Array.prototype.sort; x = {0:1,1:0}; x.sort(); x[0] === 0. Actual: ' + (x[0]));    \n}\n\n//CHECK#6\nif (x[1] !== 1) {  \n  $ERROR('#6: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.sort = Array.prototype.sort; x = {0:1,1:0}; x.sort(); x[1] === 1. Actual: ' + (x[1]));    \n}\n\ndelete x[0];\ndelete x[1];\n\n//CHECK#7\nif (x[0] !== undefined) {  \n  $ERROR('#7: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.sort = Array.prototype.sort; x = {0:1,1:0}; x.sort(); delete x[0]; delete x[1]; x[0] === undefined. Actual: ' + (x[0]));    \n}\n\n//CHECK#8\nif (x[1] !== -1) {  \n  $ERROR('#8: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.sort = Array.prototype.sort; x = {0:1,1:0}; x.sort(); delete x[0]; delete x[1]; x[1] === -1. Actual: ' + (x[1]));    \n}\n",
    "id": "S15.4.4.11_A6_T2"
   },
   {
    "section": "15.4.4.11, 15.2.4.7, 12.6.4",
    "description": "Checking use propertyIsEnumerable, for-in",
    "test": "//CHECK#1\nif (Array.prototype.sort.propertyIsEnumerable('length') !== false) {\n  $ERROR('#1: Array.prototype.sort.propertyIsEnumerable(\\'length\\') === false. Actual: ' + (Array.prototype.sort.propertyIsEnumerable('length')));\n}\n\n//CHECK#2\nvar result = true;\nfor (var p in Array.sort){\n  if (p === \"length\") {\n    result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#2: result = true; for (p in Array.sort) { if (p === \"length\") result = false; }  result === true;');\n}\n\n",
    "id": "S15.4.4.11_A7.1"
   },
   {
    "section": "15.4.4.11, 15.2.4.5, 11.4.1",
    "description": "Checking use hasOwnProperty, delete",
    "strict_mode_negative": "",
    "test": "//CHECK#1\nif (Array.prototype.sort.hasOwnProperty('length') !== true) {\n  $FAIL('#1: Array.sort.prototype.hasOwnProperty(\\'length\\') === true. Actual: ' + (Array.sort.prototype.hasOwnProperty('length')));\n}\n\ndelete Array.prototype.sort.length;\n\n//CHECK#2\nif (Array.prototype.sort.hasOwnProperty('length') !== true) {\n  $ERROR('#2: delete Array.prototype.sort.length; Array.prototype.sort.hasOwnProperty(\\'length\\') === true. Actual: ' + (Array.prototype.sort.hasOwnProperty('length')));\n}\n\n//CHECK#3\nif (Array.prototype.sort.length === undefined) {\n  $ERROR('#3: delete Array.prototype.sort.length; Array.prototype.sort.length !== undefined');\n}\n\n\n",
    "id": "S15.4.4.11_A7.2",
    "strict_only": ""
   },
   {
    "section": "15.4.4.11",
    "description": "Checking if varying the length fails",
    "strict_mode_negative": "",
    "test": "//CHECK#1\nvar x = Array.prototype.sort.length;\nArray.prototype.sort.length = Infinity;\nif (Array.prototype.sort.length !== x) {\n  $ERROR('#1: x = Array.prototype.sort.length; Array.prototype.sort.length = Infinity; Array.prototype.sort.length === x. Actual: ' + (Array.prototype.sort.length));\n}\n\n",
    "id": "S15.4.4.11_A7.3",
    "strict_only": ""
   },
   {
    "section": "15.4.4.11",
    "description": "sort.length === 1",
    "test": "//CHECK#1\nif (Array.prototype.sort.length !== 1) {\n  $ERROR('#1: Array.prototype.sort.length === 1. Actual: ' + (Array.prototype.sort.length));\n}\n\n",
    "id": "S15.4.4.11_A7.4"
   },
   {
    "section": "15.4.4.11, 15.2.4.7, 12.6.4",
    "description": "Checking use propertyIsEnumerable, for-in",
    "test": "//CHECK#1\nif (Array.propertyIsEnumerable('sort') !== false) {\n  $ERROR('#1: Array.propertyIsEnumerable(\\'sort\\') === false. Actual: ' + (Array.propertyIsEnumerable('sort')));\n}\n\n//CHECK#2\nvar result = true;\nfor (var p in Array){\n  if (p === \"sort\") {\n    result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#2: result = true; for (p in Array) { if (p === \"sort\") result = false; }  result === true;');\n}\n\n",
    "id": "S15.4.4.11_A7.5"
   },
   {
    "section": "15.4.4.11",
    "description": "Checking Array.prototype.sort.prototype",
    "test": "//CHECK#1\nif (Array.prototype.sort.prototype !== undefined) {\n  $ERROR('#1: Array.prototype.sort.prototype === undefined. Actual: ' + (Array.prototype.sort.prototype));\n}\n",
    "id": "S15.4.4.11_A7.6"
   },
   {
    "section": "15.4.4.11, 11.2.2",
    "description": "If property does not implement the internal [[Construct]] method, throw a TypeError exception",
    "test": "//CHECK#1\n\ntry {\n  new Array.prototype.sort();\n  $ERROR('#1.1: new Array.prototype.sort() throw TypeError. Actual: ' + (new Array.prototype.sort()));\n} catch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#1.2: new Array.prototype.sort() throw TypeError. Actual: ' + (e));\n  }\n}\n",
    "id": "S15.4.4.11_A7.7"
   },
   {
    "section": "15.4.4.11",
    "description": "comparefn tests that its this value is undefined",
    "test": "var global = this;\n[2,3].sort(function(x,y) {\n  \"use strict\";\n\n  if (this === global) {\n    $FAIL('#1: Sort leaks global');\n  }\n  if (this !== undefined) {\n    $FAIL('#2: Sort comparefn should be called with this===undefined. ' +\n          'Actual: ' + this);\n  }\n  return x - y;\n});\n",
    "id": "S15.4.4.11_A8"
   }
  ]
 }
}
