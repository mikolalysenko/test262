{
 "testCollection": {
  "name": "8.5_The_Number_Type",
  "numTests": 19,
  "tests": [
   {
    "section": "8.5, 7.8.3",
    "description": "Compare NaN with NaN",
    "test": "var x = Number.NaN;\nvar x_ = Number.NaN;\n\n///////////////////////////////////////////////////////\n// CHECK #1\nif (x === x_){\n  $ERROR('#1: NaN !== NaN ');\n}\n//\n//////////////////////////////////////////////////////////\n",
    "id": "S8.5_A1"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Create variable entitled Infinity",
    "test": "var Infinity=1.0;\nInfinity='asdf';\nInfinity=true;\n",
    "id": "S8.5_A10"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Check 1.0/p_zero !== 1.0/n_zero",
    "test": "var p_zero=+0;\nvar n_zero=-0;\n\nif (1.0/p_zero === 1.0/n_zero){\n  $ERROR('#1: var p_zero=+0; var n_zero=-0; 1.0/p_zero !== 1.0/n_zero');\n}\n",
    "id": "S8.5_A11_T1"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Compare positive_zero and negative_zero",
    "test": "var p_zero=+0;\nvar n_zero=-0;\n\n//CHECK #1\nif ((p_zero == n_zero) !== true){\n  $ERROR('#1: var p_zero=+0; var n_zero=-0; p_zero != n_zero');\n}\n\n//CHECK #2\nif ((n_zero == 0) !== true){\n  $ERROR('#2: var p_zero=+0; var n_zero=-0; n_zero == 0');\n}\n\n//CHECK #3\nif ((p_zero == -0) !== true){\n  $ERROR('#3: var p_zero=+0; var n_zero=-0; p_zero == -0');\n}\n\n//CHECK #4\nif ((p_zero === 0) !== true){\n  $ERROR('#4: var p_zero=+0; var n_zero=-0; p_zero === 0');\n}\n\n//CHECK #5\nif ((n_zero === -0) !== true){\n  $ERROR('#5: var p_zero=+0; var n_zero=-0; n_zero === -0');\n}\n",
    "id": "S8.5_A11_T2"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Compare Infinity and +Infinity with Number.POSITIVE_INFINITY",
    "test": "var p_inf=+Infinity;\nvar inf=Infinity;\n\n//CHECK #1 \nif (p_inf!==Number.POSITIVE_INFINITY){\n  $ERROR('#1: +Infinity is the same as Number.POSITIVE_INFINITY');\n}\n\n//CHECK #2 \nif (inf!==Number.POSITIVE_INFINITY){\n  $ERROR('#2: Infinity is the same as Number.POSITIVE_INFINITY');\n}\n",
    "id": "S8.5_A12.1"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Compare -Infinity with Number.NEGATIVE_INFINITY",
    "test": "var n_inf=-Infinity;\n\n//CHECK #1 \nif (n_inf !== Number.NEGATIVE_INFINITY){\n  $ERROR('#1: -Infinity is the same as Number.NEGATIVE_INFINITY');\n}\n",
    "id": "S8.5_A12.2"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Finite Non zero values where e is -1074",
    "test": "//CHECK #1 \nif ((1*((Math.pow(2,53))-1)*(Math.pow(2,-1074))) !== 4.4501477170144023e-308){\n  $ERROR('#1: (1*((Math.pow(2,53))-1)*(Math.pow(2,-1074))) === 4.4501477170144023e-308. Actual: ' + ((1*((Math.pow(2,53))-1)*(Math.pow(2,-1074)))));\n}\n\n//CHECK #2 \nif ((1*(Math.pow(2,52))*(Math.pow(2,-1074))) !== 2.2250738585072014e-308){\n  $ERROR('#2: (1*(Math.pow(2,52))*(Math.pow(2,-1074))) === 2.2250738585072014e-308. Actual: ' + ((1*(Math.pow(2,52))*(Math.pow(2,-1074)))));\n}\n\n//CHECK #3 \nif ((-1*(Math.pow(2,52))*(Math.pow(2,-1074))) !== -2.2250738585072014e-308){\n  $ERROR('#3: (-1*(Math.pow(2,52))*(Math.pow(2,-1074))) === -2.2250738585072014e-308. Actual: ' + ((-1*(Math.pow(2,52))*(Math.pow(2,-1074)))));\n}\n",
    "id": "S8.5_A13_T1"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Finite Non zero values where e is 971",
    "test": "//CHECK #1 \nif ((1*(Math.pow(2,52))*(Math.pow(2,971))) !== 8.98846567431158e+307){\n  $ERROR('#1: (1*(Math.pow(2,52))*(Math.pow(2,971))) === 8.98846567431158e+307. Actual: ' + ((1*(Math.pow(2,52))*(Math.pow(2,971)))));\n}\n\n//CHECK #2 \nif ((1*((Math.pow(2,53))-1)*(Math.pow(2,971))) !== 1.7976931348623157e+308){\n  $ERROR('#2: (1*((Math.pow(2,53))-1)*(Math.pow(2,971))) === 1.7976931348623157e+308. Actual: ' + ((1*((Math.pow(2,53))-1)*(Math.pow(2,971)))));\n}\n\n//CHECK #3 \nif ((-1*(Math.pow(2,52))*(Math.pow(2,971))) !== -8.98846567431158e+307){\n  $ERROR('#3: (-1*(Math.pow(2,52))*(Math.pow(2,971))) === -8.98846567431158e+307. Actual: ' + ((-1*(Math.pow(2,52))*(Math.pow(2,971)))));\n}\n",
    "id": "S8.5_A13_T2"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Create number bigger of 2**1024",
    "test": "//CHECK #1 \nif (1e+308*2 !== Infinity){\n  $ERROR('#1: 1e+308*2 === Infinity. Actual: ' + (1e+308*2));\n}\n\n//CHECK #2 \nif ((1*(Math.pow(2,53))*(Math.pow(2,971))) !== Infinity){\n  $ERROR('#2: (1*(Math.pow(2,53))*(Math.pow(2,971))) === Infinity. Actual: ' + ((1*(Math.pow(2,53))*(Math.pow(2,971)))));\n}\n",
    "id": "S8.5_A14_T1"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Create number smaller of -2**1024",
    "test": "//CHECK #1 \nif (-1e+308*3 !== -Infinity){\n  $ERROR('#1: -1e+308*3 === Infinity. Actual: ' + (-1e+308*3));\n}\n\n//CHECK #2 \nif ((-1*(Math.pow(2,53))*(Math.pow(2,971))) !== -Infinity){\n  $ERROR('#2: (-1*(Math.pow(2,53))*(Math.pow(2,971))) === Infinity. Actual: ' + ((-1*(Math.pow(2,53))*(Math.pow(2,971)))));\n}\n",
    "id": "S8.5_A14_T2"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Use 2^53 + 2 number and do some operation with it",
    "test": "var x = 9007199254740994.0; /* 2^53 + 2 */\nvar y = 1.0 - 1/65536.0;\nvar z = x + y;\nvar d = z - x;\n\nif (d !== 0){\n  $ERROR('#1: var x = 9007199254740994.0; var y = 1.0 - 1/65536.0; var z = x + y; var d = z - x; d === 0. Actual: ' + (d));\n}\n",
    "id": "S8.5_A2.1"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Use 2^53 + 2 number and do some operation with it",
    "test": "var x = 9007199254740994.0; /* 2^53 + 2 */\nvar y = 1.0 - 1/65536.0;\nvar z = x + y;\nvar d = z - x;\n\nif (d === 2){\n  $ERROR('#1: var x = 9007199254740994.0; var y = 1.0 - 1/65536.0; var z = x + y; var d = z - x; d !== 2');\n}\n",
    "id": "S8.5_A2.2"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Check type of NaN",
    "test": "var x=NaN;\n\n///////////////////////////////////////////////////////\n// CHECK#1\nif (typeof(x) !== \"number\"){\n  $ERROR('#1: var x=NaN; typeof(x) === \"number\". Actual: ' + (typeof(x)));\n}\n//\n//////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////\n// CHECK#2\nif (typeof(NaN) !== \"number\"){\n  $ERROR('#2: typeof(NaN) === \"number\". Actual: ' + (typeof(NaN)));\n}\n//\n//////////////////////////////////////////////////////////\n",
    "id": "S8.5_A3"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Create variable entitled NaN",
    "test": "var NaN=1.0;\nNaN='asdf';\nNaN=true;\nNaN=Number.NaN;\n",
    "id": "S8.5_A4"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Compare NaN with zero",
    "test": "var x = NaN;\nvar x_geq_0=(x >= 0.0);\nvar x_leq_0=(x <= 0.0);\nvar x_leq_0_OR_geq_0=(x <= 0.0)||(x >= 0.0);\nvar x_geq_0_ADD_leq_0=(x >= 0.0) + (x <= 0.0);\n\n\n///////////////////////////////////////////////////\n// CHECK#1\nif (x_geq_0){\n  $ERROR('#1: NaN not greater or equal zero');\n} else {\n  $PRINT('#1: NaN not greater or equal zero');\n}\n//\n///////////////////////////////////////////////////\n\n///////////////////////////////////////////////////\n// CHECK#2\nif (x_leq_0){\n  $ERROR('#2: NaN not less or equal zero');\n} else {\n  $PRINT('#2: NaN not less or equal zero');\n}\n//\n///////////////////////////////////////////////////\n\n///////////////////////////////////////////////////\n// CHECK#3\nif (x_leq_0_OR_geq_0){\n  $ERROR('#3: NaN not less or equal zero OR greater or equal zero');\n} else {\n  $PRINT('#3: NaN not less or equal zero OR greater or equal zero');\n}\n//\n///////////////////////////////////////////////////\n\n///////////////////////////////////////////////////\n// CHECK#4\nif (x_geq_0_ADD_leq_0){\n  $ERROR('#4: NaN not less or equal zero ADD greater or equal zero');\n} else {\n  $PRINT('#4: NaN not less or equal zero ADD greater or equal zero');\n}\n//\n///////////////////////////////////////////////////\n",
    "id": "S8.5_A5"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Check type of -Infinity",
    "test": "var x=-Infinity;\n\n///////////////////////////////////////////////////////\n// CHECK#1\nif (typeof(x) !== \"number\"){\n  $ERROR('#1: var x=-Infinity; typeof(x) === \"number\". Actual: ' + (typeof(x)));\n}\n//\n//////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////\n// CHECK#2\nif (typeof(-Infinity) !== \"number\"){\n  $ERROR('#2: typeof(-Infinity) === \"number\". Actual: ' + (typeof(-Infinity)));\n}\n//\n//////////////////////////////////////////////////////////\n",
    "id": "S8.5_A6"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Check type of +Infinity",
    "test": "var x=+Infinity;\n\n///////////////////////////////////////////////////////\n// CHECK#1\nif (typeof(x) !== \"number\"){\n  $ERROR('#1: var x=+Infinity; typeof(x) === \"number\". Actual: ' + (typeof(x)));\n}\n//\n//////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////\n// CHECK#2\nif (typeof(+Infinity) !== \"number\"){\n  $ERROR('#2: typeof(+Infinity) === \"number\". Actual: ' + (typeof(+Infinity)));\n}\n//\n//////////////////////////////////////////////////////////\n",
    "id": "S8.5_A7"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Compare Infinity and +Infinity",
    "test": "var p_inf=+Infinity;\nvar inf=Infinity;\n\n///////////////////////////////////////////////////////\n// \nif (p_inf!==inf){\n  $ERROR('#1: Infinity is the same as +Infinity');\n}\n//\n//////////////////////////////////////////////////////////\n",
    "id": "S8.5_A8"
   },
   {
    "section": "8.5, 7.8.3",
    "description": "Try alter globally defined variable NaN",
    "strict_mode_negative": "",
    "test": "Number.NaN = 1;\n\nif (Number.NaN === 1) {\n  $ERROR('#1: Globally defined variable NaN has not been altered by program execution');\n}\n",
    "id": "S8.5_A9",
    "strict_only": ""
   }
  ]
 }
}
