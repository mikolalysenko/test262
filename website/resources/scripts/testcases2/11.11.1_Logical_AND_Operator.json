{
 "testCollection": {
  "name": "11.11.1_Logical_AND_Operator",
  "numTests": 16,
  "tests": [
   {
    "section": "11.11.1",
    "description": "Checking by using eval",
    "test": "//CHECK#1\nif ((eval(\"true\\u0009&&\\u0009true\")) !== true) {\n  $ERROR('#1: (true\\\\u0009&&\\\\u0009true) === true');\n}\n\n//CHECK#2\nif ((eval(\"true\\u000B&&\\u000Btrue\")) !== true) {\n  $ERROR('#2: (true\\\\u000B&&\\\\u000Btrue) === true');  \n}\n\n//CHECK#3\nif ((eval(\"true\\u000C&&\\u000Ctrue\")) !== true) {\n  $ERROR('#3: (true\\\\u000C&&\\\\u000Ctrue) === true');\n}\n\n//CHECK#4\nif ((eval(\"true\\u0020&&\\u0020true\")) !== true) {\n  $ERROR('#4: (true\\\\u0020&&\\\\u0020true) === true');\n}\n\n//CHECK#5\nif ((eval(\"true\\u00A0&&\\u00A0true\")) !== true) {\n  $ERROR('#5: (true\\\\u00A0&&\\\\u00A0true) === true');\n}\n\n//CHECK#6\nif ((eval(\"true\\u000A&&\\u000Atrue\")) !== true) {\n  $ERROR('#6: (true\\\\u000A&&\\\\u000Atrue) === true');  \n}\n\n//CHECK#7\nif ((eval(\"true\\u000D&&\\u000Dtrue\")) !== true) {\n  $ERROR('#7: (true\\\\u000D&&\\\\u000Dtrue) === true');\n}\n\n//CHECK#8\nif ((eval(\"true\\u2028&&\\u2028true\")) !== true) {\n  $ERROR('#8: (true\\\\u2028&&\\\\u2028true) === true');\n}\n\n//CHECK#9\nif ((eval(\"true\\u2029&&\\u2029true\")) !== true) {\n  $ERROR('#9: (true\\\\u2029&&\\\\u2029true) === true');\n}\n\n\n//CHECK#10\nif ((eval(\"true\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029&&\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029true\")) !== true) {\n  $ERROR('#10: (true\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029&&\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029true) === true');\n}\n",
    "id": "S11.11.1_A1"
   },
   {
    "section": "11.11.1, 8.7.1",
    "description": "Either Type is not Reference or GetBase is not null",
    "test": "//CHECK#1\nif ((false && true) !== false) {\n  $ERROR('#1: (false && true) === false');\n}\n\n//CHECK#2\nif ((true && false) !== false) {\n  $ERROR('#2: (true && false) === false');\n}\n\n//CHECK#3\nvar x = false;\nif ((x && true) !== false) {\n  $ERROR('#3: var x = false; (x && true) === false');\n}\n\n//CHECK#4\nvar y = new Boolean(false);\nif ((true && y) !== y) {\n  $ERROR('#4: var y = new Boolean(false); (true && y) === y');\n}\n\n//CHECK#5\nvar x = false;\nvar y = true;\nif ((x && y) !== false) {\n  $ERROR('#5: var x = false; var y = true; (x && y) === false');\n}\n\n//CHECK#6\nvar x = true;\nvar y = new Boolean(false);\nif ((x && y) !== y) {\n  $ERROR('#6: var x = true; var y = new Boolean(false); (x && y) === y');\n}\n\n//CHECK#7\nvar objectx = new Object();\nvar objecty = new Object();\nobjectx.prop = true;\nobjecty.prop = 1.1;\nif ((objectx.prop && objecty.prop) !== objecty.prop) {\n  $ERROR('#7: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; (objectx.prop && objecty.prop) === objecty.prop');\n}\n\n//CHECK#8\nvar objectx = new Object();\nvar objecty = new Object();\nobjectx.prop = 0;\nobjecty.prop = true;\nif ((objectx.prop && objecty.prop) !== objectx.prop) {\n  $ERROR('#8: var objectx = new Object(); var objecty = new Object(); objectx.prop = 0; objecty.prop = true; (objectx.prop && objecty.prop) === objectx.prop');\n}\n",
    "id": "S11.11.1_A2.1_T1"
   },
   {
    "section": "11.11.1, 8.7.1",
    "description": "If GetBase(x) is null, throw ReferenceError",
    "test": "//CHECK#1\ntry {\n  x && true;\n  $ERROR('#1.1: x && true throw ReferenceError. Actual: ' + (x && true));  \n}\ncatch (e) {\n  if ((e instanceof ReferenceError) !== true) {\n    $ERROR('#1.2: x && true throw ReferenceError. Actual: ' + (e));  \n  }\n}\n",
    "id": "S11.11.1_A2.1_T2"
   },
   {
    "section": "11.11.1, 8.7.1",
    "description": "If ToBoolean(x) is true and GetBase(y) is null, throw ReferenceError",
    "test": "//CHECK#1\ntry {\n  true && y;\n  $ERROR('#1.1: true && y throw ReferenceError. Actual: ' + (true && y));  \n}\ncatch (e) {\n  if ((e instanceof ReferenceError) !== true) {\n    $ERROR('#1.2: true && y throw ReferenceError. Actual: ' + (e));  \n  }\n}\n",
    "id": "S11.11.1_A2.1_T3"
   },
   {
    "section": "11.11.1, 8.7.1, 16",
    "description": "If ToBoolean(x) is false and GetBase(y) is null, return false",
    "test": "//CHECK#1\nif ((false && x) !== false) {\n  $ERROR('#1: (false && x) === false');\n}\n",
    "id": "S11.11.1_A2.1_T4"
   },
   {
    "section": "11.11.1",
    "description": "Checking with \"=\"",
    "test": "//CHECK#1\nvar x = false; \nif (((x = true) && x) !== true) {\n  $ERROR('#1: var x = false; ((x = true) && x) === true');\n}\n\n//CHECK#2\nvar x = false; \nif ((x && (x = true)) !== false) {\n  $ERROR('#2: var x = false; (x && (x = true)) === false');\n}\n\n",
    "id": "S11.11.1_A2.4_T1"
   },
   {
    "section": "11.11.1",
    "description": "Checking with \"throw\"",
    "test": "//CHECK#1\nvar x = function () { throw \"x\"; };\nvar y = function () { throw \"y\"; };\ntry {\n   x() && y();\n   $ERROR('#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() && y() throw \"x\". Actual: ' + (x() && y()));\n} catch (e) {\n   if (e === \"y\") {\n     $ERROR('#1.2: First expression is evaluated first, and then second expression');\n   } else {\n     if (e !== \"x\") {\n       $ERROR('#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() && y() throw \"x\". Actual: ' + (e));\n     }\n   }\n}\n",
    "id": "S11.11.1_A2.4_T2"
   },
   {
    "section": "11.11.1",
    "description": "Checking with undeclarated variables",
    "test": "//CHECK#1\ntry {\n  x && (x = true);\n  $ERROR('#1.1: x && (x = true) throw ReferenceError. Actual: ' + (x && (x = true)));  \n}\ncatch (e) {\n  if ((e instanceof ReferenceError) !== true) {\n    $ERROR('#1.2: x && (x = true) throw ReferenceError. Actual: ' + (e));  \n  }\n}\n\n//CHECK#2\nif (((y = true) && y) !== true) {\n  $ERROR('#2: ((y = true) && y) === true');\n}\n\n",
    "id": "S11.11.1_A2.4_T3"
   },
   {
    "section": "11.11.1",
    "description": "Type(x) is primitive boolean and Type(y) is changed between primitive boolean and Boolean object",
    "test": "//CHECK#1\nif ((false && true) !== false) {\n  $ERROR('#1: (false && true) === false');\n}\n\n//CHECK#2\nif ((false && false) !== false) {\n  $ERROR('#2: (false && false) === false');\n}\n\n//CHECK#3\nif ((false && new Boolean(true)) !== false) {\n  $ERROR('#3: (false && new Boolean(true)) === false');\n}\n\n//CHECK#4\nif ((false && new Boolean(false)) !== false) {\n  $ERROR('#4: (false && new Boolean(false)) === false');\n}\n",
    "id": "S11.11.1_A3_T1"
   },
   {
    "section": "11.11.1",
    "description": "Type(x) and Type(y) vary between primitive number and Number object",
    "test": "//CHECK#1\nif ((-0 && -1) !== 0) {\n  $ERROR('#1.1: (-0 && -1) === 0');\n} else {\n  if ((1 / (-0 && -1)) !== Number.NEGATIVE_INFINITY) {\n    $ERROR('#1.2: (-0 && -1) === -0');\n  }\n}\n\n//CHECK#2\nif ((0 && new Number(-1)) !== 0) {\n  $ERROR('#2.1: (0 && new Number(-1)) === 0');\n} else {\n  if ((1 / (0 && new Number(-1))) !== Number.POSITIVE_INFINITY) {\n    $ERROR('#2.2: (0 && new Number(-1)) === +0');\n  }\n}\n\n//CHECK#3\nif ((isNaN(NaN && 1)) !== true) {\n  $ERROR('#3: (NaN && 1) === Not-a-Number');\n}\n",
    "id": "S11.11.1_A3_T2"
   },
   {
    "section": "11.11.1",
    "description": "Type(x) and Type(y) vary between primitive string and String object",
    "test": "//CHECK#1\nif ((\"\" && \"1\") !== \"\") {\n  $ERROR('#1: (\"\" && \"1\") === \"\"');\n}\n\n//CHECK#2\nif ((\"\" && new String(\"1\")) !== \"\") {\n  $ERROR('#2: (\"\" && new String(\"1\")) === \"\"');\n}\n",
    "id": "S11.11.1_A3_T3"
   },
   {
    "section": "11.11.1",
    "description": "Type(x) or Type(y) is changed between null and undefined",
    "test": "//CHECK#1\nif ((undefined && true) !== undefined) {\n  $ERROR('#1: (undefined && true) === undefined');\n}\n\n//CHECK#2\nif ((null && false) !== null) {\n  $ERROR('#2: (null && false) === null');\n}\n",
    "id": "S11.11.1_A3_T4"
   },
   {
    "section": "11.11.1",
    "description": "Type(x) and Type(y) vary between primitive boolean and Boolean object",
    "test": "//CHECK#1\nif ((true && true) !== true) {\n  $ERROR('#1: (true && true) === true');\n}\n\n//CHECK#2\nif ((true && false) !== false) {\n  $ERROR('#2: (true && false) === false');\n}\n\n//CHECK#3\nvar y = new Boolean(true);\nif ((new Boolean(true) &&  y) !== y) {\n  $ERROR('#3: (var y = new Boolean(true); (new Boolean(true) &&  y) === y');\n}\n\n//CHECK#4\nvar y = new Boolean(false);\nif ((new Boolean(true) &&  y) !== y) {\n  $ERROR('#4: (var y = new Boolean(false); (new Boolean(true) &&  y) === y');\n}\n\n//CHECK#5\nvar y = new Boolean(true);\nif ((new Boolean(false) &&  y) !== y) {\n  $ERROR('#5: (var y = new Boolean(true); (new Boolean(false) &&  y) === y');\n}\n\n//CHECK#6\nvar y = new Boolean(false);\nif ((new Boolean(false) &&  y) !== y) {\n  $ERROR('#6: (var y = new Boolean(false); (new Boolean(false) &&  y) === y');\n}\n",
    "id": "S11.11.1_A4_T1"
   },
   {
    "section": "11.11.1",
    "description": "Type(x) and Type(y) vary between primitive number and Number object",
    "test": "//CHECK#1\nif ((-1 && -0) !== 0) {\n  $ERROR('#1.1: (-1 && -0) === 0');\n} else {\n  if ((1 / (-1 && -0)) !== Number.NEGATIVE_INFINITY) {\n    $ERROR('#1.2: (-1 && -0) === -0');\n  }\n}\n\n//CHECK#2\nif ((-1 && 0) !== 0) {\n  $ERROR('#2.1: (-1 && 0) === 0');\n} else {\n  if ((1 / (-1 && 0)) !== Number.POSITIVE_INFINITY) {\n    $ERROR('#2.2: (-1 && 0) === +0');\n  }\n}\n\n//CHECK#3\nif ((isNaN(0.1 && NaN)) !== true) {\n  $ERROR('#3: (0.1 && NaN) === Not-a-Number');\n}\n\n//CHECK#4\nvar y = new Number(0);\nif ((new Number(-1) && y) !== y) {\n  $ERROR('#4: (var y = new Number(0); (new Number(-1) && y) === y');\n}\n\n//CHECK#5\nvar y = new Number(NaN);\nif ((new Number(0) && y) !== y) {\n  $ERROR('#5: (var y = new Number(NaN); (new Number(0) && y) === y');\n}\n\n//CHECK#6\nvar y = new Number(-1);\nif ((new Number(NaN) && y) !== y) {\n  $ERROR('#6: (var y = new Number(-1); (new Number(NaN) && y) === y');\n}\n",
    "id": "S11.11.1_A4_T2"
   },
   {
    "section": "11.11.1",
    "description": "Type(x) and Type(y) vary between primitive string and String object",
    "test": "//CHECK#1\nif ((\"0\" && \"-1\") !== \"-1\") {\n  $ERROR('#-1: (\"0\" && \"-1\") === \"-1\"');\n}\n\n//CHECK#2\nif ((\"-1\" && \"x\") !== \"x\") {\n  $ERROR('#2: (\"-1\" && \"x\") === \"x\"');\n}\n\n//CHECK#3\nvar y = new String(-1);\nif ((new String(\"-1\") && y) !== y) {\n  $ERROR('#3: (var y = new String(-1); (new String(\"-1\") && y) === y');\n}\n\n//CHECK#4\nvar y = new String(NaN);\nif ((new String(\"0\") && y) !== y) {\n  $ERROR('#4: (var y = new String(NaN); (new String(\"0\") && y) === y');\n}\n\n//CHECK#5\nvar y = new String(\"-x\");\nif ((new String(\"x\") && y) !== y) {\n  $ERROR('#5: (var y = new String(\"-x\"); (new String(\"x\") && y) === y');\n}\n\n//CHECK#6\nvar y = new String(-1);\nif ((new String(NaN) && y) !== y) {\n  $ERROR('#6: (var y = new String(-1); (new String(NaN) && y) === y');\n}\n",
    "id": "S11.11.1_A4_T3"
   },
   {
    "section": "11.11.1",
    "description": "Type(x) or Type(y) is changed between null and undefined",
    "test": "//CHECK#1\nif ((true && undefined) !== undefined) {\n  $ERROR('#1: (true && undefined) === undefined');\n}\n\n//CHECK#2\nif ((true && null) !== null) {\n  $ERROR('#2: (true && null) === null');\n}\n",
    "id": "S11.11.1_A4_T4"
   }
  ]
 }
}
