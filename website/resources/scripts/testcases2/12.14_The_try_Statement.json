{
 "testCollection": {
  "name": "12.14_The_try_Statement",
  "numTests": 58,
  "tests": [
   {
    "section": "12.14",
    "description": "Executing TryStatement : try Block Catch. The statements doesn't cause actual exceptions",
    "test": "// CHECK#1\ntry {\n  var x=0;\n}\ncatch (e) {\n  $ERROR('#1: If Result(1).type is not throw, return Result(1). Actual: 4 Return(Result(3))');\n}\n\n// CHECK#2\nvar c1=0;\ntry{\n  var x1=1;\n}\nfinally\n{\n  c1=1;\n}\nif(x1!==1){\n  $ERROR('#2.1: \"try\" block must be evaluated. Actual: try Block has not been evaluated');\n}\nif (c1!==1){\n  $ERROR('#2.2: \"finally\" block must be evaluated. Actual: finally Block has not been evaluated');\n}\n\n// CHECK#3\nvar c2=0;\ntry{\n  var x2=1;\n}\ncatch(e){\n  $ERROR('#3.1: If Result(1).type is not throw, return Result(1). Actual: 4 Return(Result(3))');\t\n}\nfinally{\n  c2=1;\n}\nif(x2!==1){\n  $ERROR('#3.2: \"try\" block must be evaluated. Actual: try Block has not been evaluated');\n}\nif (c2!==1){\n  $ERROR('#3.3: \"finally\" block must be evaluated. Actual: finally Block has not been evaluated');\n}\n",
    "id": "S12.14_A1"
   },
   {
    "section": "12.14",
    "description": "Throwing exception while executing iteration statement placed into try Block",
    "test": "// CHECK#1\nvar i=0;\ntry{\nwhile(i<10){\n  if(i===5) throw i;\n  i++;\n}\n}\ncatch(e){\n  if(e!==5)$ERROR('#1: Exception === 5. Actual:  Exception ==='+ e  );\n}\n",
    "id": "S12.14_A10_T1"
   },
   {
    "section": "12.14",
    "description": "Try statement inside loop, where use continue loop",
    "test": "// CHECK#1\nvar c1=0,fin=0;\nwhile(c1<2){\n  try{\n    c1+=1;\n    continue;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n  }\n  fin=-1;\n};\nif(fin!==1){\n  $ERROR('#1: \"finally\" block must be evaluated at \"try{continue} catch finally\" construction');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\nwhile(c2<2){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    continue;\n  }\n  finally{\n    fin2=1;\n  }\n  fin2=-1;\n}\nif(fin2!==1){\n  $ERROR('#2: \"finally\" block must be evaluated at \"try catch{continue} finally\" construction');\n}\n\n// CHECK#3\nvar c3=0,fin3=0;\nwhile(c3<2){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c3+=1;\n  }\n  finally{\n    fin3=1;\n    continue;\n  }\n  fin3=0;\n}\nif(fin3!==1){\n  $ERROR('#3: \"finally\" block must be evaluated at \"try catch finally{continue}\" construction');\n}\n\n// CHECK#4\nvar c4=0,fin4=0;\nwhile(c4<2){\n  try{\n    c4+=1;\n    continue;\n  }\n  finally{\n    fin4=1;\n  }\n  fin4=-1;\n};\nif(fin4!==1){\n  $ERROR('#4: \"finally\" block must be evaluated at \"try{continue} finally\" construction');\n}\n\n// CHECK#5\nvar c5=0;\nwhile(c5<2){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c5+=1;\n    continue;\n  }\n}\nif(c5!==2){\n  $ERROR('#5: \"try catch{continue}\" must work correctly');\n}\n\n// CHECK#6\nvar c6=0,fin6=0;\nwhile(c6<2){\n  try{\n    c6+=1;\n    throw \"ex1\"\n  }\n  finally{\n    fin6=1;\n    continue;\n  }\n  fin6=-1;\n}\nif(fin6!==1){\n  $ERROR('#6.1: \"finally\" block must be evaluated');\n}\nif(c6!==2){\n  $ERROR('#6.2: \"try finally{continue}\" must work correctly');\n}\n",
    "id": "S12.14_A10_T2"
   },
   {
    "section": "12.14",
    "description": "Try statement inside loop, where use break",
    "test": "// CHECK#1\nvar c1=0,fin=0;\nwhile(c1<2){\n  try{\n    c1+=1;\n    break;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n  }\n  fin=-1;\n  c1+=2;\n}\nif(fin!==1){\n  $ERROR('#1.1: \"finally\" block must be evaluated');\n}\nif(c1!==1){\n  $ERROR('#1.2: \"try{break}catch finally\" must work correctly');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\nwhile(c2<2){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    break;\n  }\n  finally{\n    fin2=1;\n  }\n  c2+=2;\n  fin2=-1;\n}\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==1){\n  $ERROR('#2.2: \"try catch{break} finally\" must work correctly');\n}\n\n// CHECK#3\nvar c3=0,fin3=0;\nwhile(c3<2){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c3+=1;\n  }\n  finally{\n    fin3=1;\n    break;\n  }\n  c3+=2;\n  fin3=0;\n}\nif(fin3!==1){\n  $ERROR('#3.1: \"finally\" block must be evaluated');\n}\nif(c3!==1){\n  $ERROR('#3.2: \"try catch finally{break}\" must work correctly');\n}\n\n// CHECK#4\nvar c4=0,fin4=0;\nwhile(c4<2){\n  try{\n    c4+=1;\n    break;\n  }\n  finally{\n    fin4=1;\n  }\n  fin4=-1;\n  c4+=2;\n}\nif(fin4!==1){\n  $ERROR('#4.1: \"finally\" block must be evaluated');\n}\nif(c4!==1){\n  $ERROR('#4.2: \"try{break} finally\" must work correctly');\n}\n\n// CHECK#5\nvar c5=0;\nwhile(c5<2){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    break;\n  }\n}\nif(c5!==0){\n  $ERROR('#5: \"try catch{break}\" must work correctly');\n}\n\n// CHECK#6\nvar c6=0;\nwhile(c6<2){\n  try{\n    c6+=1;\n    break;\n  }\n  catch(er1){}\n  c6+=2;\n}\nif(c6!==1){\n  $ERROR('#6: \"try{break} catch\" must work correctly');\n}\n\n// CHECK#7\nvar c7=0,fin7=0;\ntry{\n  while(c7<2){\n    try{\n      c7+=1;\n      throw \"ex1\";\n    }\n    finally{\n      fin7=1;\n      break;\n    }\n    fin7=-1;\n    c7+=2;\n  }\n}\ncatch(ex1){\n  c7=10;\n}\nif(fin7!==1){\n  $ERROR('#7.1: \"finally\" block must be evaluated');\n}\nif(c7!==1){\n  $ERROR('#7.2: \"try finally{break}\" must work correctly');\n}\n",
    "id": "S12.14_A10_T3"
   },
   {
    "section": "12.14",
    "description": "Try statement inside loop, where combinate using break and continue",
    "test": "// CHECK#1\nvar c1=0,fin=0;\nwhile(c1<2){\n  try{\n    c1+=1;\n    break;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n    continue;\n  }\n  fin=-1;\n  c1+=2;\n}\nif(fin!==1){\n  $ERROR('#1.1: \"finally\" block must be evaluated');\n}\nif(c1!==2){\n  $ERROR('#1.2: \"try{break} catch finally{continue}\" must work correctly');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\nwhile(c2<2){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    break;\n  }\n  finally{\n    fin2=1;\n    continue;\n  }\n  c2+=2;\n  fin2=-1;\n}\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==2){\n  $ERROR('#2.2: \"try catch{break} finally{continue} must work correctly');\n}\n",
    "id": "S12.14_A10_T4"
   },
   {
    "section": "12.14",
    "description": "Throw some exceptions from different place of loop body",
    "test": "// CHECK#1\nvar c=0, i=0;\nvar fin=0;\nwhile(i<10){\n  i+=1;\n  try{\n    if(c===0){\n      throw \"ex1\";\n      $ERROR('#1.1: throw \"ex1\" lead to throwing exception');\n    }\n    c+=2;\n    if(c===1){\n      throw \"ex2\";\n      $ERROR('#1.2: throw \"ex2\" lead to throwing exception');\n    }\n  }\n  catch(er1){\n    c-=1;\n    continue;\n    $ERROR('#1.3: \"try catch{continue} finally\" must work correctly');\n  }\n  finally{\n    fin+=1;\n  }\n}\nif(fin!==10){\n  $ERROR('#1.4: \"finally\" block must be evaluated');\n}\n",
    "id": "S12.14_A10_T5"
   },
   {
    "section": "12.14",
    "description": "Loop inside try Block, where throw exception",
    "test": "// CHECK#1\ntry{\n  for(var i=0;i<10;i++){\n    if(i===5) throw i;\n  }\n}\ncatch(e){\n  if(e!==5)$ERROR('#1: Exception === 5. Actual:  Exception ==='+ e  );\n}\n",
    "id": "S12.14_A11_T1"
   },
   {
    "section": "12.14",
    "description": "Try statement inside loop, where use continue loop",
    "test": "// CHECK#1\nvar fin=0;\nfor(var i=0;i<5;i++){\n  try{\n    i+=1;\n    continue;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n  }\n  fin=-1;\n}\nif(fin!==1){\n  $ERROR('#1: \"finally\" block must be evaluated at \"try{continue} catch finally\" construction');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\nfor(var i=0;i<5;i++){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    continue;\n  }\n  finally{\n    fin2=1;\n  }\n  fin2=-1;\n}\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==5){\n  $ERROR('#2.1: \"try catch{continue} finally\" must work correctly');\n}\n\n// CHECK#3\nvar c3=0,fin3=0;\nfor(var i=0;i<5;i++){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c3+=1;\n  }\n  finally{\n    fin3=1;\n    continue;\n  }\n  fin3=0;\n}\nif(fin3!==1){\n  $ERROR('#3.1: \"finally\" block must be evaluated');\n}\nif(c3!==5){\n  $ERROR('#3.2: \"try catch finally{continue}\" must work correctly');\n}\n\n// CHECK#4\nvar fin=0;\nfor(var i=0;i<5;i++){\n  try{\n    i+=1;\n    continue;\n  }\n  finally{\n    fin=1;\n  }\n  fin=-1;\n};\nif(fin!==1){\n  $ERROR('#4: \"finally\" block must be evaluated at \"try{continue} finally\" construction');\n}\n\n// CHECK#5\nvar c5=0;\nfor(var c5=0;c5<10;){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c5+=1;\n    continue;\n  }\n  c5+=12;\n};\nif(c5!==10){\n  $ERROR('#5: \"try catch{continue} must work correctly');\n}\n\n// CHECK#6\nvar c6=0,fin6=0;\nfor(var c6=0;c6<10;){\n  try{\n    c6+=1;\n    throw \"ex1\"\n  }\n  finally{\n    fin6=1;\n    continue;\n  }\n  fin6=-1;\n};\nif(fin6!==1){\n  $ERROR('#6.1: \"finally\" block must be evaluated');\n}\nif(c6!==10){\n  $ERROR('#6.2: \"try finally{continue}\" must work correctly');\n}\n",
    "id": "S12.14_A11_T2"
   },
   {
    "section": "12.14",
    "description": "Try statement inside loop, where use break",
    "test": "// CHECK#1\nvar c1=0,fin=0;\nfor(var i=0;i<5;i++){\n  try{\n    c1+=1;\n    break;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n  }\n  fin=-1;\n  c1+=2;\n};\nif(fin!==1){\n  $ERROR('#1.1: \"finally\" block must be evaluated');\n}\nif(c1!==1){\n  $ERROR('#1.2: \"try{break}catch finally\" must work correctly');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\nfor(var i=0;i<5;i++){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    break;\n  }\n  finally{\n    fin2=1;\n  }\n  c2+=2;\n  fin2=-1;\n};\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==1){\n  $ERROR('#2.2: \"try catch{break} finally\" must work correctly');\n}\n\n// CHECK#3\nvar c3=0,fin3=0;\nfor(var i=0;i<5;i++){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c3+=1;\n  }\n  finally{\n    fin3=1;\n    break;\n  }\n  c3+=2;\n  fin3=0;\n};\nif(fin3!==1){\n  $ERROR('#3.1: \"finally\" block must be evaluated');\n}\nif(c3!==1){\n  $ERROR('#3.2: \"try catch finally{break}\" must work correctly');\n}\n\n// CHECK#4\nvar c4=0,fin4=0;\nfor(var i=0;i<5;i++){\n  try{\n    c4+=1;\n    break;\n  }\n  finally{\n    fin4=1;\n  }\n  fin4=-1;\n  c4+=2;\n};\nif(fin4!==1){\n  $ERROR('#4.1: \"finally\" block must be evaluated');\n}\nif(c4!==1){\n  $ERROR('#4.2: \"try{break} finally\" must work correctly');\n}\n\n// CHECK#5\nfor(var i=0;i<5;i++){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    break;\n  }\n};\nif(i!==0){\n  $ERROR('#5: \"try catch{break}\" must work correctly');\n}\n\n// CHECK#6\nvar c6=0;\nfor(var c6=0;c6<5;){\n  try{\n    c6+=1;\n    break;\n  }\n  catch(er1){}\n  c6+=2;\n};\nif(c6!==1){\n  $ERROR('#6: \"try{break} catch\" must work correctly');\n}\n\n// CHECK#7\nvar c7=0,fin7=0;\ntry{\n  for(var c7=0;c7<5;){\n    try{\n      c7+=1;\n      throw \"ex1\";\n    }\n    finally{\n      fin7=1;\n      break;\n    }\n    fin7=-1;\n    c7+=2;\n  }\n}\ncatch(ex1){\n  c7=10;\n}\nif(fin7!==1){\n  $ERROR('#7.1: \"finally\" block must be evaluated');\n}\nif(c7!==1){\n  $ERROR('#7.2: \"try finally{break}\" must work correctly');\n}\n",
    "id": "S12.14_A11_T3"
   },
   {
    "section": "12.14",
    "description": "Try statement inside loop, where combinate using break and continue",
    "test": "// CHECK#1\nvar c1=0,fin=0;\nfor(var i=0;i<5;i++){\n  try{\n    c1+=1;\n    break;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n    continue;\n  }\n  fin=-1;\n  c1+=2;\n}\nif(fin!==1){\n  $ERROR('#1.1: \"finally\" block must be evaluated');\n}\nif(c1!==5){\n  $ERROR('#1.2: \"try{break} catch finally{continue}\" must work correctly');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\nfor(var i=0;i<5;i++){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    break;\n  }\n  finally{\n    fin2=1;\n    continue;\n  }\n  c2+=2;\n  fin2=-1;\n}\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==5){\n  $ERROR('#2.2: \"try catch{break} finally{continue}\" must work correctly');\n}\n",
    "id": "S12.14_A11_T4"
   },
   {
    "section": "12.14",
    "description": "Loop inside try Block, where throw exception",
    "test": "var x;\nvar mycars = new Array();\nmycars[0] = \"Saab\";\nmycars[1] = \"Volvo\";\nmycars[2] = \"BMW\";\n\n// CHECK#1\ntry{\n  for (x in mycars){\n    if (mycars[x]===\"BMW\") throw \"ex\";\n  }\n}\ncatch(e){\n  if(e!==\"ex\")$ERROR('#1: Exception ===\"ex\". Actual:  Exception ==='+ e  );\n}\n\n\n",
    "id": "S12.14_A12_T1"
   },
   {
    "section": "12.14",
    "description": "Try statement inside loop, where use continue loop",
    "test": "var x;\nvar mycars = new Array();\nmycars[0] = \"Saab\";\nmycars[1] = \"Volvo\";\nmycars[2] = \"BMW\";\n\n// CHECK#1\nvar fin=0;\nvar i=0;\nfor (x in mycars){\n  try{\n    i+=1;\n    continue;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n  }\n  fin=-1;\n}\nif(fin!==1){\n  $ERROR('#1.1: \"finally\" block must be evaluated');\n}\nif(i!==3){\n  $ERROR('#1.2:  \"try{continue} catch finally\" must work correctly');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\nfor (x in mycars){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    continue;\n  }\n  finally{\n    fin2=1;\n  }\n  fin2=-1;\n}\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==3){\n  $ERROR('#2.1: \"try catch{continue} finally\" must work correctly');\n}\n\n// CHECK#3\nvar c3=0,fin3=0;\nfor (x in mycars){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c3+=1;\n  }\n  finally{\n    fin3=1;\n    continue;\n  }\n  fin3=0;\n}\nif(c3!==3){\n  $ERROR('#3.1: \"finally\" block must be evaluated');\n}\nif(fin3!==1){\n  $ERROR('#3.2: \"try catch finally{continue}\" must work correctly');\n}\n\n// CHECK#4\nvar fin=0;\nfor (x in mycars){\n  try{\n    continue;\n  }\n  finally{\n    fin=1;\n  }\n  fin=-1;\n}\nif(fin!==1){\n  $ERROR('#4: \"finally\" block must be evaluated at \"try{continue} finally\" construction');\n}\n\n// CHECK#5\nvar c5=0;\nfor (x in mycars){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c5+=1;\n    continue;\n  }\n  c5+=12;\n}\nif(c5!==3){\n  $ERROR('#5: \"try catch{continue}\" must work correctly');\n}\n\n// CHECK#6\nvar c6=0,fin6=0;\nfor (x in mycars){\n  try{\n    c6+=1;\n    throw \"ex1\";\n  }\n  finally{\n    fin6=1;\n    continue;\n  }\n  fin6=-1;\n}\nif(fin6!==1){\n  $ERROR('#6.1: \"finally\" block must be evaluated');\n}\nif(c6!==3){\n  $ERROR('#6.2: \"try finally{continue}\" must work correctly');\n}\n",
    "id": "S12.14_A12_T2"
   },
   {
    "section": "12.14",
    "description": "Try statement inside loop, where use break",
    "test": "var x;\nvar mycars = new Array();\nmycars[0] = \"Saab\";\nmycars[1] = \"Volvo\";\nmycars[2] = \"BMW\";\n\n// CHECK#1\nvar c1=0,fin=0;\nfor (x in mycars){\n  try{\n    c1+=1;\n    break;\n  }\n  catch(er1){\n    c1+=1;\n  }\n  finally{\n    fin=1;\n  }\n  fin=-1;\n  c1+=2;\n};\nif(fin!==1){\n  $ERROR('#1.1: \"finally\" block must be evaluated');\n}\nif(c1!==1){\n  $ERROR('#1.2: \"try{break}catch finally\" must work correctly');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\nfor (x in mycars){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    break;\n  }\n  finally{\n    fin2=1;\n  }\n  c2+=2;\n  fin2=-1;\n}\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==1){\n  $ERROR('#2.2: \"try catch{break} finally\" must work correctly');\n}\n\n// CHECK#3\nvar c3=0,fin3=0;\nfor (x in mycars){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c3+=1;\n  }\n  finally{\n    fin3=1;\n    break;\n  }\n  c3+=2;\n  fin3=0;\n}\nif(fin3!==1){\n  $ERROR('#3.1: \"finally\" block must be evaluated');\n}\nif(c3!==1){\n  $ERROR('#3.2: \"try catch finally{break}\" must work correctly');\n}\n\n// CHECK#4\nvar c4=0,fin4=0;\nfor (x in mycars){\n  try{\n    c4+=1;\n    break;\n  }\n  finally{\n    fin4=1;\n  }\n  fin4=-1;\n  c4+=2;\n}\nif(fin4!==1){\n  $ERROR('#4.1: \"finally\" block must be evaluated');\n}\nif(c4!==1){\n  $ERROR('#4.2: \"try{break} finally\" must work correctly');\n}\n\n// CHECK#5\nvar c5=0;\nfor (x in mycars){\n  try{\n    throw \"ex1\";\n    c5++;\n  }\n  catch(er1){\n    break;\n    c5++;\n  }\n  c5++;\n}\nif(c5!==0){\n  $ERROR('#5: \"try catch{break}\" must work correctly');\n}\n\n// CHECK#6\nvar c6=0;\nfor (x in mycars){\n  try{\n    c6+=1;\n    break;\n  }\n  catch(er1){}\n  c6+=2;\n}\nif(c6!==1){\n  $ERROR('#6: \"try{break} catch\" must work correctly');\n}\n\n// CHECK#7\nvar c7=0,fin7=0;\ntry{\n  for (x in mycars){\n    try{\n      c7+=1;\n      throw \"ex1\";\n    }\n    finally{\n      fin7=1;\n      break;\n    }\n    fin7=-1;\n    c7+=2;\n  }\n}\ncatch(ex1){\n  c7=10;\n}\nif(fin7!==1){\n  $ERROR('#7.1: \"finally\" block must be evaluated');\n}\nif(c7!==1){\n  $ERROR('#7.2: \"try finally{break}\" must work correctly');\n}\n",
    "id": "S12.14_A12_T3"
   },
   {
    "section": "12.14",
    "description": "Try statement inside loop, where combinate using break and continue",
    "test": "var x;\nvar mycars = new Array();\nmycars[0] = \"Saab\";\nmycars[1] = \"Volvo\";\nmycars[2] = \"BMW\";\n\n// CHECK#1\nvar c1=0,fin=0;\nfor (x in mycars){\n  try{\n    c1+=1;\n    break;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n    continue;\n  }\n  fin=-1;\n  c1+=2;\n}\nif(fin!==1){\n  $ERROR('#1.1: \"finally\" block must be evaluated');\n}\nif(c1!==3){\n  $ERROR('#1.2: \"try{break} catch finally{continue}\" must work correctly');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\nfor (x in mycars){\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    break;\n  }\n  finally{\n  \tfin2=1;\n  \tcontinue;\n  }\n  c2+=2;\n  fin2=-1;\n}\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==3){\n  $ERROR('#2.2: \"try catch{break} finally{continue}\" must work correctly');\n}\n",
    "id": "S12.14_A12_T4"
   },
   {
    "section": "12.14",
    "description": "Using try/catch syntax construction",
    "test": "// CHECK#1\nfunction myFunction1(){\n  try{\n    return 1;\n  }\n  catch(err){\n  \t$ERROR('#1.1: \"return 1\" inside function does not lead to throwing exception');\n    return 0;\n  }\n  return 2;\n}\nvar x1=myFunction1();\nif(x1!==1){\n  $ERROR('#1.2: x1===1. Actual: x1==='+x1);\n}\n\n// CHECK#2\nfunction myFunction2(){\n  try{\n    throw \"exc\";\n    return 1;\n  }catch(err){  \t\n    return 2;\n  }\n  return 3;\n}\nvar x2=myFunction2();\nif (x2!==2){\n  $ERROR('#2: x2===2. Actual: x2==='+x2);\n}\n\n// CHECK#3\nfunction myFunction3(){\n  try{\n    return someValue;\n  }catch(err){  \t\n    return 1;\n  }\n  return 2;\n}\nvar x3=myFunction3();\nif (x3!==1){\n  $ERROR('#3: x3===1. Actual: x3==='+x3);\n}\n\n// CHECK#4\nfunction myFunction4(){\n  try{\n    throw \"ex1\";\n    return 1;\n  }catch(err){\n    throw \"ex2\"\n    return 0;\n  }\n  return 2;\n}\ntry{\n  var x4=myFunction4();\n  $ERROR('#4.1: Throwing exception inside function lead to throwing exception outside this function');\n}\ncatch(e){\n  if(e===\"ex1\"){\n    $ERROR('#4.2: Exception !==\"ex1\". Actual: catch previous exception');\n  }\n  if(e!==\"ex2\"){\n    $ERROR('#4.3: Exception ===\"ex2\". Actual:  Exception ==='+ e  );\n  }\n}\n",
    "id": "S12.14_A13_T1"
   },
   {
    "section": "12.14",
    "description": "Using try/finally syntax construction",
    "test": "// CHECK#1\nvar c1=0;\nfunction myFunction1(){\n  try{\n    return 1;\n  }finally{\n    c1=1;\n  }\n  return 2;\n}\nvar x1=myFunction1();\nif(x1!==1){\n  $ERROR('#1.1: x1===1. Actual: x1==='+x1);\n}\nif (c1!==1){\n  $ERROR('#1.2: \"finally\" block must be evaluated');\n}\n\n// CHECK#2\nvar c2=0;\nfunction myFunction2(){\n  try{\n    throw \"exc\";\n    return 1;\n  }finally{\n    c2=1;\n  }\n  return 2;\n}\ntry{\n  var x2=myFunction2();\n  $ERROR('#2.1: Throwing exception inside function lead to throwing exception outside this function');\n}\ncatch(e){\n  if (c2!==1){\n    $ERROR('#2.2: \"finally\" block must be evaluated');\n  }\n}\n\n// CHECK#3\nvar c3=0;\nfunction myFunction3(){\n  try{\n    return someValue;\n  }finally{\n    c3=1;\n  }\n  return 2;\n}\ntry{\n  var x3=myFunction3();\n  $ERROR('#3.1: Throwing exception inside function lead to throwing exception outside this function');\n}\ncatch(e){\n  if (c3!==1){\n    $ERROR('#3.2: \"finally\" block must be evaluated');\n  }\n}\n\n// CHECK#4\nvar c4=0;\nfunction myFunction4(){\n  try{\n    return 1;\n  }finally{\n    c4=1;\n    throw \"exc\";\n    return 0;\n  }\n  return 2;\n}\ntry{\n  var x4=myFunction4();\n  $ERROR('#4.2: Throwing exception inside function lead to throwing exception outside this function');\n}\ncatch(e){\n  if (c4!==1){\n    $ERROR('#4.3: \"finally\" block must be evaluated');\n  }\n}\n\n// CHECK#5\nvar c5=0;\nfunction myFunction5(){\n  try{\n    return 1;\n  }finally{\n    c5=1;\n    return someValue;\n    return 0;\n  }\n  return 2;\n}\ntry{\n  var x5=myFunction5();\n  $ERROR('#5.2: Throwing exception inside function lead to throwing exception outside this function');\n}\ncatch(e){\n  if (c5!==1){\n    $ERROR('#5.3: \"finally\" block must be evaluated');\n  }\n}\n\n// CHECK#6\nvar c6=0;\nfunction myFunction6(){\n  try{\n    throw \"ex1\";\n    return 1;\n  }finally{\n    c6=1;\n    throw \"ex2\";\n    return 2;\n  }\n  return 3;\n}\ntry{\n  var x6=myFunction6();\n  $ERROR('#6.1: Throwing exception inside function lead to throwing exception outside this function');\n}\ncatch(e){\n  if(e===\"ex1\"){\n    $ERROR('#6.2: Exception !==\"ex1\". Actual: catch previous exception');\n  }\n  if(e!==\"ex2\"){\n    $ERROR('#6.3: Exception !==\"ex1\". Actual: '+e);\n  }\n  if (c6!==1){\n    $ERROR('#6.4: \"finally\" block must be evaluated');\n  }\n}\n\n// CHECK#7\nvar c7=0;\nfunction myFunction7(){\n  try{\n    return 1;\n  }finally{\n    c7=1;\n    return 2;\n  }\n  return 3;\n}\nvar x7=myFunction7();\nif(x7!==2){\n  $ERROR('#7.1: \"catch\" block must be evaluated');\n}\nif (c7!==1){\n  $ERROR('#7.2: \"finally\" block must be evaluated');\n}\n\n// CHECK#8\nvar c8=0;\nfunction myFunction8(){\n  try{\n    throw \"ex1\";\n  }finally{\n    c8=1;\n    return 2;\n  }\n  return 3;\n}\ntry{\n  var x8=myFunction8();\n}\ncatch(ex1){\n  c8=10;\n}\nif (c8!==1){\n  $ERROR('#8: \"finally\" block must be evaluated');\n}\n",
    "id": "S12.14_A13_T2"
   },
   {
    "section": "12.14",
    "description": "Using try/catch/finally syntax construction",
    "test": "// CHECK#1\nvar c1=0;\nfunction myFunction1(){\n  try{\n    return 1;\n  }catch(err){\n    $ERROR('#1.1: \"return 1\" inside function does not lead to throwing exception');\n    return 0;\n  }finally{\n    c1=1;\n  }\n  return 2;\n}\nvar x1=myFunction1();\nif(x1!==1){\n  $ERROR('#1.3: x1===1. Actual: x1==='+x1);\n}\nif (c1!==1){\n  $ERROR('#1.4: \"finally\" block must be evaluated');\n}\n\n// CHECK#2\nvar c2=0;\nfunction myFunction2(){\n  try{\n    throw \"exc\";\n    return 1;\n  }catch(err){  \t\n    return 0;\n  }finally{\n    c2=1;\n  }\n  return 2;\n}\nvar x2=myFunction2();\nif (c2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif (x2!==0){\n  $ERROR('#2.2: x2===0. Actual: x2==='+x2);\n}\n\n// CHECK#3\nvar c3=0;\nfunction myFunction3(){\n  try{\n    return someValue;\n  }catch(err){  \t\n    return 1;\n  }finally{\n    c3=1;\n  }\n  return 2;\n}\nvar x3=myFunction3();\nif (c3!==1){\n  $ERROR('#3.1: \"finally\" block must be evaluated');\n}\nif (x3!==1){\n  $ERROR('#3.2: x3===1. Actual: x3==='+x3);\n}\n\n// CHECK#4\nvar c4=0;\nfunction myFunction4(){\n  try{\n    throw \"ex1\";\n    return 1;\n  }catch(err){\n    throw \"ex2\"\n    return 0;\n  }finally{\n    c4=1;\n  }\n  return 2;\n}\ntry{\n  var x4=myFunction4();\n  $ERROR('#4.1: Throwing exception inside function lead to throwing exception outside this function');\n}\ncatch(e){\n  if(e===\"ex1\"){\n    $ERROR('#4.2: Exception !== \"ex1\". Actual: catch previous exception');\n  }\n  if(e!==\"ex2\"){\n    $ERROR('#4.3: Exception === \"ex2\". Actual:  Exception ==='+ e  );\n  }\n  if (c4!==1){\n    $ERROR('#4.4: \"finally\" block must be evaluated');\n  }\t\n}\n\n// CHECK#5\nvar c5=0;\nfunction myFunction5(){\n  try{\n    throw \"ex1\";\n    return 1;\n  }catch(err){\n    return 0;\n  }finally{\n    c5=1;\n    throw \"ex2\";\n  }\n  return 2;\n}\ntry{\n  var x5=myFunction5();\n  $ERROR('#5.1: Throwing exception inside function lead to throwing exception outside this function');\n}\ncatch(e){\n  if(e===\"ex1\"){\n    $ERROR('#5.2: Exception !== \"ex1\". Actual: catch previous exception');\n  }\n  if(e!==\"ex2\"){\n    $ERROR('#5.3: Exception === \"ex2\". Actual:  Exception ==='+ e  );\n  }\n  if (c5!==1){\n    $ERROR('#5.4: \"finally\" block must be evaluated');\n  } \t\n}\n\n// CHECK#6\nvar c6=0;\nfunction myFunction6(){\n  try{\n    throw \"ex1\";\n    return 1;\n  }catch(err){\n    throw \"ex2\";\n    return 0;\n  }finally{\n    c6=1;\n    throw \"ex3\";\n  }\n  return 2;\n}\ntry{\n  var x6=myFunction6();\n  $ERROR('#6.1: Throwing exception inside function lead to throwing exception outside this function');\n}\ncatch(e){\n  if(e===\"ex1\"){\n    $ERROR('#6.2: Exception !== \"ex1\". Actual: catch previous exception');\n  }\n  if(e===\"ex2\"){\n    $ERROR('#6.3: Exception !== \"ex2\". Actual: catch previous exception');\n  }\n  if(e!==\"ex3\"){\n    $ERROR('#6.4: Exception === \"ex3\". Actual:  Exception ==='+ e  );\n  }\t\n  if(c6!==1) $ERROR('#6.5: \"finally\" block must be evaluated');\n}\n\n// CHECK#7\nvar c7=0;\nfunction myFunction7(){\n  try{\n    throw \"ex1\";\n    return 1;\n  }catch(err){\n    throw \"ex2\";\n    return 0;\n  }finally{\n    c7=1;\n    return 2;\n  }\n  return 3;\n}\ntry{\n  var x7=myFunction7();\n  if(x7!==2) $ERROR('#7.1: x7===2. Actual: x7==='+x7);\n}\ncatch(e){}\nif(c7!==1) $ERROR('#7.2: \"finally\" block must be evaluated');\n",
    "id": "S12.14_A13_T3"
   },
   {
    "section": "12.14",
    "description": "Using try/catch/finally in With and With in try/catch/finally",
    "strict_mode_negative": "SyntaxError",
    "test": "var myObj = {p1: 'a',\n             p2: 'b',\n             p3: 'c',\n             value: 'myObj_value',\n             valueOf : function(){return 'obj_valueOf';},\n             parseInt : function(){return 'obj_parseInt';},\n             NaN : 'obj_NaN',\n             Infinity : 'obj_Infinity',\n             eval     : function(){return 'obj_eval';},\n             parseFloat : function(){return 'obj_parseFloat';},\n             isNaN      : function(){return 'obj_isNaN';},\n             isFinite   : function(){return 'obj_isFinite';}\n}\n\n// CHECK#1\ntry{\n  with(myObj){\n    throw \"ex\";\n  }\n}\ncatch(e){\n  if (e!==\"ex\") $ERROR('#1: Exception ===\"ex\". Actual:  Exception ==='+ e  );\n}\n\n// CHECK#2\nwith(myObj){\n  try{\n    throw p1;\n  }\n  catch(e){\n    if (e!==\"a\") $ERROR('#2.1: Exception ===\"a\". Actual:  Exception ==='+ e  );\n    p1='pass';\n  }\n}\nif(myObj.p1!=='pass') $ERROR('#2.2: \"throw p1\" lead to throwing exception');\n\n// CHECK#3\nwith(myObj){\n  try{\n    p1='fail';\n    throw p2;\n  }\n  catch(e){\n    if (e!==\"b\") $ERROR('#3.1: Exception ===\"b\". Actual:  Exception ==='+ e  );\n    p1='pass';\n  }\n  finally{\n    p2='pass';\n  }\n}\nif(myObj.p1!=='pass') $ERROR('#3.2: \"throw p2\" lead to throwing exception');\nif(myObj.p2!=='pass') $ERROR('#3.3: \"finally\" block must be evaluated');\n\n// CHECK#4\nmyObj.p1='fail';\ntry{\n  with(myObj){\n    try{\n      throw p3;\n    }\n    finally{\n      p1='pass';\n    }\n  }\n}\ncatch(e){}\nif(myObj.p1!=='pass') $ERROR('#4: \"finally\" block must be evaluated');\n",
    "id": "S12.14_A14",
    "strict_only": ""
   },
   {
    "section": "12.14",
    "description": "Insert try/catch/finally to switch statement",
    "test": "// CHECK#1\nfunction SwitchTest1(value){\n  var result = 0;\n  try{  \n    switch(value) {\n      case 1:\n        result += 4;\n        throw result;\n        break;\n      default:\n        result += 32;\n        break;\n      case 4:\n        result += 64;\n        throw \"ex\";\n    }\n    return result;\n  }\n  catch(e){\t\n    if ((value===1)&&(e!==4)) $ERROR('#1.1: Exception ===4. Actual:  Exception ==='+ e  );\n    if ((value===4)&&(e!==\"ex\")) $ERROR('#1.2: Exception ===\"ex\". Actual:  Exception ==='+ e  );\n  }\n  finally{\n    return result;\n  }\n}\nif (SwitchTest1(1)!==4) $ERROR('#1.3: SwitchTest1(1)===4. Actual:  SwitchTest1(1)==='+ SwitchTest1(1) );\nif (SwitchTest1(4)!==64) $ERROR('#1.4: SwitchTest1(4)===64. Actual:  SwitchTest1(4)==='+ SwitchTest1(4) );\n\n// CHECK#2\nvar c2=0;\nfunction SwitchTest2(value){\n  var result = 0;\n  switch(value) {\n    case 0:\n      try{  \n        result += 2;\n        break;\n      }\n      finally{\n        c2=1;\n      }\n    case 1:\n      result += 4;\n      break;\n    default:\n      result += 32;\n      break;\n  }\n  return result;\n}\nif (SwitchTest2(1)!==4) $ERROR('#2.1: SwitchTest1(1)===4. Actual:  SwitchTest1(1)==='+ SwitchTest1(1) );\nif (c2===1) $ERROR('#2.2: Evaluate finally block');\nif (SwitchTest2(0)!==2) $ERROR('#2.3: SwitchTest1(0)===2. Actual:  SwitchTest1(0)==='+ SwitchTest1(0) );\nif (c2!==1) $ERROR('#2.4: \"finally\" block must be evaluated');\n\n// CHECK#3\nfunction SwitchTest3(value){\n  var result = 0;\n  switch(value) {\n    case 0:\n      try{  \n        result += 2;\n        throw \"ex\";\n      }\n      finally{\n        break;\n      }\n    default:\n      result += 32;\n      break;\n  }\n  return result;\n}\ntry{\n  var x3=SwitchTest3(0);\n  if (x3!==2) $ERROR('#3.1: x3===2. Actual: x3==='+x3);\n}\ncatch(e){\n  $ERROR('#3.2: Catching exception inside function does not lead to throwing exception outside this function');\n}\n",
    "id": "S12.14_A15"
   },
   {
    "section": "12.14",
    "description": "Checking if pure \"try\" syntax construction passes",
    "negative": "",
    "test": "// CHECK#1\ntry\n",
    "id": "S12.14_A16_T1"
   },
   {
    "section": "12.14",
    "description": "Catch: \"catch (Identifier ) Block\"",
    "negative": "",
    "test": "// CHECK#1\ntry{}\ncatch(){}\nfinally{}\n\n\n",
    "id": "S12.14_A16_T10"
   },
   {
    "section": "12.14",
    "description": "Catch and Finally are placed into the Block of \"try\" (whitle expected outside)",
    "negative": "",
    "test": "// CHECK#1\ntry{\n  {\n  }\n  catch(e){}\n  finally{}\n}\n\n",
    "id": "S12.14_A16_T11"
   },
   {
    "section": "12.14",
    "description": "Embedded \"try\" statements followed by two \"catch\" statements",
    "negative": "",
    "test": "// CHECK#1\ntry\n{\n  try\n  {\n  }\n}\ncatch(e1){}\ncatch(e2){}\n\n\n",
    "id": "S12.14_A16_T12"
   },
   {
    "section": "12.14",
    "description": "Catch: \"catch (Identifier ) Block\". Checking if execution of \"22\" passes at the place of Identifier of \"catch\"",
    "negative": "",
    "test": "// CHECK#1\ntry\n{\n}\ncatch(\"22\")\n{\n}\n\n\n\n",
    "id": "S12.14_A16_T13"
   },
   {
    "section": "12.14",
    "description": "Checking if passing argument to \"try\" statement fails",
    "negative": "",
    "test": "// CHECK#1\ntry(e1){\t\n}\ncatch(e){}\n\n\n\n",
    "id": "S12.14_A16_T14"
   },
   {
    "section": "12.14",
    "description": "Finally: \"finally Block\". Checking if passing argument to \"try\" statement fails",
    "negative": "",
    "test": "// CHECK#1\ntry{\t\n}\nfinally(e){}\n\n\n\n\n",
    "id": "S12.14_A16_T15"
   },
   {
    "section": "12.14",
    "description": "Checking if execution of \"catch\" with no \"try\" fails",
    "negative": "",
    "test": "// CHECK#1\ncatch\n",
    "id": "S12.14_A16_T2"
   },
   {
    "section": "12.14",
    "description": "Checking if execution of \"finally\" with no \"try\" fails",
    "negative": "",
    "test": "// CHECK#1\nfinally\n",
    "id": "S12.14_A16_T3"
   },
   {
    "section": "12.14",
    "description": "Catch: \"catch (Identifier ) Block\". Checking if execution of \"catch\" that takes no arguments fails",
    "negative": "",
    "test": "// CHECK#1\ntry{}\ncatch{}\n",
    "id": "S12.14_A16_T4"
   },
   {
    "section": "12.14",
    "description": "Catch: \"catch (Identifier ) Block\". Checking if execution of \"catch\" with no Block fails",
    "negative": "",
    "test": "// CHECK#1\ntry{}\ncatch()\n",
    "id": "S12.14_A16_T5"
   },
   {
    "section": "12.14, 12.1",
    "description": "Block: \"{ StatementList }\". Checking if execution of \"try{ catch{}{}\" fails",
    "negative": "",
    "test": "// CHECK#1\ntry{\ncatch(){}\n",
    "id": "S12.14_A16_T6"
   },
   {
    "section": "12.14, 12.1",
    "description": "Block: \"{ StatementList }\". Checking if execution of \"try{} catch(){\" fails",
    "negative": "",
    "test": "// CHECK#1\ntry{}\ncatch(){\n\n",
    "id": "S12.14_A16_T7"
   },
   {
    "section": "12.14, 12.1",
    "description": "Block: \"{ StatementList }\". Catch: \"catch (Identifier ) Block\". Checking if execution of \"try{} catch(){finally{}\" fails",
    "negative": "",
    "test": "// CHECK#1\ntry{}\ncatch(){\nfinally{}\n\n\n",
    "id": "S12.14_A16_T8"
   },
   {
    "section": "12.14",
    "description": "Checking if execution of \"catch(){} finally{}\" fails",
    "negative": "",
    "test": "// CHECK#1\ncatch(){}\nfinally{}\n\n\n",
    "id": "S12.14_A16_T9"
   },
   {
    "section": "12.14",
    "description": "Creating exceptions within constructor",
    "test": "var i=1;\nfunction Integer( value, exception ) {\n  try{\n    this.value = checkValue( value );\n    if(exception) $ERROR('#'+i+'.1: Must be exception');\n  }\n  catch(e){\n    this.value = e.toString();\n    if(!exception) $ERROR('#'+i+'.2: Don`t must be exception');\n  }\n  i++;\n}\n\nfunction checkValue(value){\n  if(Math.floor(value)!=value||isNaN(value)){\n    throw (INVALID_INTEGER_VALUE +\": \" + value);\n  }\n  else{\n    return value;\n  }\n}\n\n// CHECK#1\nnew Integer(13, false);\n// CHECK#2\nnew Integer(NaN, true);\n// CHECK#3\nnew Integer(0, false);\n// CHECK#4\nnew Integer(Infinity, false);\n// CHECK#5\nnew Integer(-1.23, true);\n// CHECK#6\nnew Integer(Math.LN2, true);\n",
    "id": "S12.14_A17"
   },
   {
    "section": "12.14, 12.13",
    "description": "Catching undefined",
    "test": "// CHECK#1\ntry{\n  throw undefined;\n}\ncatch(e){\n  if (e!==undefined) $ERROR('#1: Exception === undefined. Actual: '+e);\n}\n",
    "id": "S12.14_A18_T1"
   },
   {
    "section": "12.14, 12.13",
    "description": "Catching null",
    "test": "// CHECK#1\ntry{\n  throw null;\n}\ncatch(e){\n  if (e!==null) $ERROR('#1: Exception ===null. Actual: '+e);\n}\n",
    "id": "S12.14_A18_T2"
   },
   {
    "section": "12.14, 12.13",
    "description": "Catching boolean",
    "test": "// CHECK#1\ntry{\n  throw true;\n}\ncatch(e){\n  if (e!==true) $ERROR('#1: Exception ===true. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#2\ntry{\n  throw false;\n}\ncatch(e){\n  if (e!==false) $ERROR('#2: Exception ===false. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#3\nvar b=false;\ntry{\n  throw b;\n}\ncatch(e){\n  if (e!==false) $ERROR('#3: Exception ===false. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#4\nvar b=true;\ntry{\n  throw b;\n}\ncatch(e){\n  if (e!==true) $ERROR('#4: Exception ===true. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#5\nvar b=true;\ntry{\n  throw b&&false;\n}\ncatch(e){\n  if (e!==false) $ERROR('#5: Exception ===false. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#5\nvar b=true;\ntry{\n  throw b||false;\n}\ncatch(e){\n  if (e!==true) $ERROR('#6: Exception ===true. Actual:  Exception ==='+ e  );\n}\n",
    "id": "S12.14_A18_T3"
   },
   {
    "section": "12.14, 12.13",
    "description": "Catching string",
    "test": "// CHECK#1\ntry{\n  throw \"exception #1\";\n}\ncatch(e){\n  if (e!==\"exception #1\") $ERROR('#1: Exception ===\"exception #1\". Actual:  Exception ==='+ e  );\n}\n\n// CHECK#2\ntry{\n  throw \"exception\"+\" #1\";\n}\ncatch(e){\n  if (e!==\"exception #1\") $ERROR('#2: Exception ===\"exception #1\". Actual:  Exception ==='+ e  );\n}\n\n// CHECK#3\nvar b=\"exception #1\";\ntry{\n  throw b;\n}\ncatch(e){\n  if (e!==\"exception #1\") $ERROR('#3: Exception ===\"exception #1\". Actual:  Exception ==='+ e  );\n}\n\n// CHECK#4\nvar a=\"exception\";\nvar b=\" #1\";\ntry{\n  throw a+b;\n}\ncatch(e){\n  if (e!==\"exception #1\") $ERROR('#4: Exception ===\"exception #1\". Actual:  Exception ==='+ e  );\n}\n",
    "id": "S12.14_A18_T4"
   },
   {
    "section": "12.14, 12.13",
    "description": "Catching Number",
    "test": "// CHECK#1\ntry{\n  throw 13;\n}\ncatch(e){\n  if (e!==13) $ERROR('#1: Exception ===13. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#2\ntry{\n  throw 10+3;\n}\ncatch(e){\n  if (e!==13) $ERROR('#2: Exception ===13. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#3\nvar b=13;\ntry{\n  throw b;\n}\ncatch(e){\n  if (e!==13) $ERROR('#3: Exception ===13. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#4\nvar a=3;\nvar b=10;\ntry{\n  throw a+b;\n}\ncatch(e){\n  if (e!==13) $ERROR('#4: Exception ===13. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#5\ntry{\n  throw 2.13;\n}\ncatch(e){\n  if (e!==2.13) $ERROR('#5: Exception ===2.13. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#6\nvar ex=2/3;\ntry{\n  throw 2/3;\n}\ncatch(e){\n  if (e!==ex) $ERROR('#6: Exception ===2/3. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#7\ntry{\n  throw NaN;\n}\ncatch(e){\n  if (!isNaN(e)) $ERROR('#7: Exception is NaN');\n}\n\n// CHECK#8\ntry{\n  throw +Infinity;\n}\ncatch(e){\n  if (e!==+Infinity) $ERROR('#8: Exception ===+Infinity. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#9\ntry{\n  throw -Infinity;\n}\ncatch(e){\n  if (e!==-Infinity) $ERROR('#9: Exception ===-Infinity. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#10\ntry{\n  throw +0;\n}\ncatch(e){\n  if (e!==+0) $ERROR('#10: Exception ===+0. Actual:  Exception ==='+ e  );\n}\n\n// CHECK#11\ntry{\n  throw -0;\n}\ncatch(e){\n  if (e!==-0) $ERROR('#11: Exception ===-0. Actual:  Exception ==='+ e  );\n}\n",
    "id": "S12.14_A18_T5"
   },
   {
    "section": "12.14, 12.13",
    "description": "Catching Object",
    "test": "var myObj = {p1: 'a', \n             p2: 'b', \n             p3: 'c',\n             value: 'myObj_value',\n             valueOf : function(){return 'obj_valueOf';},\n             parseInt : function(){return 'obj_parseInt';},\n             NaN : 'obj_NaN',\n             Infinity : 'obj_Infinity',\n             eval     : function(){return 'obj_eval';},\n             parseFloat : function(){return 'obj_parseFloat';},\n             isNaN      : function(){return 'obj_isNaN';},\n             isFinite   : function(){return 'obj_isFinite';},\n             i:7,\n}\n\ntry{\n  throw myObj;\n}\ncatch(e){\t\n// CHECK#1\n  if (e.p1!==\"a\") $ERROR('#1: e.p1===\"a\". Actual:  e.p1==='+ e.p1 );\n// CHECK#2\n  if (e.value!=='myObj_value') $ERROR('#2: e.value===\\'myObj_value\\'. Actual:  e.value==='+ e.value );\n// CHECK#3\n  if (e.eval()!=='obj_eval') $ERROR('#3: e.eval()===\\'obj_eval\\'. Actual:  e.eval()==='+ e.eval() );\n}\n\n// CHECK#4\nmyObj.i=6;\ntry{\n  throw myObj;\n}\ncatch(e){}\nif (myObj.i!==6) $ERROR('#4: Handling of catch must be correct');\n\n// CHECK#5\nmyObj.i=6;\ntry{\n  throw myObj;\n}\ncatch(e){\n  e.i=10;\n}\nif (myObj.i!==10) $ERROR('#5: Handling of catch must be correct');\n",
    "id": "S12.14_A18_T6"
   },
   {
    "section": "12.14, 12.13",
    "description": "Catching Array",
    "test": "var mycars = new Array();\nmycars[0] = \"Saab\";\nmycars[1] = \"Volvo\";\nmycars[2] = \"BMW\";\n\nvar mycars2 = new Array();\nmycars2[0] = \"Mercedes\";\nmycars2[1] = \"Jeep\";\nmycars2[2] = \"Suzuki\";\n\n// CHECK#1\ntry{\n  throw mycars;\n}\ncatch(e){\n  for (var i=0;i<3;i++){\n    if (e[i]!==mycars[i]) $ERROR('#1.'+i+': Exception['+i+']===mycars['+i+']. Actual:  Exception['+i+']==='+ e[i] );\n  }\n}\n\n// CHECK#2\ntry{\n  throw mycars.concat(mycars2);\n}\ncatch(e){\n  for (var i=0;i<3;i++){\n    if (e[i]!==mycars[i]) $ERROR('#2.'+i+': Exception['+i+']===mycars['+i+']. Actual:  Exception['+i+']==='+ e[i] );\n  }\n  for (var i=3;i<6;i++){\n    if (e[i]!==mycars2[i-3]) $ERROR('#2.'+i+': Exception['+i+']===mycars2['+i+']. Actual:  Exception['+i+']==='+ e[i] );\n  }\n}\n\n// CHECK#3\ntry{\n  throw new Array(\"Mercedes\",\"Jeep\",\"Suzuki\");\n}\ncatch(e){\n  for (var i=0;i<3;i++){\n    if (e[i]!==mycars2[i]) $ERROR('#3.'+i+': Exception['+i+']===mycars2['+i+']. Actual:  Exception['+i+']==='+ e[i]);\n  }\n}\n\n// CHECK#4\ntry{\n  throw mycars.concat(new Array(\"Mercedes\",\"Jeep\",\"Suzuki\"));\n}\ncatch(e){\n  for (var i=0;i<3;i++){\n    if (e[i]!==mycars[i]) $ERROR('#4.'+i+': Exception['+i+']===mycars['+i+']. Actual:  Exception['+i+']==='+ e[i] );\n  }\n  for (var i=3;i<6;i++){\n    if (e[i]!==mycars2[i-3]) $ERROR('#4.'+i+': Exception['+i+']===mycars2['+(i-3)+']. Actual:  Exception['+i+']==='+ e[i]);\n  }\n}\n",
    "id": "S12.14_A18_T7"
   },
   {
    "section": "12.14, 15.11, 16",
    "description": "Testing try/catch syntax construction",
    "test": "// CHECK#1\ntry{\n  throw (Error(\"hello\"));\n}\ncatch(e){\n  if (e.toString()!==\"Error: hello\") $ERROR('#1: Exception.toString()===\"Error: hello\". Actual: Exception is '+e);\n}\n\n// CHECK#2\ntry{\n  throw (new Error(\"hello\"));\n}\ncatch(e){\n  if (e.toString()!==\"Error: hello\") $ERROR('#2: Exception.toString()===\"Error: hello\". Actual: Exception is '+e);\n}\n\n// CHECK#3\nvar c3=0;\ntry{\n  throw EvalError(1);\n}\ncatch(e){\n  if (e.toString()!==\"EvalError: 1\") $ERROR('#3: Exception.toString()===\"EvalError: 1\". Actual: Exception is '+e);\n}\n\n// CHECK#4\ntry{\n  throw RangeError(1);\n}\ncatch(e){\n  if (e.toString()!==\"RangeError: 1\") $ERROR('#4: Exception.toString()===\"RangeError: 1\". Actual: Exception is '+e);\n}\n\n// CHECK#5\ntry{\n  throw ReferenceError(1);\n}\ncatch(e){\n  if (e.toString()!==\"ReferenceError: 1\") $ERROR('#5: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is '+e);\n}\n\n// CHECK#6\nvar c6=0;\ntry{\n  throw TypeError(1);\n}\ncatch(e){\n  if (e.toString()!==\"TypeError: 1\") $ERROR('#6: Exception.toString()===\"TypeError: 1\". Actual: Exception is '+e);\n}\n\n// CHECK#7\ntry{\n  throw URIError(\"message\", \"fileName\", \"1\"); \n}\ncatch(e){\n  if (e.toString()!==\"URIError: message\") $ERROR('#7: Exception.toString()===\"URIError: message\". Actual: Exception is '+e);\n}\n",
    "id": "S12.14_A19_T1"
   },
   {
    "section": "12.14",
    "description": "Testing try/catch/finally syntax construction",
    "test": "var fin=0;\n// CHECK#1\ntry{\n  throw (Error(\"hello\"));\n}\ncatch(e){\n  if (e.toString()!==\"Error: hello\") $ERROR('#1.1: Exception.toString()===\"Error: hello\". Actual: Exception is '+e);\n}\nfinally{\n  fin=1;\n}\nif (fin!==1) $ERROR('#1.2: \"finally\" block must be evaluated'); \n\n// CHECK#2\nfin=0;\ntry{\n  throw (new Error(\"hello\"));\n}\ncatch(e){\n  if (e.toString()!==\"Error: hello\") $ERROR('#2.1: Exception.toString()===\"Error: hello\". Actual: Exception is '+e);\n}\nfinally{\n  fin=1;\n}\nif (fin!==1) $ERROR('#2.2: \"finally\" block must be evaluated'); \n\n// CHECK#3\nfin=0;\nvar c3=0;\ntry{\n  throw EvalError(1);\n}\ncatch(e){\n  if (e.toString()!==\"EvalError: 1\") $ERROR('#3.1: Exception.toString()===\"EvalError: 1\". Actual: Exception is '+e);\n}\nfinally{\n  fin=1;\n}\nif (fin!==1) $ERROR('#3.2: \"finally\" block must be evaluated'); \n\n// CHECK#4\nfin=0;\ntry{\n  throw RangeError(1);\n}\ncatch(e){\n  if (e.toString()!==\"RangeError: 1\") $ERROR('#4.1: Exception.toString()===\"RangeError: 1\". Actual: Exception is '+e);\n}\nfinally{\n  fin=1;\n}\nif (fin!==1) $ERROR('#4.2: \"finally\" block must be evaluated'); \n\n// CHECK#5\nfin=0;\ntry{\n  throw ReferenceError(1);\n}\ncatch(e){\n  if (e.toString()!==\"ReferenceError: 1\") $ERROR('#5.1: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is '+e);\n}\nfinally{\n  fin=1;\n}\nif (fin!==1) $ERROR('#5.2: \"finally\" block must be evaluated'); \n\n// CHECK#6\nfin=0;\ntry{\n  throw TypeError(1);\n}\ncatch(e){\n  if (e.toString()!==\"TypeError: 1\") $ERROR('#6.1: Exception.toString()===\"TypeError: 1\". Actual: Exception is '+e);\n}\nfinally{\n  fin=1;\n}\nif (fin!==1) $ERROR('#6.2: \"finally\" block must be evaluated'); \n\n// CHECK#7\nfin=0;\ntry{\n  throw URIError(\"message\", \"fileName\", \"1\"); \n}\ncatch(e){\n  if (e.toString()!==\"URIError: message\") $ERROR('#7.1: Exception.toString()===\"URIError: message\". Actual: Exception is '+e);\n}\nfinally{\n  fin=1;\n}\nif (fin!==1) $ERROR('#7.2: \"finally\" block must be evaluated'); \n",
    "id": "S12.14_A19_T2"
   },
   {
    "section": "12.14",
    "description": "Checking if execution of \"catch\" catches an exception thrown with \"throw\"",
    "test": "// CHECK#1\ntry {\n  throw \"catchme\";\t\n  $ERROR('#1: throw \"catchme\" lead to throwing exception');\n}\ncatch(e){}\n\n// CHECK#2\nvar c2=0;\ntry{\n  try{\n    throw \"exc\";\n    $ERROR('#2.1: throw \"exc\" lead to throwing exception');\n  }finally{\n    c2=1;\n  }\n}\ncatch(e){\n  if (c2!==1){\n    $ERROR('#2.2: \"finally\" block must be evaluated');\n  }\n}\n \n// CHECK#3\nvar c3=0;\ntry{\n  throw \"exc\";\n  $ERROR('#3.1: throw \"exc\" lead to throwing exception');\n}\ncatch(err){  \t\n  var x3=1;\n}\nfinally{\n  c3=1;\n}\nif (x3!==1){\n  $ERROR('#3.2: \"catch\" block must be evaluated');\n}  \nif (c3!==1){\n  $ERROR('#3.3: \"finally\" block must be evaluated');\n}\n",
    "id": "S12.14_A2"
   },
   {
    "section": "12.14",
    "description": "Checking if execution of \"catch\" catches system exceptions",
    "test": "// CHECK#1\ntry{\n  y;\n  $ERROR('#1: \"y\" lead to throwing exception');\n}\ncatch(e){}\n\n// CHECK#2\nvar c2=0;\ntry{\n  try{\n    someValue;\n    $ERROR('#3.1: \"someValues\" lead to throwing exception');\n  }\n  finally{\n    c2=1;\n  }\n}\ncatch(e){\n  if (c2!==1){\n    $ERROR('#3.2: \"finally\" block must be evaluated');\n  }\n}\n\n// CHECK#3\nvar c3=0,x3=0;\ntry{\n  x3=someValue;\n  $ERROR('#3.1: \"x3=someValues\" lead to throwing exception');\n}\ncatch(err){  \t\n  x3=1;\n}\nfinally{\n  c3=1;\n}\nif (x3!==1){\n  $ERROR('#3.2: \"catch\" block must be evaluated');\n}\nif (c3!==1){\n  $ERROR('#3.3: \"finally\" block must be evaluated');\n}\n",
    "id": "S12.14_A3"
   },
   {
    "section": "12.14",
    "description": "Checking if deleting an exception fails",
    "strict_mode_negative": "SyntaxError",
    "test": "// CHECK#1\ntry {\n  throw \"catchme\";\n  $ERROR('#1.1: throw \"catchme\" lead to throwing exception');\n}\ncatch (e) {\n  if (delete e){\n    $ERROR('#1.2: Exception has DontDelete property');\n  }\n  if (e!==\"catchme\") {\n    $ERROR('#1.3: Exception === \"catchme\". Actual:  Exception ==='+ e  );\n  }\n}\n\n// CHECK#2\ntry {\n  throw \"catchme\";\n  $ERROR('#2.1: throw \"catchme\" lead to throwing exception');\n}\ncatch(e){}\ntry{\n  e;\n  $ERROR('#2.2: Deleting catching exception after ending \"catch\" block');\n}\ncatch(err){}\n",
    "id": "S12.14_A4",
    "strict_only": ""
   },
   {
    "section": "12.14",
    "description": "Checking \"catch\" catches the Identifier in appropriate way",
    "test": "// CHECK#1\ntry {\n  throw \"catchme\";\t\n  throw \"dontcatchme\";\n  $ERROR('#1.1: throw \"catchme\" lead to throwing exception');\n}\ncatch (e) {\n  if(e===\"dontcatchme\"){\n    $ERROR('#1.2: Exception !== \"dontcatchme\"');\n  }\n  if (e!==\"catchme\") {\n    $ERROR('#1.3: Exception === \"catchme\". Actual:  Exception ==='+ e  );\n  }\n}\n\n// CHECK#2\nfunction SwitchTest1(value){\n  var result = 0;\n  try{  \n    switch(value) {\n      case 1:\n        result += 4;\n        throw result;\n        break;\n      case 4:\n        result += 64;\n        throw \"ex\";\n    }\n  return result;\n  }\n  catch(e){\t\n    if ((value===1)&&(e!==4)) $ERROR('#2.1: Exception === 4. Actual: '+e);\n    if ((value===4)&&(e!==\"ex\"))$ERROR('#2.2: Exception === \"ex\". Actual: '+e);\n  }\n  finally{\n    return result;\n  }\n}\nif (SwitchTest1(1)!==4) $ERROR('#2.3: \"finally\" block must be evaluated');\nif (SwitchTest1(4)!==64)$ERROR('#2.4: \"finally\" block must be evaluated');\n",
    "id": "S12.14_A5"
   },
   {
    "section": "12.14",
    "description": "Executing sequence of \"try\" statements, using counters with varying values within",
    "test": "// CHECK#1\nvar c1=0;\ntry {\n  c1+=1;\n  y;\n  $ERROR('#1.1: \"y\" lead to throwing exception');\n}\ncatch (e) {\n  c1*=2;\n}\nif (c1!==2){\n  $ERROR('#1.2: Sequence evaluation of commands try/catch is 1. try, 2. catch');\t\n}\n\n// CHECK#2\nvar c2=0;\ntry{\n  c2+=1;\n}\nfinally{\n  c2*=2;\n}\nif (c2!==2){\n  $ERROR('#2: Sequence evaluation of commands try/finally is 1. try, 2. finally');\n}\n\n// CHECK#3\nvar c3=0;\ntry{\n  c3=1;\n  z;\n}\ncatch(err){\n  c3*=2;\n}\nfinally{\n  c3+=1;\n}\nif (c3!==3){\n  $ERROR('#3: Sequence evaluation of commands try/catch/finally(with exception) is 1. try, 2. catch, 3. finally');\n}\t\n\n// CHECK#4\nvar c4=0;\ntry{\n  c4=1;\n}\ncatch(err){\n  c4*=3;\n}\nfinally{\n  c4+=1;\n}\nif (c4!==2){\n  $ERROR('#4: Sequence evaluation of commands try/catch/finally(without exception) is 1. try, 2. finally');\n}\t\n",
    "id": "S12.14_A6"
   },
   {
    "section": "12.14",
    "description": "Checking if the production of nested TryStatement statements evaluates correct",
    "test": "// CHECK#1\ntry{\n  try{\n    throw \"ex2\";\n  }\n  catch(er2){\n    if (er2!==\"ex2\")\n      $ERROR('#1.1: Exception === \"ex2\". Actual:  Exception ==='+ e  );\n      throw \"ex1\";\n    }\n  }\n  catch(er1){\n    if (er1!==\"ex1\") $ERROR('#1.2: Exception === \"ex1\". Actual: '+er1);\n    if (er1===\"ex2\") $ERROR('#1.3: Exception !== \"ex2\". Actual: catch previous embedded exception');\n}\n\n// CHECK#2\ntry{\n  throw \"ex1\";\n}\ncatch(er1){\n  try{\n    throw \"ex2\";\n  }\n  catch(er1){\n    if (er1===\"ex1\") $ERROR('#2.1: Exception !== \"ex1\". Actual: catch previous catching exception');\n    if (er1!==\"ex2\") $ERROR('#2.2: Exception === \"ex2\". Actual:  Exception ==='+ er1  );\n  }\n  if (er1!==\"ex1\") $ERROR('#2.3: Exception === \"ex1\". Actual:  Exception ==='+ er1  );\n  if (er1===\"ex2\") $ERROR('#2.4: Exception !== \"ex2\". Actual: catch previous catching exception');\n}\n\n// CHECK#3\ntry{\n  throw \"ex1\";\n}\ncatch(er1){\n  if (er1!==\"ex1\") $ERROR('#3.1: Exception ===\"ex1\". Actual:  Exception ==='+ er1  );\n}\nfinally{\n  try{\n    throw \"ex2\";\n  }\n  catch(er1){\n    if (er1===\"ex1\") $ERROR('#3.2: Exception !==\"ex1\". Actual: catch previous embedded exception');\n    if (er1!==\"ex2\") $ERROR('#3.3: Exception ===\"ex2\". Actual:  Exception ==='+ er1  );\n  }\n}\n\n// CHECK#4\nvar c4=0;\ntry{\n  throw \"ex1\";\n}\ncatch(er1){\n  try{\n    throw \"ex2\";\n  }\n  catch(er1){\n    if (er1===\"ex1\") $ERROR('#4.1: Exception !==\"ex1\". Actual: catch previous catching exception');\n    if (er1!==\"ex2\") $ERROR('#4.2: Exception ===\"ex2\". Actual:  Exception ==='+ er1  );\n  }\n  if (er1!==\"ex1\") $ERROR('#4.3: Exception ===\"ex1\". Actual:  Exception ==='+ er1  );\n  if (er1===\"ex2\") $ERROR('#4.4: Exception !==\"ex2\". Actual: Catch previous embedded exception');\n}\nfinally{\n  c4=1;\n}\nif (c4!==1) $ERROR('#4.5: \"finally\" block must be evaluated');\n\n// CHECK#5\nvar c5=0;\ntry{\n  try{\n    throw \"ex2\";\n  }\n  catch(er1){\n    if (er1!==\"ex2\") $ERROR('#5.1: Exception ===\"ex2\". Actual:  Exception ==='+ er1  );\n  }\n  throw \"ex1\";\n}\ncatch(er1){\n  if (er1!==\"ex1\") $ERROR('#5.2: Exception ===\"ex1\". Actual:  Exception ==='+ er1  );\n  if (er1===\"ex2\") $ERROR('#5.3: Exception !==\"ex2\". Actual: catch previous embedded exception');\n}\nfinally{\n  c5=1;\n}\nif (c5!==1) $ERROR('#5.4: \"finally\" block must be evaluated');\n\n// CHECK#6\nvar c6=0;\ntry{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    if (er1!==\"ex1\") $ERROR('#6.1: Exception ===\"ex1\". Actual:  Exception ==='+ er1  );\n  }\n}\nfinally{\n  c6=1;\t\t\n}\nif (c6!==1) $ERROR('#6.2: \"finally\" block must be evaluated');\n\n// CHECK#7\nvar c7=0;\ntry{\n  try{\n    throw \"ex1\";\n  }\n  finally{\n    try{\n      c7=1;\n      throw \"ex2\";\n    }\n    catch(er1){\n      if (er1!==\"ex2\") $ERROR('#7.1: Exception ===\"ex2\". Actual:  Exception ==='+ er1  );\n      if (er1===\"ex1\") $ERROR('#7.2: Exception !==\"ex1\". Actual: catch previous embedded exception');\n      c7++;\n    }\n  }\n}\ncatch(er1){\n  if (er1!==\"ex1\") $ERROR('#7.3: Exception ===\"ex1\". Actual:  Exception ==='+ er1  );\n}\nif (c7!==2) $ERROR('#7.4: \"finally\" block must be evaluated');\n",
    "id": "S12.14_A7_T1"
   },
   {
    "section": "12.14",
    "description": "Checking if the production of nested TryStatement statements evaluates correct",
    "test": "// CHECK#1\ntry{\n  try{\n    throw \"ex2\";\n  }\n  finally{\n    throw \"ex1\";\n  }\n}\ncatch(er1){\n  if (er1!==\"ex1\") $ERROR('#1.2: Exception === \"ex1\". Actual:  Exception ==='+er1 );\n  if (er1===\"ex2\") $ERROR('#1.3: Exception !== \"ex2\". Actual: catch previous embedded exception');\n}\n\n// CHECK#2\ntry{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    if (er1!==\"ex1\") $ERROR('#2.1: Exception === \"ex1\". Actual:  Exception ==='+er1 );\n    try{\n      throw \"ex2\";\n    }\n    finally{\n      throw \"ex3\";\n    }\n    $ERROR('#2.2: throw \"ex1\" lead to throwing exception');\n  }\n}\ncatch(er1){\n  if (er1!==\"ex3\") $ERROR('#2.3: Exception === \"ex3\". Actual:  Exception ==='+er1 );\n}\n\n// CHECK#3\ntry{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    if (er1!==\"ex1\") $ERROR('#3.1: Exception === \"ex1\". Actual:  Exception ==='+er1 );\n  }\n  finally{\n    try{\n      throw \"ex2\";\n    }\n    finally{\n      throw \"ex3\";\n    }\n  }\t\n}\ncatch(er1){\n  if (er1!==\"ex3\") $ERROR('#3.2: Exception === \"ex3\". Actual:  Exception ==='+er1 );\n}\n\n// CHECK#4\nvar c4=0;\ntry{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    if (er1!==\"ex1\") $ERROR('#4.1: Exception === \"ex1\". Actual:  Exception ==='+er1 );\n    try{\n      throw \"ex2\";\n    }\n    finally{\n      throw \"ex3\";\n    }\n  }\n  finally{\n    c4=1;\n  }\n}\ncatch(er1){\n  if (er1!==\"ex3\") $ERROR('#4.2: Exception === \"ex3\". Actual:  Exception ==='+er1 );\n}\nif (c4!==1) $ERROR('#4.3: \"finally\" block must be evaluated');\n\n// CHECK#5\nvar c5=0;\ntry{\n  try{\n    throw \"ex2\";\n  }\n  finally{\n    throw \"ex3\";\n  }\n  throw \"ex1\";\n}\ncatch(er1){\n  if (er1!==\"ex3\") $ERROR('#5.1: Exception === \"ex3\". Actual:  Exception ==='+er1 );\n  if (er1===\"ex2\") $ERROR('#5.2: Exception !== \"ex2\". Actual: catch previous embedded exception');\n  if (er1===\"ex1\") $ERROR('#5.3: Exception !==\"ex1\". Actual: catch previous embedded exception');\n}\nfinally{\n  c5=1;\n}\nif (c5!==1) $ERROR('#5.4: \"finally\" block must be evaluated');\n\n// CHECK#6\nvar c6=0;\ntry{\n  try{\n    try{\n      throw \"ex1\";\n    }\n    finally{\n      throw \"ex2\";\n    }\n  }\n  finally{\n    c6=1;\n  }\n}\ncatch(er1){\n  if (er1!==\"ex2\") $ERROR('#6.1: Exception === \"ex2\". Actual:  Exception ==='+er1 );\n}\nif (c6!==1) $ERROR('#6.2: \"finally\" block must be evaluated');\n\n// CHECK#7\nvar c7=0;\ntry{\n  try{\n    throw \"ex1\";\n  }\n  finally{\n    try{\n      c7=1;\n      throw \"ex2\";\n    }\n    finally{\n      c7++;\n      throw \"ex3\";\n    }\n  }\n}\ncatch(er1){\n  if (er1!==\"ex3\") $ERROR('#7.1: Exception === \"ex3\". Actual:  Exception ==='+er1 );\n}\nif (c7!==2) $ERROR('#7.2: Embedded \"try/finally\" blocks must be evaluated');\n",
    "id": "S12.14_A7_T2"
   },
   {
    "section": "12.14",
    "description": "Checking if the production of nested TryStatement statements evaluates correct",
    "test": "// CHECK#1\ntry{\n  try{\n    throw \"ex2\";\n  }\n  catch(er2){\n    if (er2!==\"ex2\") $ERROR('#1.1: Exception === \"ex2\". Actual:  Exception ==='+er2);\n    throw \"ex1\";\n  }\n  finally{\n    throw \"ex3\";\n  }\n}\ncatch(er1){\n  if (er1!==\"ex3\") $ERROR('#1.2: Exception === \"ex3\". Actual:  Exception ==='+er1);\n  if (er1===\"ex2\") $ERROR('#1.3: Exception !==\"ex2\". Actual: catch previous catched exception');\n  if (er1===\"ex1\") $ERROR('#1.4: Exception !==\"ex1\". Actual: catch previous embedded exception');\n}\n\n// CHECK#2\nvar c2=0;\ntry{\n  throw \"ex1\";\n}\ncatch(er1){\n  try{\n    throw \"ex2\";\n  }\n  catch(er1){\n    if (er1===\"ex1\") $ERROR('#2.1: Exception !==\"ex1\". Actual: catch previous catched exception');\n    if (er1!==\"ex2\") $ERROR('#2.2: Exception === \"ex2\". Actual:  Exception ==='+er1);\n  }\n  finally{\n    c2=1;\n  }\n  if (er1!==\"ex1\") $ERROR('#2.3: Exception === \"ex1\". Actual:  Exception ==='+er1);\n  if (er1===\"ex2\") $ERROR('#2.4: Exception !== \"ex2\". Actual: catch previous embedded exception');\n}\nif (c2!==1)\t$ERROR('#2.5: \"finally\" block must be evaluated');\n\n// CHECK#3\nvar c3=0;\ntry{\n  throw \"ex1\";\n}\ncatch(er1){\n  if (er1!==\"ex1\") $ERROR('#3.1: Exception === \"ex1\". Actual:  Exception ==='+er1);\n}\nfinally{\n  try{\n    throw \"ex2\";\n  }\n  catch(er1){\n    if (er1===\"ex1\") $ERROR('#3.2: Exception !==\"ex1\". Actual: catch previous catched exception');\n    if (er1!==\"ex2\") $ERROR('#3.3: Exception === \"ex2\". Actual:  Exception ==='+er1);\n  }\n  finally{\n    c3=1;\n  }\n}\nif (c3!==1)\t$ERROR('#3.4: \"finally\" block must be evaluated');\n\n// CHECK#4\nvar c4=0;\ntry{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    try{\n      throw \"ex2\";\n    }\n    catch(er1){\n      if (er1===\"ex1\") $ERROR('#4.1: Exception !==\"ex2\". Actual: catch previous catched exception');\n      if (er1!==\"ex2\") $ERROR('#4.2: Exception === \"ex2\". Actual:  Exception ==='+er1);\n    }\n    finally{\n      c4=2;\n      throw \"ex3\";\n    }\n    if (er1!==\"ex1\") $ERROR('#4.3: Exception === \"ex2\". Actual:  Exception ==='+er1);\n    if (er1===\"ex2\") $ERROR('#4.4: Exception !==\"ex2\". Actual: catch previous catched exception');\n    if (er1===\"ex3\") $ERROR('#4.5: Exception !==\"ex3\". Actual: Catch previous embedded exception');\n  }\n  finally{\n    c4*=2;\n  }\n}\ncatch(er1){}\nif (c4!==4) $ERROR('#4.6: \"finally\" block must be evaluated');\n\n// CHECK#5\nvar c5=0;\ntry{\n  try{\n    throw \"ex2\";\n  }\n  catch(er1){\n    if (er1!==\"ex2\") $ERROR('#5.1: Exception === \"ex2\". Actual:  Exception ==='+er1);\n  }\n  finally{\n    throw \"ex3\";\n  }\n  throw \"ex1\";\n}\ncatch(er1){\n  if (er1!==\"ex3\") $ERROR('#5.2: Exception === \"ex3\". Actual:  Exception ==='+er1);\n  if (er1===\"ex2\") $ERROR('#5.3: Exception !==\"ex2\". Actual: catch previous catched exception');\n  if (er1===\"ex1\") $ERROR('#5.4: Exception !==\"ex1\". Actual: catch previous embedded exception');\n}\nfinally{\n  c5=1;\n}\nif (c5!==1) $ERROR('#5.5: \"finally\" block must be evaluated');\n\n// CHECK#6\nvar c6=0;\ntry{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    if (er1!==\"ex1\") $ERROR('#6.1: Exception === \"ex1\". Actual:  Exception ==='+er1);\n  }\n  finally{\n    c6=2;\n  }\n}\nfinally{\n  c6*=2;\n}\nif (c6!==4) $ERROR('#6.2: \"finally\" block must be evaluated');\n\n// CHECK#7\nvar c7=0;\ntry{\n  try{\n    throw \"ex1\";\n  }\n  finally{\n    try{\n      c7=1;\n      throw \"ex2\";\n    }\n    catch(er1){\n      if (er1!==\"ex2\") $ERROR('#7.1: Exception === \"ex2\". Actual:  Exception ==='+er1);\n      if (er1===\"ex1\") $ERROR('#7.2: Exception !==\"ex2\". Actual: catch previous catched exception');\n      c7++;\n    }\n    finally{\n      c7*=2;\n    }\n  }\n}\ncatch(er1){\n  if (er1!==\"ex1\") $ERROR('#7.3: Exception === \"ex1\". Actual:  Exception ==='+er1);\n}\nif (c7!==4) $ERROR('#7.4: \"finally\" block must be evaluated');\n",
    "id": "S12.14_A7_T3"
   },
   {
    "section": "12.14",
    "description": "Throwing exception within an \"if\" statement",
    "test": "// CHECK#1\nvar c1=1;\ntry{\n  if(c1===1){\n    throw \"ex1\";\n    $ERROR('#1.1: throw \"ex1\" lead to throwing exception');\n  }\n  $ERROR('#1.2: throw \"ex1\" inside the \"if\" statement lead to throwing exception');\n}\ncatch(er1){\t\n  if (er1!==\"ex1\") $ERROR('#1.3: Exception ===\"ex1\". Actual:  Exception ==='+er1);\n}\n\n// CHECK#2\nvar c2=1;\nif(c2===1){\n  try{\n    throw \"ex1\";\n    $ERROR('#2.1: throw \"ex1\" lead to throwing exception');\n  }\n  catch(er1){\n    if(er1!=\"ex1\") $ERROR('#2.2: Exception ===\"ex1\". Actual:  Exception ==='+er1);\n  }\n}\n",
    "id": "S12.14_A8"
   },
   {
    "section": "12.14",
    "description": "Loop within a \"try\" Block, from where exception is thrown",
    "test": "// CHECK#1\nvar i=0;\ntry{\n  do{\n    if(i===5) throw i;\n    i++;\n  }\n  while(i<10);\n}\ncatch(e){\n  if(e!==5)$ERROR('#1: Exception ===5. Actual:  Exception ==='+ e  );\n}\n",
    "id": "S12.14_A9_T1"
   },
   {
    "section": "12.14",
    "description": "\"try\" statement within a loop, the statement contains \"continue\" statement",
    "test": "// CHECK#1\nvar c1=0,fin=0;\ndo{\n  try{\n    c1+=1;\n    continue;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n  }\n  fin=-1;\n}\nwhile(c1<2);\nif(fin!==1){\n  $ERROR('#1: \"finally\" block must be evaluated at \"try{continue} catch finally\" construction');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\ndo{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    continue;\n  }\n  finally{\n    fin2=1;\n  }\n  fin2=-1;\n}\nwhile(c2<2);\nif(fin2!==1){\n  $ERROR('#2: \"finally\" block must be evaluated at \"try catch{continue} finally\" construction');\n}\n\n// CHECK#3\nvar c3=0,fin3=0;\ndo{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c3+=1;\n  }\n  finally{\n    fin3=1;\n    continue;\n  }\n  fin3=0;\n}\nwhile(c3<2);\nif(fin3!==1){\n  $ERROR('#3: \"finally\" block must be evaluated at \"try catch finally{continue}\" construction');\n}\n\n// CHECK#4\nvar c4=0,fin4=0;\ndo{\n  try{\n    c4+=1;\n    continue;\n  }\n  finally{\n    fin4=1;\n  }\n  fin4=-1;\n}\nwhile(c4<2);\nif(fin4!==1){\n  $ERROR('#4: \"finally\" block must be evaluated at \"try{continue} finally\"  construction');\n}\n\n// CHECK#5\nvar c5=0;\ndo{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c5+=1;\n    continue;\n  }\n}\nwhile(c5<2);\nif(c5!==2){\n  $ERROR('#5: \"try catch{continue}\" must work correctly');\n}\n\n// CHECK#6\nvar c6=0,fin6=0;\ndo{\n  try{\n    c6+=1;\n    throw \"ex1\"\n  }\n  finally{\n    fin6=1;\n    continue;\n  }\n  fin6=-1;\n}\nwhile(c6<2);\nif(fin6!==1){\n  $ERROR('#6.1: \"finally\" block must be evaluated');\n}\nif(c6!==2){\n  $ERROR('#6.2: \"try finally{continue}\" must work correctly');\n}\n",
    "id": "S12.14_A9_T2"
   },
   {
    "section": "12.14",
    "description": "\"try\" statement within a loop, the statement contains \"break\" statement",
    "test": "// CHECK#1\nvar c1=0,fin=0;\ndo{\n  try{\n    c1+=1;\n    break;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n  }\n  fin=-1;\n  c1+=2;\n}\nwhile(c1<2);\nif(fin!==1){\n  $ERROR('#1.1: \"finally\" block must be evaluated');\n}\nif(c1!==1){\n  $ERROR('#1.2: \"try{break}catch finally\" must work correctly');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\ndo{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    break;\n  }\n  finally{\n    fin2=1;\n  }\n  c2+=2;\n  fin2=-1;\n}\nwhile(c2<2);\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==1){\n  $ERROR('#2.2: \"try catch{break} finally\" must work correctly');\n}\n\n// CHECK#3\nvar c3=0,fin3=0;\ndo{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c3+=1;\n  }\n  finally{\n    fin3=1;\n    break;\n  }\n  c3+=2;\n  fin3=0;\n}\nwhile(c3<2);\nif(fin3!==1){\n  $ERROR('#3.1: \"finally\" block must be evaluated');\n}\nif(c3!==1){\n  $ERROR('#3.2: \"try catch finally{break}\" must work correctly');\n}\n\n// CHECK#4\nvar c4=0,fin4=0;\ndo{\n  try{\n    c4+=1;\n    break;\n  }\n  finally{\n    fin4=1;\n  }\n  fin4=-1;\n  c4+=2;\n}\nwhile(c4<2);\nif(fin4!==1){\n  $ERROR('#4.1: \"finally\" block must be evaluated');\n}\nif(c4!==1){\n  $ERROR('#4.2: \"try{break} finally\" must work correctly');\n}\n\n// CHECK#5\nvar c5=0;\ndo{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    break;\n  }\n}\nwhile(c5<2);\nif(c5!==0){\n  $ERROR('#5: \"try catch{break}\" must work correctly');\n}\n\n// CHECK#6\nvar c6=0;\ndo{\n  try{\n    c6+=1;\n    break;\n  }\n  catch(er1){}\n  c6+=2;\n}\nwhile(c6<2);\nif(c6!==1){\n  $ERROR('#6: \"try{break} catch\" must work correctly');\n}\n\n// CHECK#7\nvar c7=0,fin7=0;\ntry{\n  do{\n    try{\n      c7+=1;\n      throw \"ex1\";\n    }\n    finally{\n      fin7=1;\n      break;\n    }\n    fin7=-1;\n    c7+=2;\n  }\n  while(c7<2);\n}\ncatch(ex1){\n  c7=10;\n}\nif(fin7!==1){\n  $ERROR('#7.1: \"finally\" block must be evaluated');\n}\nif(c7!==1){\n  $ERROR('#7.2: try finally{break} error');\n}\n",
    "id": "S12.14_A9_T3"
   },
   {
    "section": "12.14",
    "description": "\"try\" statement within a loop, the statement contains \"continue\" and \"break\" statements",
    "test": "// CHECK#1\nvar c1=0,fin=0;\ndo{\n  try{\n    c1+=1;\n    break;\n  }\n  catch(er1){}\n  finally{\n    fin=1;\n    continue;\n  }\n  fin=-1;\n  c1+=2;\n}\nwhile(c1<2);\nif(fin!==1){\n  $ERROR('#1.1: \"finally\" block must be evaluated');\n}\nif(c1!==2){\n  $ERROR('#1.2: \"try{break} catch finally{continue}\" must work correctly');\n}\n\n// CHECK#2\nvar c2=0,fin2=0;\ndo{\n  try{\n    throw \"ex1\";\n  }\n  catch(er1){\n    c2+=1;\n    break;\n  }\n  finally{\n    fin2=1;\n    continue;\n  }\n  c2+=2;\n  fin2=-1;\n}\nwhile(c2<2);\nif(fin2!==1){\n  $ERROR('#2.1: \"finally\" block must be evaluated');\n}\nif(c2!==2){\n  $ERROR('#2.2: \"try catch{break} finally{continue}\" must work correctly');\n}\n",
    "id": "S12.14_A9_T4"
   },
   {
    "section": "12.14",
    "description": "Checking if exceptions are thrown correctly from wherever of loop body",
    "test": "// CHECK#1\nvar c=0, i=0;\nvar fin=0;\ndo{\n  i+=1;\n  try{\n    if(c===0){\n      throw \"ex1\";\n      $ERROR('#1.1: throw \"ex1\" lead to throwing exception');\n    }\n    c+=2;\n    if(c===1){\n      throw \"ex2\";\n      $ERROR('#1.2: throw \"ex2\" lead to throwing exception');\n    }\n  }\n  catch(er1){\n    c-=1;\n    continue;\n    $ERROR('#1.3: \"try catch{continue} finally\" must work correctly');\n  }\n  finally{\n    fin+=1;\n  }\n}\nwhile(i<10);\nif(fin!==10){\n  $ERROR('#1.4: \"finally\" block must be evaluated');\n}\n\n",
    "id": "S12.14_A9_T5"
   }
  ]
 }
}
