{
 "testCollection": {
  "name": "11.1.6_The_Grouping_Operator",
  "numTests": 8,
  "tests": [
   {
    "section": "11.1.6, 7.2, 7.3",
    "description": "Inserting WhiteSpaces and LineTerminators into grouping operator. Eval is used",
    "test": "//CHECK#1\nif (eval(\"(\\u00091\\u0009)\") !== 1) {\n  $ERROR('#1: (\\\\u00091\\\\u0009) === 1');\n}\n\n//CHECK#2\nif (eval(\"(\\u000B1\\u000B)\") !== 1) {\n  $ERROR('#2: (\\\\u000B1\\\\u000B) === 1');  \n}\n\n//CHECK#3\nif (eval(\"(\\u000C1\\u000C)\") !== 1) {\n  $ERROR('#3: (\\\\u000C1\\\\u000C) === 1');\n}\n\n//CHECK#4\nif (eval(\"(\\u00201\\u0020)\") !== 1) {\n  $ERROR('#4: (\\\\u00201\\\\u0020 === 1');\n}\n\n//CHECK#5\nif (eval(\"(\\u00A01\\u00A0)\") !== 1) {\n  $ERROR('#5: (\\\\u00A01\\\\u00A0) === 1');\n}\n\n//CHECK#6\nif (eval(\"(\\u000A1\\u000A)\") !== 1) {\n  $ERROR('#6: (\\\\u000A1\\\\u000A) === 1');  \n}\n\n//CHECK#7\nif (eval(\"(\\u000D1\\u000D)\") !== 1) {\n  $ERROR('#7: (\\\\u000D1\\\\u000D) === 1');\n}\n\n//CHECK#8\nif (eval(\"(\\u20281\\u2028)\") !== 1) {\n  $ERROR('#8: (\\\\u20281\\\\u2028) === 1');\n}\n\n//CHECK#9\nif (eval(\"(\\u20291\\u2029)\") !== 1) {\n  $ERROR('#9: (\\\\u20291\\\\u2029) === 1');\n}\n\n//CHECK#10\nif (eval(\"(\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029)\") !== 1) {\n  $ERROR('#10: (\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u20291\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029) === 1');\n}\n",
    "id": "S11.1.6_A1"
   },
   {
    "section": "11.1.6",
    "description": "Applying \"delete\" and \"typeof\" operators to an undefined variable and a property of an object",
    "test": "//CHECK#1\nif (delete (x) !== true) {\n  $ERROR('#1: delete (x) === true');\n}\n\n//CHECK#2\nif (typeof (x) !== \"undefined\") {\n  $ERROR('#2: typeof (x) === \"undefined\". Actual: ' + (typeof (x)));\n}\n\nvar object = {};\n//CHECK#3\nif (delete (object.prop) !== true) {\n  $ERROR('#3: var object = {}; delete (object.prop) === true');\n}\n\n//CHECK#4\nif (typeof (object.prop) !== \"undefined\") {\n  $ERROR('#4: var object = {}; typeof (object.prop) === \"undefined\". Actual: ' + (typeof (object.prop)));\n}\n",
    "id": "S11.1.6_A2"
   },
   {
    "section": "11.1.6",
    "description": "Applying grouping operator to Boolean",
    "test": "// Check for Boolean\n\n//CHECK#1\nif ((true) !== true) {\n  $ERROR('#1: (true) === true');\n}\n\n//CHECK#2\nvar x = new Boolean(true);\nif ((x) !== x) {\n  $ERROR('#2: var x = new Boolean(true); (x) === x. Actual: ' + ((x)));\n}\n",
    "id": "S11.1.6_A3_T1"
   },
   {
    "section": "11.1.6",
    "description": "Applying grouping operator to Number",
    "test": "//Check for Number\n\n//CHECK#1\nif ((1) !== 1) {\n  $ERROR('#1: (1) === 1. Actual: ' + ((1)));\n}\n\n//CHECK#2\nvar x = new Number(1);\nif ((x) !== x) {\n  $ERROR('#2: var x = new Number(1); (x) === x. Actual: ' + ((x)));\n}\n",
    "id": "S11.1.6_A3_T2"
   },
   {
    "section": "11.1.6",
    "description": "Applying grouping operator to String",
    "test": "//Check for String\n\n//CHECK#1\nif ((\"1\") !== \"1\") {\n  $ERROR('#1: (\"1\") === \"1\". Actual: ' + ((\"1\")));\n}\n\n//CHECK#2\nif ((\"x\") !== \"x\") {\n  $ERROR('#2: (\"x\") === \"x\". Actual: ' + ((\"x\")));\n}\n\n//CHECK#3\nvar x = new Number(\"1\");\nif ((x) !== x) {\n  $ERROR('#3: var x = new Number(\"1\"); (x) === x. Actual: ' + ((x)));\n}\n",
    "id": "S11.1.6_A3_T3"
   },
   {
    "section": "11.1.6",
    "description": "Applying grouping operator to undefined",
    "test": "//Check for undefined and null\n\n//CHECK#1\nif ((undefined) !== undefined) {\n  $ERROR('#1: (undefined) === undefined. Actual: ' + ((undefined)));\n}\n\n//CHECK#2\nif ((void 0) !== void 0) {\n  $ERROR('#2: (void 0) === void 0. Actual: ' + ((void 0)));\n}\n\n//CHECK#2\nif ((null) !== null) {\n  $ERROR('#2: (null) === null. Actual: ' + ((null)));\n}\n",
    "id": "S11.1.6_A3_T4"
   },
   {
    "section": "11.1.6",
    "description": "Using grouping operator in declaration of variables",
    "test": "//CHECK#1\n(x) = 1;\nif (x !== 1) {\n  $ERROR('#1: (x) = 1; x === 1. Actual: ' + (x));\n}\n\n//CHECK#2\nvar y = 1; (y)++; ++(y); (y)--; --(y);\nif (y !== 1) {\n  $ERROR('#2: var y = 1; (y)++; ++(y); (y)--; --(y); y === 1. Actual: ' + (y));\n}\n",
    "id": "S11.1.6_A3_T5"
   },
   {
    "section": "11.1.6",
    "description": "Applying grouping operator to delete and typeof operators",
    "test": "//CHECK#1\nif (delete (x) !== true) {\n  $ERROR('#1: delete (x) === true');\n}\n\n//CHECK#2\nif (typeof (x) !== \"undefined\") {\n  $ERROR('#2: typeof (x) === \"undefined\". Actual: ' + (typeof (x)));\n}\n",
    "id": "S11.1.6_A3_T6"
   }
  ]
 }
}
