{
 "testCollection": {
  "name": "12.8_The_break_Statement",
  "numTests": 18,
  "tests": [
   {
    "section": "12.8",
    "description": "Checking if break statement with no loop fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nvar x=1;\nbreak;\nvar y=2;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A1_T1"
   },
   {
    "section": "12.8",
    "description": "Checking if break Identifier with no loop fails",
    "negative": "",
    "test": "LABEL : x=3.14;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nvar x=1;\nbreak LABEL;\nvar y=2;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A1_T2"
   },
   {
    "section": "12.8",
    "description": "Checking if break statement with no loop, placed into a block, fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\n{\n    var x=1;\n    break;\n    var y=2;\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A1_T3"
   },
   {
    "section": "12.8",
    "description": "Checking if break Identifier with no loop, placed into a  block, fails",
    "negative": "",
    "test": "LABEL : x=3.14;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\n{\n    var x=1;\n    break LABEL;\n    var y=2;\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A1_T4"
   },
   {
    "section": "12.8",
    "description": "Checking by using eval, inserting LineTerminator between break and Identifier",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ntry{\n\teval(\"FOR1 : for(var i=1;i<2;i++){ LABEL1 : do {var x =1;break\\u000AFOR1;var y=2;} while(0);}\");\n\tif (i!==2) {\n\t\t$ERROR('#1: Since LineTerminator(U-000A) between break and Identifier not allowed break evaluates without label');\n\t}\n} catch(e){\n\t$ERROR('#1.1: eval(\"FOR1 : for(var i=1;i<2;i++){ LABEL1 : do {var x =1;break\\\\u000AFOR1;var y=2;} while(0);}\") does not lead to throwing exception');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\ntry{\n\teval(\"FOR2 : for(var i=1;i<2;i++){ LABEL2 : do {var x =1;break\\u000DFOR2;var y=2;} while(0);}\");\n\tif (i!==2) {\n\t\t$ERROR('#2: Since LineTerminator(U-000D) between break and Identifier not allowed break evaluates without label');\n\t}\n} catch(e){\n\t$ERROR('#2.1: eval(\"FOR2 : for(var i=1;i<2;i++){ LABEL2 : do {var x =1;break\\\\u000DFOR2;var y=2;} while(0);}\") does not lead to throwing exception');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\ntry{\n\teval(\"FOR3 : for(var i=1;i<2;i++){ LABEL3 : do {var x =1;break\\u2028FOR3;var y=2;} while(0);}\");\n\tif (i!==2) {\n\t\t$ERROR('#3: Since LineTerminator(U-2028) between break and Identifier not allowed break evaluates without label');\n\t}\n} catch(e){\n\t$ERROR('#3.1: eval(\"FOR3 : for(var i=1;i<2;i++){ LABEL3 : do {var x =1;break\\\\u2028FOR3;var y=2;} while(0);}\") does not lead to throwing exception');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#4\ntry{\n\teval(\"FOR4 : for(var i=1;i<2;i++){ LABEL4 : do {var x =1;break\\u2029FOR4;var y=2;} while(0);}\");\n\tif (i!==2) {\n\t\t$ERROR('#4: Since LineTerminator(U-2029) between break and Identifier not allowed break evaluates without label');\n\t}\n} catch(e){\n\t$ERROR('#4.1: eval(\"FOR4 : for(var i=1;i<2;i++){ LABEL4 : do {var x =1;break\\\\u2029FOR4;var y=2;} while(0);}\") does not lead to throwing exception');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n\n",
    "id": "S12.8_A2"
   },
   {
    "section": "12.8",
    "description": "Using \"break\" without Identifier within labeled loop",
    "test": "LABEL_OUT : var x=0, y=0;\n\nLABEL_DO_LOOP : do {\n    LABEL_IN : x=2;\n    break ;\n    LABEL_IN_2 : var y=2;\n    \n    function IN_DO_FUNC(){}\n} while(0);\n\nLABEL_ANOTHER_LOOP : do {\n    ;\n} while(0);\n\nfunction OUT_FUNC(){}\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif ((x!==2)&&(y!==0)) {\n\t$ERROR('#1: x === 2 and y === 0. Actual:  x ==='+x+' and y ==='+y);\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A3"
   },
   {
    "section": "12.8",
    "description": "Using \"break Identifier\" within labaeled loop",
    "test": "LABEL_OUT : var x=0, y=0;\n(function(){\nLABEL_DO_LOOP : do {\n    LABEL_IN : x++;\n    if(x===10)return;\n    break LABEL_DO_LOOP;\n    LABEL_IN_2 : y++;\n    \n    function IN_DO_FUNC(){}\n} while(0);\n\nLABEL_ANOTHER_LOOP : do {\n    ;\n} while(0);\n\nfunction OUT_FUNC(){}\n})();\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif ((x!==1)&&(y!==0)) {\n\t$ERROR('#1: x === 1 and y === 0. Actual:  x === '+x+' and y ==='+ y  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A4_T1"
   },
   {
    "section": "12.8",
    "description": "Using embedded and labeled loops, breaking to nested loop",
    "test": "LABEL_OUT : var x=0, y=0, xx=0, yy=0;\n(function(){\nLABEL_DO_LOOP : do {\n    LABEL_IN : x++;\n    if(x===10)return;\n    LABEL_NESTED_LOOP : do {\n        LABEL_IN_NESTED : xx++;\n        if(xx===10)return;\n        break LABEL_NESTED_LOOP;\n        LABEL_IN_NESTED_2 : yy++;\n    } while (0);\n    \n    LABEL_IN_2 : y++;\n    \n    function IN_DO_FUNC(){}\n} while(0);\n\nLABEL_ANOTHER_LOOP : do {\n    ;\n} while(0);\n\nfunction OUT_FUNC(){}\n})();\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif ((x!==1)&&(y!==1)&&(xx!==1)&(yy!==0)) {\n\t$ERROR('#1: x === 1 and y === 1 and xx === 1 and yy === 0. Actual:  x==='+x+' and y==='+y+' and xx==='+xx+' and yy==='+yy );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A4_T2"
   },
   {
    "section": "12.8",
    "description": "Using embedded and labeled loops, breaking to outer loop",
    "test": "LABEL_OUT : var x=0, y=0, xx=0, yy=0;\n(function(){\nLABEL_DO_LOOP : do {\n    LABEL_IN : x++;\n    if(x===10)return;\n    LABEL_NESTED_LOOP : do {\n        LABEL_IN_NESTED : xx++;\n        if(xx===10)return;\n        break LABEL_DO_LOOP;\n        LABEL_IN_NESTED_2 : yy++;\n    } while (0);\n    \n    LABEL_IN_2 : y++;\n    \n    function IN_DO_FUNC(){}\n} while(0);\n\nLABEL_ANOTHER_LOOP : do {\n    ;\n} while(0);\n\nfunction OUT_FUNC(){}\n})();\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif ((x!==1)&&(y!==0)&&(xx!==1)&(yy!==0)) {\n\t$ERROR('#1: x === 1 and y === 0 and xx === 1 and yy === 0. Actual:  x==='+x+' and y==='+y+' and xx==='+xx+' and yy==='+yy );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A4_T3"
   },
   {
    "section": "12.8",
    "description": "Checking if breaking another labeled loop fails",
    "negative": "",
    "test": "(function(){\n    LABEL_OUT : var x=0, y=0;\n    LABEL_DO_LOOP : do {\n        LABEL_IN : x++;\n        if(x===10)\n            return;\n        break LABEL_ANOTHER_LOOP;\n        LABEL_IN_2 : y++;\n        function IN_DO_FUNC(){}\n    } while(0);\n    \n    LABEL_ANOTHER_LOOP : do {\n        ;\n    } while(0);\n    \n    function OUT_FUNC(){}\n})();\n",
    "id": "S12.8_A5_T1"
   },
   {
    "section": "12.8",
    "description": "Checking if using function name as an Identifier appears to be invalid",
    "negative": "",
    "test": "(function(){\n    LABEL_OUT : var x=0, y=0;\n    LABEL_DO_LOOP : do {\n        LABEL_IN : x++;\n        if(x===10)\n            return;\n        break IN_DO_FUNC;\n        LABEL_IN_2 : y++;\n        function IN_DO_FUNC(){}\n    } while(0);\n    \n    LABEL_ANOTHER_LOOP : do {\n        ;\n    } while(0);\n    \n    function OUT_FUNC(){}\n})();\n",
    "id": "S12.8_A5_T2"
   },
   {
    "section": "12.8",
    "description": "Checking if using internal loop label as an Identifier appears to be invalid",
    "negative": "",
    "test": "(function(){\n    LABEL_OUT : var x=0, y=0;\n    LABEL_DO_LOOP : do {\n        LABEL_IN : x++;\n        if(x===10)\n            return;\n        break LABEL_IN;\n        LABEL_IN_2 : y++;\n\n        function IN_DO_FUNC(){}\n        \n    } while(0);\n    \n    LABEL_ANOTHER_LOOP : do {\n        ;\n    } while(0);\n    \n    function OUT_FUNC(){}\n    \n})();\n",
    "id": "S12.8_A5_T3"
   },
   {
    "section": "12.8",
    "description": "Checking if using \"break Identifier\" within a function body appears to be invalid",
    "negative": "",
    "test": "var x=0,y=0;\n\nLABEL1 : do {\n    x++;\n    (function(){break LABEL1;})();\n    y++;\n} while(0);\n",
    "id": "S12.8_A6"
   },
   {
    "section": "12.8",
    "description": "Using eval \"eval(\"break LABEL1\")\"",
    "test": "var x=0,y=0;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ntry{\n\tLABEL1 : do {\n        x++;\n        eval(\"break LABEL1\");\n        y++;\n    } while(0);\n\t$ERROR('#1: eval(\"break LABEL1\") does not lead to throwing exception');\n} catch(e){\n\tif(!(e instanceof SyntaxError)){\n\t\t$ERROR(\"1.1: Appearing of break within eval statement inside of IterationStatement yields SyntaxError\");\n\t}\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A7"
   },
   {
    "section": "12.8",
    "description": "Checking if using \"break Identifier\" from within catch Block appears to be invalid",
    "negative": "",
    "test": "var x=0,y=0;\n\ntry{\n\tLABEL1 : do {\n\t\tx++;\n\t\tthrow \"gonna leave it\";\n\t\ty++;\n\t} while(0);\n\t$ERROR('#1: throw \"gonna leave it\" lead to throwing exception');\n} catch(e){\n\tbreak LABEL2;\n\tLABEL2 : do {\n\t\tx++;\n\t\ty++;\n\t} while(0);\n}\n\n",
    "id": "S12.8_A8_T1"
   },
   {
    "section": "12.8",
    "description": "Checking if using \"break Identifier\" from within catch Block appears to be invalid",
    "negative": "",
    "test": "var x=0,y=0;\n\ntry{\n\tLABEL1 : do {\n\t\tx++;\n\t\tthrow \"gonna leave it\";\n\t\ty++;\n\t} while(0);\n\t$ERROR('#1: throw \"gonna leave it\" lead to throwing exception');\n} catch(e){\n\tbreak;\n\tLABEL2 : do {\n\t\tx++;\n\t\ty++;\n\t} while(0);\n}\n\n",
    "id": "S12.8_A8_T2"
   },
   {
    "section": "12.8",
    "description": "Using \"continue Identifier\" within \"catch\" statement",
    "test": "var x=0,y=0;\n\n(function(){\nFOR : for(;;){\n\ttry{\n\t\tx++;\n\t\tif(x===10)return;\n\t\tthrow 1;\n\t} catch(e){\n\t\tbreak FOR;\n\t}\t\n}\n})();\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (x!==1) {\n\t$ERROR('#1: break inside of try-catch nested in loop is allowed');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A9_T1"
   },
   {
    "section": "12.8",
    "description": "Using \"continue Identifier\" within \"catch\" statement",
    "test": "var x=0,y=0;\n\n(function(){\nFOR : for(;;){\n\ttry{\n\t\tx++;\n\t\tif(x===10)return;\n\t\tthrow 1;\n\t} catch(e){\n\t\tbreak ;\n\t}\t\n}\n})();\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (x!==1) {\n\t$ERROR('#1: break inside of try-catch nested in loop is allowed');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.8_A9_T2"
   }
  ]
 }
}
