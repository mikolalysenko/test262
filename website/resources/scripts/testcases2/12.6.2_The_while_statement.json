{
 "testCollection": {
  "name": "12.6.2_The_while_statement",
  "numTests": 26,
  "tests": [
   {
    "section": "12.6.2",
    "description": "Evaluating various Expressions",
    "test": "var __in__do;\n\nwhile ( false ) __in__do=1;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__in__do !== undefined) {\n\t$ERROR('#1: false evaluates to false');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\nwhile ( 0 ) __in__do=2;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__in__do !== undefined) {\n\t$ERROR('#2: 0 evaluates to false');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\nwhile ( \"\" ) __in__do=3;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif (__in__do !== undefined) {\n\t$ERROR('#3: empty string evaluates to false');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\nwhile ( null ) __in__do=4;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#4\nif (__in__do !== undefined) {\n\t$ERROR('#4: null evaluates to false');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\nwhile ( undefined ) __in__do=35;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#5\nif (__in__do !== undefined) {\n\t$ERROR('#5: undefined evaluates to false');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A1"
   },
   {
    "section": "12.6.2, 13.2",
    "description": "Testing FunctionExpression too",
    "test": "var check=0;\nwhile(function f(){}){    \n  if(typeof(f) === \"function\") {\n    check = -1;\n    break; \n  } else {\n    check = 1;\n    break; \n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (check !== 1) {\n\t$ERROR('#1: FunctionExpression inside while construction expression allowed but function not declare');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A10"
   },
   {
    "section": "12.6.2",
    "description": "Checking if execution of \"while({}){}\" passes",
    "test": "while({}){\n    var __in__do=1;\n    if(__in__do)break;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__in__do !== 1) {\n\t$ERROR('#1: \"{}\" in while expression evaluates to true');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A11"
   },
   {
    "section": "12.6.2",
    "description": "Checking if declaring a function within a \"while\" Statement leads to an exception",
    "negative": "",
    "test": "while(0){\n    function __func(){};\n};\n",
    "id": "S12.6.2_A13_T1"
   },
   {
    "section": "12.6.2",
    "description": "Checking if declaring a function within a \"while\" Statement that is in a function call leads to an exception",
    "negative": "",
    "test": "(function(){\n\nwhile(0){\n    function __func(){};\n};\n\n})();\n",
    "id": "S12.6.2_A13_T2"
   },
   {
    "section": "12.6.2",
    "description": "Checking if declaring a function within a \"while\" Statement that is in a function body leads to an exception",
    "negative": "",
    "test": "function(){\n\nwhile(0){\n    function __func(){};\n};\n\n};\n",
    "id": "S12.6.2_A13_T3"
   },
   {
    "section": "12.6.2",
    "description": ": Using \"function __func(){return 0;}\" as an Expression;",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#\nwhile(function __func(){return 0;}){\n   var __reached = 1;\n   break;\n};\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__reached !== 1) {\n\t$ERROR('#2: function expression inside of while expression is allowed');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A14_T1"
   },
   {
    "section": "12.6.2",
    "description": "Using function call as an Expression",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#\nwhile(function __func(){return 1;}()){\n    var __reached = 1;\n   break;\n};\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__reached !== 1) {\n\t$ERROR('#2: function expression inside of while expression is allowed');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A14_T2"
   },
   {
    "section": "12.6.2",
    "description": "Expression is \"{0}\"",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#\nwhile({1}){\n   break ;\n};\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A15"
   },
   {
    "section": "12.6.2",
    "description": "Evaluating Statement with error Expression",
    "test": "try {\n\twhile ((function(){throw 1})()) __in__while = \"reached\"; \n\t$ERROR('#1: \\'while ((function(){throw 1})()) __in__while = \"reached\"\\' lead to throwing exception');\n} catch (e) {\n\tif (e !== 1) {\n\t\t$ERROR('#1: Exception === 1. Actual:  Exception ==='+e);\n\t}\n}\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (typeof __in__while !== \"undefined\") {\n\t$ERROR('#1.1: typeof __in__while === \"undefined\". Actual: typeof __in__while ==='+typeof __in__while);\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n\n",
    "id": "S12.6.2_A2"
   },
   {
    "section": "12.6.2",
    "description": "Using eval",
    "test": "var __in__do;\n\n__evaluated = eval(\"while (false) __in__do=1;\");\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#\nif (__in__do !== undefined) {\n\t$ERROR('#1: __in__do === undefined. Actual:  __in__do ==='+ __in__do  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__evaluated !== undefined) {\n\t$ERROR('#2: __evaluated === undefined. Actual:  __evaluated ==='+ __evaluated  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A3"
   },
   {
    "section": "12.6.2, 12.8",
    "description": "\"break\" within a \"while\" Statement",
    "test": "while(1===1){\n    __in__do__before__break=\"reached\"; \n    break;\n     __in__do__after__break=\"where am i\";\n}\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__in__do__before__break !== \"reached\") {\n\t$ERROR('#1: __in__do__before__break === \"reached\". Actual:  __in__do__before__break ==='+ __in__do__before__break  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (typeof __in__do__after__break !== \"undefined\") {\n\t$ERROR('#2: typeof __in__do__after__break === \"undefined\". Actual:  typeof __in__do__after__break ==='+ typeof __in__do__after__break  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A4_T1"
   },
   {
    "section": "12.6.2",
    "description": "\"break\" and VariableDeclaration within a \"while\" Statement",
    "test": "do_out : while(1===1) {\n    if (__in__do__before__break) break;\n    var __in__do__before__break=\"black\";\n    do_in : while (1) {\n        var __in__do__IN__before__break=\"hole\";\n        break do_in; \n        var __in__do__IN__after__break=\"sun\";\n    } ;\n    var __in__do__after__break=\"won't you come\";\n};\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)) {\n\t$ERROR('#1: Break inside do-while is allowed as its described at standard');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A4_T2"
   },
   {
    "section": "12.6.2, 12.2",
    "description": "\"break\" and VariableDeclaration within a \"while\" Statement",
    "test": "do_out : while(1===1) {\n    if (__in__do__before__break) break;\n    var __in__do__before__break=\"once\";\n    do_in : while (1) {\n        var __in__do__IN__before__break=\"in\";\n        break do_out;\n        var __in__do__IN__after__break=\"the\";\n    } ;\n    var __in__do__after__break=\"lifetime\";\n} ;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)) {\n\t$ERROR('#1: Break inside do-while is allowed as its described at standard');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A4_T3"
   },
   {
    "section": "12.6.2",
    "description": "\"break\" and VariableDeclaration within a \"while\" Statement",
    "test": "do_out : while(1===1) {\n    if(__in__do__before__break)break;\n    var __in__do__before__break=\"can't\";\n    do_in : while (1) {\n        var __in__do__IN__before__break=\"get\";\n        break;\n        var __in__do__IN__after__break=\"no\";\n    } ;\n    var __in__do__after__break=\"Satisfaction\";\n} ;\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (!(__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&__in__do__after__break)) {\n\t$ERROR('#1: Break inside do-while is allowed as its described at standard');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.6.2_A4_T4"
   },
   {
    "section": "12.6.2",
    "description": "Using labeled \"break\" in order to continue a \"while\" loop",
    "test": "//CHECK#1\nvar i=0;\nwoohoo:{\n  while(true){\n    i++;\n    if ( ! (i < 10) ) {\n      break woohoo;\n      $ERROR('#1.1: \"break woohoo\" must break loop');\n    }\n  }\n  if (i!==10) $ERROR('#1.2: i===10. Actual:  i==='+ i );\n}\n",
    "id": "S12.6.2_A4_T5"
   },
   {
    "section": "12.6.2",
    "description": "Using eval",
    "test": "__evaluated = eval(\"while(1) {__in__do__before__break=1; break; __in__do__after__break=2;}\");\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__in__do__before__break !== 1) {\n\t$ERROR('#1: __in__do__before__break === 1. Actual:  __in__do__before__break ==='+ __in__do__before__break  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (typeof __in__do__after__break !== \"undefined\") {\n\t$ERROR('#2: typeof __in__do__after__break === \"undefined\". Actual:  typeof __in__do__after__break ==='+ typeof __in__do__after__break  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif (__evaluated !== 1) {\n\t$ERROR('#3: __evaluated === 1. Actual:  __evaluated ==='+ __evaluated  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A5"
   },
   {
    "section": "12.6.2",
    "description": "Checking if execution of \"while 1 break\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nwhile 1 break;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A6_T1"
   },
   {
    "section": "12.6.2",
    "description": "Checking if execution of \"while 0 break\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nwhile 0 break;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A6_T2"
   },
   {
    "section": "12.6.2",
    "description": "Checking if execution of \"while true break\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nwhile true break;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A6_T3"
   },
   {
    "section": "12.6.2",
    "description": "Checking if execution of \"while false break\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nwhile false break;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A6_T4"
   },
   {
    "section": "12.6.2",
    "description": "Checking if execution of \"while '' break\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nwhile '' break;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A6_T5"
   },
   {
    "section": "12.6.2",
    "description": "Checking if execution of \"while 'hood' break\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nwhile 'hood' break;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A6_T6"
   },
   {
    "section": "12.6.2",
    "description": "using eval",
    "test": "var __condition=0\n\n__evaluated = eval(\"while (__condition<5) eval(\\\"__condition++\\\");\");\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__condition !== 5) {\n\t$ERROR('#1: The \"while\" statement is evaluated as described in the Standard');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__evaluated !== 4) {\n\t$ERROR('#2: The \"while\" statement returns (normal, V, empty)');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.6.2_A7"
   },
   {
    "section": "12.6.2",
    "description": "using eval",
    "test": "var __condition = 0, __odds=0;\n\n__evaluated = eval(\"while(__condition < 10) { __condition++; if (((''+__condition/2).split('.')).length>1) continue; __odds++;}\");\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif (__odds !== 5) {\n\t$ERROR('#1: __odds === 5. Actual:  __odds ==='+ __odds  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif (__evaluated !== 4) {\n\t$ERROR('#2: __evaluated === 4. Actual:  __evaluated ==='+ __evaluated  );\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.6.2_A8"
   },
   {
    "section": "12.6.2",
    "description": "Throwing system exception inside \"while\" loop",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ntry {\n\twhile(x!=1) {\n\t    var x = 1; \n\t    abaracadabara;\n\t};\n\t$ERROR('#1: \"abbracadabra\" lead to throwing exception');\n\n} catch (e) {}\n\nif (x !== 1) {\n\t$ERROR('#1.1: while statement evaluates as is, without syntax checks');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.6.2_A9"
   }
  ]
 }
}
