{
 "testCollection": {
  "name": "15.4.4.4_Array_prototype_concat",
  "numTests": 14,
  "tests": [
   {
    "section": "15.4.4.4",
    "description": "Checking this algorithm, items are Array object",
    "test": "var x = new Array();\nvar y = new Array(0,1);\nvar z = new Array(2,3,4);\nvar arr = x.concat(y,z);\n\n//CHECK#0\narr.getClass = Object.prototype.toString;\nif (arr.getClass() !== \"[object \" + \"Array\" + \"]\") {\n  $ERROR('#0: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr is Array object. Actual: ' + (arr.getClass()));\n}\n\n//CHECK#1\nif (arr[0] !== 0) {\n  $ERROR('#1: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[0] === 0. Actual: ' + (arr[0]));\n}\n\n//CHECK#2\nif (arr[1] !== 1) {\n  $ERROR('#2: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[1] === 1. Actual: ' + (arr[1]));\n}\n\n//CHECK#3\nif (arr[2] !== 2) {\n  $ERROR('#3: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[2] === 2. Actual: ' + (arr[2]));\n}\n\n//CHECK#4\nif (arr[3] !== 3) {\n  $ERROR('#4: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[3] === 3. Actual: ' + (arr[3]));\n}\n\n//CHECK#5\nif (arr[4] !== 4) {\n  $ERROR('#5: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[4] === 4. Actual: ' + (arr[4]));\n}\n\n//CHECK#6\nif (arr.length !== 5) {\n  $ERROR('#6: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr.length === 5. Actual: ' + (arr.length));\n}                \n",
    "id": "S15.4.4.4_A1_T1"
   },
   {
    "section": "15.4.4.4",
    "description": "Checking this algorithm, items are objects and primitives",
    "test": "var x = [0];\nvar y = new Object();\nvar z = new Array(1,2);\nvar arr = x.concat(y,z, -1, true, \"NaN\");\n\n//CHECK#0\narr.getClass = Object.prototype.toString;\nif (arr.getClass() !== \"[object \" + \"Array\" + \"]\") {\n  $ERROR('#0: var x = [0]; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr is Array object. Actual: ' + (arr.getClass()));\n}\n\n//CHECK#1\nif (arr[0] !== 0) {\n  $ERROR('#1: var x = [0]; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[0] === 0. Actual: ' + (arr[0]));\n}\n\n//CHECK#2\nif (arr[1] !== y) {\n  $ERROR('#2: var x = [0]; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[1] === y. Actual: ' + (arr[1]));\n}\n\n//CHECK#3\nif (arr[2] !== 1) {\n  $ERROR('#3: var x = [0]; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[2] === 1. Actual: ' + (arr[2]));\n}\n\n//CHECK#4\nif (arr[3] !== 2) {\n  $ERROR('#4: var x = [0]; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[3] === 2. Actual: ' + (arr[3]));\n}\n\n//CHECK#5\nif (arr[4] !== -1) {\n  $ERROR('#5: var x = [0]; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[4] === -1. Actual: ' + (arr[4]));\n}\n\n//CHECK#6\nif (arr[5] !== true) {\n  $ERROR('#6: var x = [0]; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[5] === true. Actual: ' + (arr[5]));\n}\n\n//CHECK#7\nif (arr[6] !== \"NaN\") {\n  $ERROR('#7: var x = [0]; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[6] === \"NaN\". Actual: ' + (arr[6]));\n}\n\n//CHECK#8\nif (arr.length !== 7) {\n  $ERROR('#8: var x = [0]; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr.length === 7. Actual: ' + (arr.length));\n}                \n",
    "id": "S15.4.4.4_A1_T2"
   },
   {
    "section": "15.4.4.4",
    "description": "Checking this algorithm with no items",
    "test": "var x = [0,1];\nvar arr = x.concat();\n\n//CHECK#0\narr.getClass = Object.prototype.toString;\nif (arr.getClass() !== \"[object \" + \"Array\" + \"]\") {\n  $ERROR('#0: var x = [0,1]; var arr = x.concat(); arr is Array object. Actual: ' + (arr.getClass()));\n}\n\n//CHECK#1\nif (arr[0] !== 0) {\n  $ERROR('#1: var x = [0,1]; var arr = x.concat(); arr[0] === 0. Actual: ' + (arr[0]));\n}\n\n//CHECK#2\nif (arr[1] !== 1) {\n  $ERROR('#2: var x = [0,1]; var arr = x.concat(); arr[1] === 1. Actual: ' + (arr[1]));\n}\n\n//CHECK#3\nif (arr.length !== 2) {\n  $ERROR('#3: var x = [0,1]; var arr = x.concat(); arr.length === 2. Actual: ' + (arr.length));\n}  \n\n//CHECK#4\nif (arr === x) {\n  $ERROR('#4: var x = [0,1]; var arr = x.concat(); arr !== x');\n}              \n",
    "id": "S15.4.4.4_A1_T3"
   },
   {
    "section": "15.4.4.4",
    "description": "Checking this algorithm, items are [], [,]",
    "test": "var x = [,1];\nvar arr = x.concat([], [,]);\n\n//CHECK#0\narr.getClass = Object.prototype.toString;\nif (arr.getClass() !== \"[object \" + \"Array\" + \"]\") {\n  $ERROR('#0: var x = [,1]; var arr = x.concat([], [,]); arr is Array object. Actual: ' + (arr.getClass()));\n}\n\n//CHECK#1\nif (arr[0] !== undefined) {\n  $ERROR('#1: var x = [,1]; var arr = x.concat([], [,]); arr[0] === undefined. Actual: ' + (arr[0]));\n}\n\n//CHECK#2\nif (arr[1] !== 1) {\n  $ERROR('#2: var x = [,1]; var arr = x.concat([], [,]); arr[1] === 1. Actual: ' + (arr[1]));\n}\n\n//CHECK#2\nif (arr[2] !== undefined) {\n  $ERROR('#2: var x = [,1]; var arr = x.concat([], [,]); arr[2] === undefined. Actual: ' + (arr[2]));\n}\n\n//CHECK#4\nif (arr.length !== 3) {\n  $ERROR('#4: var x = [,1]; var arr = x.concat([], [,]); arr.length === 3. Actual: ' + (arr.length));\n}             \n",
    "id": "S15.4.4.4_A1_T4"
   },
   {
    "section": "15.4.4.4",
    "description": "Checking this for Object object, items are objects and primitives",
    "test": "var x = {};\nx.concat = Array.prototype.concat;\nvar y = new Object();\nvar z = new Array(1,2);\nvar arr = x.concat(y,z, -1, true, \"NaN\");\n\n//CHECK#0\narr.getClass = Object.prototype.toString;\nif (arr.getClass() !== \"[object \" + \"Array\" + \"]\") {\n  $ERROR('#0: var x = {}; x.concat = Array.prototype.concat; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr is Array object. Actual: ' + (arr.getClass()));\n}\n\n//CHECK#1\nif (arr[0] !== x) {\n  $ERROR('#1: var x = {}; x.concat = Array.prototype.concat; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[0] === x. Actual: ' + (arr[0]));\n}\n\n//CHECK#2\nif (arr[1] !== y) {\n  $ERROR('#2: var x = {}; x.concat = Array.prototype.concat; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[1] === y. Actual: ' + (arr[1]));\n}\n\n//CHECK#3\nif (arr[2] !== 1) {\n  $ERROR('#3: var x = {}; x.concat = Array.prototype.concat; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[2] === 1. Actual: ' + (arr[2]));\n}\n\n//CHECK#4\nif (arr[3] !== 2) {\n  $ERROR('#4: var x = {}; x.concat = Array.prototype.concat; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[3] === 2. Actual: ' + (arr[3]));\n}\n\n//CHECK#5\nif (arr[4] !== -1) {\n  $ERROR('#5: var x = {}; x.concat = Array.prototype.concat; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[4] === -1. Actual: ' + (arr[4]));\n}\n\n//CHECK#6\nif (arr[5] !== true) {\n  $ERROR('#6: var x = {}; x.concat = Array.prototype.concat; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[5] === true. Actual: ' + (arr[5]));\n}\n\n//CHECK#7\nif (arr[6] !== \"NaN\") {\n  $ERROR('#7: var x = {}; x.concat = Array.prototype.concat; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr[6] === \"NaN\". Actual: ' + (arr[6]));\n}\n\n//CHECK#8\nif (arr.length !== 7) {\n  $ERROR('#8: var x = {}; x.concat = Array.prototype.concat; var y = new Object(); var z = new Array(1,2); var arr = x.concat(y,z, -1, true, \"NaN\"); arr.length === 7. Actual: ' + (arr.length));\n}                \n",
    "id": "S15.4.4.4_A2_T1"
   },
   {
    "section": "15.4.4.4",
    "description": "Checking this for Object object with no items",
    "test": "var x = {};\nx.concat = Array.prototype.concat;\nvar arr = x.concat();\n\n//CHECK#0\narr.getClass = Object.prototype.toString;\nif (arr.getClass() !== \"[object \" + \"Array\" + \"]\") {\n  $ERROR('#0: var x = {}; x.concat = Array.prototype.concat; var arr = x.concat() arr is Array object. Actual: ' + (arr.getClass()));\n}\n\n//CHECK#1\nif (arr[0] !== x) {\n  $ERROR('#1: var x = {}; x.concat = Array.prototype.concat; var arr = x.concat(); arr[0] === x. Actual: ' + (arr[0]));\n}\n\n//CHECK#2\nif (arr.length !== 1) {\n  $ERROR('#2: var x = {}; x.concat = Array.prototype.concat; var arr = x.concat(); arr.length === 1. Actual: ' + (arr.length));\n}                \n",
    "id": "S15.4.4.4_A2_T2"
   },
   {
    "section": "15.4.4.4, 8.6.2.1, 15.2.4.5",
    "description": "[[Prototype]] of Array instance is Array.prototype, [[Prototype] of Array.prototype is Object.prototype",
    "test": "Array.prototype[1] = 1;\nvar x = [0];\nx.length = 2;\nvar arr = x.concat();\n\n//CHECK#1\nif (arr[0] !== 0) {  \n  $ERROR('#1: Array.prototype[1] = 1; x = [0]; x.length = 2; var arr = x.concat(); arr[0] === 0. Actual: ' + (arr[0]));    \n}\n\n//CHECK#2\nif (arr[1] !== 1) {  \n  $ERROR('#2: Array.prototype[1] = 1; x = [0]; x.length = 2; var arr = x.concat(); arr[1] === 1. Actual: ' + (arr[1]));    \n}\n\n//CHECK#3\nif (arr.hasOwnProperty('1') !== true) {  \n  $ERROR('#3: Array.prototype[1] = 1; x = [0]; x.length = 2; var arr = x.concat(); arr.hasOwnProperty(\\'1\\') === true. Actual: ' + (arr.hasOwnProperty('1')));    \n}\n\nObject.prototype[1] = 1;\nObject.prototype.length = 2;\nObject.prototype.concat = Array.prototype.concat;\nx = {0:0};\nvar arr = x.concat();\n\n//CHECK#4\nif (arr[0] !== x) {  \n  $ERROR('#4: Object.prototype[1] = 1; Object.prototype.length = 2; Object.prototype.concat = Array.prototype.concat; x = {0:0}; var arr = x.concat(); arr[0] === x. Actual: ' + (arr[0]));    \n}\n\n//CHECK#5\nif (arr[1] !== 1) {  \n  $ERROR('#5: Object.prototype[1] = 1; Object.prototype.length = 2; Object.prototype.concat = Array.prototype.concat; x = {0:0}; var arr = x.concat(); arr[1] === 1. Actual: ' + (arr[1]));    \n}\n\n//CHECK#6\nif (arr.hasOwnProperty('1') !== false) {  \n  $ERROR('#6: Object.prototype[1] = 1; Object.prototype.length = 2; Object.prototype.concat = Array.prototype.concat; x = {0:0}; var arr = x.concat(); arr.hasOwnProperty(\\'1\\') === false. Actual: ' + (arr.hasOwnProperty('1')));    \n}\n",
    "id": "S15.4.4.4_A3_T1"
   },
   {
    "section": "15.4.4.4, 15.2.4.7, 12.6.4",
    "description": "Checking use propertyIsEnumerable, for-in",
    "test": "//CHECK#1\nif (Array.prototype.concat.propertyIsEnumerable('length') !== false) {\n  $ERROR('#1: Array.prototype.concat.propertyIsEnumerable(\\'length\\') === false. Actual: ' + (Array.prototype.concat.propertyIsEnumerable('length')));\n}\n\n//CHECK#2\nvar result = true;\nfor (var p in Array.concat){\n  if (p === \"length\") {\n    result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#2: result = true; for (p in Array.concat) { if (p === \"length\") result = false; }  result === true;');\n}\n\n",
    "id": "S15.4.4.4_A4.1"
   },
   {
    "section": "15.4.4.4, 15.2.4.5, 11.4.1",
    "description": "Checking use hasOwnProperty, delete",
    "strict_mode_negative": "",
    "test": "//CHECK#1\nif (Array.prototype.concat.hasOwnProperty('length') !== true) {\n  $FAIL('#1: Array.prototype.concat.hasOwnProperty(\\'length\\') === true. Actual: ' + (Array.prototype.concat.hasOwnProperty('length')));\n}\n\ndelete Array.prototype.concat.length;\n\n//CHECK#2\nif (Array.prototype.concat.hasOwnProperty('length') !== true) {\n  $ERROR('#2: delete Array.prototype.concat.length; Array.prototype.concat.hasOwnProperty(\\'length\\') === true. Actual: ' + (Array.prototype.concat.hasOwnProperty('length')));\n}\n\n//CHECK#3\nif (Array.prototype.concat.length === undefined) {\n  $ERROR('#3: delete Array.prototype.concat.length; Array.prototype.concat.length !== undefined');\n}\n\n\n",
    "id": "S15.4.4.4_A4.2",
    "strict_only": ""
   },
   {
    "section": "15.4.4.4",
    "description": "Checking if varying the length property fails",
    "strict_mode_negative": "",
    "test": "//CHECK#1\nvar x = Array.prototype.concat.length;\nArray.prototype.concat.length = Infinity;\nif (Array.prototype.concat.length !== x) {\n  $ERROR('#1: x = Array.prototype.concat.length; Array.prototype.concat.length = Infinity; Array.prototype.concat.length === x. Actual: ' + (Array.prototype.concat.length));\n}\n\n",
    "id": "S15.4.4.4_A4.3",
    "strict_only": ""
   },
   {
    "section": "15.4.4.4",
    "description": "concat.length === 1",
    "test": "//CHECK#1\nif (Array.prototype.concat.length !== 1) {\n  $ERROR('#1: Array.prototype.concat.length === 1. Actual: ' + (Array.prototype.concat.length));\n}\n\n",
    "id": "S15.4.4.4_A4.4"
   },
   {
    "section": "15.4.4.4, 15.2.4.7, 12.6.4",
    "description": "Checking use propertyIsEnumerable, for-in",
    "test": "//CHECK#1\nif (Array.propertyIsEnumerable('concat') !== false) {\n  $ERROR('#1: Array.propertyIsEnumerable(\\'concat\\') === false. Actual: ' + (Array.propertyIsEnumerable('concat')));\n}\n\n//CHECK#2\nvar result = true;\nfor (var p in Array){\n  if (p === \"concat\") {\n    result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#2: result = true; for (p in Array) { if (p === \"concat\") result = false; }  result === true;');\n}\n\n",
    "id": "S15.4.4.4_A4.5"
   },
   {
    "section": "15.4.4.4",
    "description": "Checking Array.prototype.concat.prototype",
    "test": "//CHECK#1\nif (Array.prototype.concat.prototype !== undefined) {\n  $ERROR('#1: Array.prototype.concat.prototype === undefined. Actual: ' + (Array.prototype.concat.prototype));\n}\n",
    "id": "S15.4.4.4_A4.6"
   },
   {
    "section": "15.4.4.4, 11.2.2",
    "description": "If property does not implement the internal [[Construct]] method, throw a TypeError exception",
    "test": "//CHECK#1\n\ntry {\n  new Array.prototype.concat();\n  $ERROR('#1.1: new Array.prototype.concat() throw TypeError. Actual: ' + (new Array.prototype.concat()));\n} catch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#1.2: new Array.prototype.concat() throw TypeError. Actual: ' + (e));\n  }\n}\n",
    "id": "S15.4.4.4_A4.7"
   }
  ]
 }
}
