{
 "testCollection": {
  "name": "15.8.2.2_acos",
  "numTests": 5,
  "tests": [
   {
    "section": "15.8.2.2",
    "description": "Checking if Math.acos(NaN) is NaN",
    "test": "// CHECK#1\nvar x = NaN;\nif (!isNaN(Math.acos(x)))\n{\n\t$ERROR(\"#1: 'var x=NaN; isNaN(Math.acos(x)) === false'\");\n}\n",
    "id": "S15.8.2.2_A1"
   },
   {
    "section": "15.8.2.2",
    "description": "Checking if Math.acos(x) is NaN, where x is greater than 1",
    "test": "// CHECK#1\nvar x = 1.000000000000001;\nif (!isNaN(Math.acos(x)))\n{\n\t$ERROR(\"#1: 'var x = 1.000000000000001; isNaN(Math.acos(x)) === false'\");\n}\n\n// CHECK#2\nx = 2;\nif (!isNaN(Math.acos(x)))\n{\n\t$ERROR(\"#2: 'x = 2; isNaN(Math.acos(x)) === false'\");\n}\n\n// CHECK#3\nx = +Infinity;\nif (!isNaN(Math.acos(x)))\n{\n\t$ERROR(\"#3: 'x = +Infinity; isNaN(Math.acos(x)) === false'\");\n}\n",
    "id": "S15.8.2.2_A2"
   },
   {
    "section": "15.8.2.2",
    "description": "Checking if Math.acos(x) is NaN, where x is less than -1",
    "test": "// CHECK#1\nvar x = -1.000000000000001;\nif (!isNaN(Math.acos(x)))\n{\n\t$ERROR(\"#1: 'var x = -1.000000000000001; isNaN(Math.acos(x)) === false'\");\n}\n\n// CHECK#2\nx = -2;\nif (!isNaN(Math.acos(x)))\n{\n\t$ERROR(\"#2: 'x = -2; isNaN(Math.acos(x)) === false'\");\n}\n\n// CHECK#3\nx = -Infinity;\nif (!isNaN(Math.acos(x)))\n{\n\t$ERROR(\"#3: 'x = -Infinity; isNaN(Math.acos(x)) === false'\");\n}\n",
    "id": "S15.8.2.2_A3"
   },
   {
    "section": "15.8.2.2",
    "description": "Checking if Math.acos(1) equals to +0",
    "test": "// CHECK#1\nvar x = 1;\nif (Math.acos(x) !== +0)\n{\n\t$ERROR(\"#1: 'var x = 1; Math.acos(x) !== +0'\");\n}\n",
    "id": "S15.8.2.2_A4"
   },
   {
    "section": "15.8.2.2",
    "description": ": Checking if Math.acos is approximately equals to its mathematical values on the set of 64 argument values; all the sample values is calculated with LibC;",
    "test": "$INCLUDE(\"math_precision.js\");\n$INCLUDE(\"math_isequal.js\");\n\n// CHECK#1\nvnum = 64;\nvar x = new Array();\nx[0] = -1.00000000000000000000;\nx[1] = -0.96825396825396826000;\nx[2] = -0.93650793650793651000;\nx[3] = -0.90476190476190477000;\nx[4] = -0.87301587301587302000;\nx[5] = -0.84126984126984128000;\nx[6] = -0.80952380952380953000;\nx[7] = -0.77777777777777779000;\nx[8] = -0.74603174603174605000;\nx[9] = -0.71428571428571430000;\nx[10] = -0.68253968253968256000;\nx[11] = -0.65079365079365081000;\nx[12] = -0.61904761904761907000;\nx[13] = -0.58730158730158732000;\nx[14] = -0.55555555555555558000;\nx[15] = -0.52380952380952384000;\nx[16] = -0.49206349206349209000;\nx[17] = -0.46031746031746035000;\nx[18] = -0.42857142857142860000;\nx[19] = -0.39682539682539686000;\nx[20] = -0.36507936507936511000;\nx[21] = -0.33333333333333337000;\nx[22] = -0.30158730158730163000;\nx[23] = -0.26984126984126988000;\nx[24] = -0.23809523809523814000;\nx[25] = -0.20634920634920639000;\nx[26] = -0.17460317460317465000;\nx[27] = -0.14285714285714290000;\nx[28] = -0.11111111111111116000;\nx[29] = -0.07936507936507941600;\nx[30] = -0.04761904761904767200;\nx[31] = -0.01587301587301592800;\nx[32] = 0.01587301587301581700;\nx[33] = 0.04761904761904767200;\nx[34] = 0.07936507936507930500;\nx[35] = 0.11111111111111116000;\nx[36] = 0.14285714285714279000;\nx[37] = 0.17460317460317465000;\nx[38] = 0.20634920634920628000;\nx[39] = 0.23809523809523814000;\nx[40] = 0.26984126984126977000;\nx[41] = 0.30158730158730163000;\nx[42] = 0.33333333333333326000;\nx[43] = 0.36507936507936511000;\nx[44] = 0.39682539682539675000;\nx[45] = 0.42857142857142860000;\nx[46] = 0.46031746031746024000;\nx[47] = 0.49206349206349209000;\nx[48] = 0.52380952380952372000;\nx[49] = 0.55555555555555558000;\nx[50] = 0.58730158730158721000;\nx[51] = 0.61904761904761907000;\nx[52] = 0.65079365079365070000;\nx[53] = 0.68253968253968256000;\nx[54] = 0.71428571428571419000;\nx[55] = 0.74603174603174605000;\nx[56] = 0.77777777777777768000;\nx[57] = 0.80952380952380953000;\nx[58] = 0.84126984126984117000;\nx[59] = 0.87301587301587302000;\nx[60] = 0.90476190476190466000;\nx[61] = 0.93650793650793651000;\nx[62] = 0.96825396825396814000;\nx[63] = 1.00000000000000000000;\n\n\n\n\nvar y = new Array();\ny[0] = 3.14159265358979310000;\ny[1] = 2.88894492730522990000;\ny[2] = 2.78333143507717650000;\ny[3] = 2.70161669879887430000;\ny[4] = 2.63214880477790030000;\ny[5] = 2.57042415502425570000;\ny[6] = 2.51413688066660250000;\ny[7] = 2.46191883468154950000;\ny[8] = 2.41287920284638750000;\ny[9] = 2.36639928027943200000;\ny[10] = 2.32202832592153240000;\ny[11] = 2.27942559835728040000;\ny[12] = 2.23832577143072960000;\ny[13] = 2.19851714445280910000;\ny[14] = 2.15982729701117070000;\ny[15] = 2.12211329592677920000;\ny[16] = 2.08525480235608330000;\ny[17] = 2.04914909144415440000;\ny[18] = 2.01370737086853560000;\ny[19] = 1.97885200409617520000;\ny[20] = 1.94451437773781040000;\ny[21] = 1.91063323624901860000;\ny[22] = 1.87715336135181590000;\ny[23] = 1.84402450933553450000;\ny[24] = 1.81120054356415610000;\ny[25] = 1.77863871614824330000;\ny[26] = 1.74629906437061930000;\ny[27] = 1.71414389570026190000;\ny[28] = 1.68213734113586070000;\ny[29] = 1.65024496088003380000;\ny[30] = 1.61843338941929970000;\ny[31] = 1.58667000928485250000;\ny[32] = 1.55492264430494110000;\ny[33] = 1.52315926417049340000;\ny[34] = 1.49134769270975950000;\ny[35] = 1.45945531245393270000;\ny[36] = 1.42744875788953140000;\ny[37] = 1.39529358921917380000;\ny[38] = 1.36295393744155000000;\ny[39] = 1.33039211002563730000;\ny[40] = 1.29756814425425880000;\ny[41] = 1.26443929223797750000;\ny[42] = 1.23095941734077470000;\ny[43] = 1.19707827585198270000;\ny[44] = 1.16274064949361830000;\ny[45] = 1.12788528272125750000;\ny[46] = 1.09244356214563900000;\ny[47] = 1.05633785123370980000;\ny[48] = 1.01947935766301390000;\ny[49] = 0.98176535657862274000;\ny[50] = 0.94307550913698401000;\ny[51] = 0.90326688215906359000;\ny[52] = 0.86216705523251280000;\ny[53] = 0.81956432766826082000;\ny[54] = 0.77519337331036142000;\ny[55] = 0.72871345074340554000;\ny[56] = 0.67967381890824408000;\ny[57] = 0.62745577292319077000;\ny[58] = 0.57116849856553775000;\ny[59] = 0.50944384881189297000;\ny[60] = 0.43997595479091917000;\ny[61] = 0.35826121851261677000;\ny[62] = 0.25264772628456394000;\ny[63] = 0.00000000000000000000;\n\n\n\n\nvar val;\nfor (i = 0; i < vnum; i++)\n{\n\tval = Math.acos(x[i]);\n\tif (!isEqual(val, y[i]))\n\t{\n\t\t$ERROR(\"\\nx = \" + x[i] + \"\\nlibc.acos(x) = \" + y[i] + \"\\nMath.acos(x) = \" + Math.acos(x[i]) + \"\\nMath.abs(libc.acos(x) - Math.acos(x)) > \" + prec + \"\\n\\n\"); \n\t}\n}\n",
    "id": "S15.8.2.2_A5"
   }
  ]
 }
}
