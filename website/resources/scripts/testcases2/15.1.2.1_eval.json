{
 "testCollection": {
  "name": "15.1.2.1_eval",
  "numTests": 26,
  "tests": [
   {
    "section": "15.1.2.1",
    "description": "Checking all primitive",
    "test": "//CHECK#1\nvar x = 1;\nif (eval(x) !== x) {\n  $ERROR('#1: x = 1; eval(x) === x. Actual: ' + (eval(x)));\n}\n\n//CHECK#2\nif (eval(1) !== 1) {\n  $ERROR('#2: eval(1) === 1. Actual: ' + (eval(1)));\n}\n\n//CHECK#3\nif (eval(true) !== true) {\n  $ERROR('#3: eval(true) === true. Actual: ' + (eval(true)));\n}\n\n//CHECK#4\nif (eval(null) !== null) {\n  $ERROR('#4: eval(null) === null. Actual: ' + (eval(null)));\n}\n\n//CHECK#5\nif (eval(undefined) !== undefined) {\n  $ERROR('#5: eval(undefined) === undefined. Actual: ' + (eval(undefined)));\n}        \n",
    "id": "S15.1.2.1_A1.1_T1"
   },
   {
    "section": "15.1.2.1",
    "description": "Checking all object",
    "test": "//CHECK#1\nvar x = {};\nif (eval(x) !== x) {\n  $ERROR('#1: x = {}; eval(x) === x. Actual: ' + (eval(x)));\n}\n\n//CHECK#2\nx = new Number(1);\nif (eval(x) !== x) {\n  $ERROR('#2: x = new Number(1); eval(x) === x. Actual: ' + (eval(x)));\n}\n\n//CHECK#3\nx = new Boolean(true);\nif (eval(x) !== x) {\n  $ERROR('#3: x = new Boolean(true); eval(x) === x. Actual: ' + (eval(x)));\n}\n\n//CHECK#4\nx = new String(\"1+1\");\nif (eval(x) !== x) {\n  $ERROR('#4: x = new String(\"1\"); eval(x) === x. Actual: ' + (eval(x)));\n}    \n",
    "id": "S15.1.2.1_A1.1_T2"
   },
   {
    "section": "15.1.2.1",
    "description": "eval(\"x = 1\", \"x = 2\"), x equal 1, not 2",
    "test": "//CHECK#1\nvar x;\neval(\"x = 1\", \"x = 2\");\nif (x !== 1) {\n  $ERROR('#1: eval(\"x = 1\", \"x = 2\"); x === 1. Actual: ' + (x));\n}\n",
    "id": "S15.1.2.1_A1.2_T1"
   },
   {
    "section": "15.1.2.1, 16",
    "description": ": Checking if execution of \"eval(\"x = 1; x\\u000A++\"), catch SyntaxError\" passes;",
    "test": "//CHECK#1\nvar x;\ntry {\n  eval(\"x = 1; x\\u000A++\");\n  $ERROR('#1.1: eval(\"x = 1; x\\\\u000A++\") must throw a SyntaxError. Actual: ' + (eval(\"x = 1; x\\u000A++\")));\n} catch (e) {\n  if ((e instanceof SyntaxError) !== true) {\n    $ERROR('#1.2: eval(\"x = 1; x\\\\u000A++\") must throw a SyntaxError. Actual: ' + (e));\n  }  \n}   \n",
    "id": "S15.1.2.1_A2_T1"
   },
   {
    "section": "15.1.2.1, 16",
    "description": ": Checking if execution of \"eval(\"x = 1; x\\u000A++\")\" fails;",
    "negative": "",
    "test": "//CHECK#1\nvar x;\neval(\"x = 1; x\\u000A++\"); \n",
    "id": "S15.1.2.1_A2_T2"
   },
   {
    "section": "15.1.2.1, 12.4",
    "description": "Expression statement. Eval return primitive value",
    "test": "var x;\n//CHECK#1\nif (eval(\"x = 1\") !== 1) {\n  $ERROR('#1: eval(\"x = 1\") === 1. Actual: ' + (eval(\"x = 1\")));\n}\n\n//CHECK#2\nif (eval(\"1\") !== 1) {\n  $ERROR('#2: eval(\"1\") === 1. Actual: ' + (eval(\"1\")));\n}\n\n//CHECK#3\nif (eval(\"'1'\") !== '1') {\n  $ERROR('#3: eval(\"\\'1\\'\") === \\'1\\'. Actual: ' + (eval(\"'1'\")));\n}\n\n//CHECK#4\nx = 1;\nif (eval(\"++x\") !== 2) {\n  $ERROR('#4: x = 1; eval(\"++x\") === 2. Actual: ' + (x));\n}        \n",
    "id": "S15.1.2.1_A3.1_T1"
   },
   {
    "section": "15.1.2.1, 12.4",
    "description": "Expression statement. Eval return object value",
    "test": "//CHECK#1\nvar x = {};\nvar y;\nif (eval(\"y = x\") !== x) {\n  $ERROR('#1: var x = {}; eval(\"y = x\") === x. Actual: ' + (eval(\"y = x\")));\n}    \n\n\n//CHECK#2\nif (eval(\"x\") !== x) {\n  $ERROR('#2: var x = {}; eval(\"x\") === x. Actual: ' + (eval(\"x\")));\n}    \n\n",
    "id": "S15.1.2.1_A3.1_T2"
   },
   {
    "section": "15.1.2.1, 12.1",
    "description": "Block statement",
    "test": "//CHECK#1\nif (eval(\"{}\") !== undefined) {\n  $ERROR('#1: eval(\"{}\") === undefined. Actual: ' + (eval(\"{}\")));\n}    \n",
    "id": "S15.1.2.1_A3.2_T1"
   },
   {
    "section": "15.1.2.1, 12.2",
    "description": "Var statement",
    "test": "//CHECK#1\nif (eval(\"var x = 1\") !== undefined) {\n  $ERROR('#1: eval(\"var x = 1\") === undefined. Actual: ' + (eval(\"var x = 1\")));\n}    \n",
    "id": "S15.1.2.1_A3.2_T2"
   },
   {
    "section": "15.1.2.1, 12.3",
    "description": "Empty statement",
    "test": "//CHECK#1\nif (eval(\";\") !== undefined) {\n  $ERROR('#1: eval(\";\") === undefined. Actual: ' + (eval(\";\")));\n}    \n",
    "id": "S15.1.2.1_A3.2_T3"
   },
   {
    "section": "15.1.2.1, 12.5",
    "description": "If statement",
    "test": "//CHECK#1\nif (eval(\"if (false) ;\") !== undefined) {\n  $ERROR('#1: eval(\"if (false) ;\") === undefined. Actual: ' + eval(\"if (false) ;\"));\n}    \n",
    "id": "S15.1.2.1_A3.2_T4"
   },
   {
    "section": "15.1.2.1, 12.11",
    "description": "Switch statement",
    "test": "//CHECK#1\nif (eval(\"switch(1){}\") !== undefined) {\n  $ERROR('#1: eval(\"switch(1){}\") === undefined. Actual: ' + (eval(\"switch(1){}\")));\n}    \n",
    "id": "S15.1.2.1_A3.2_T5"
   },
   {
    "section": "15.1.2.1, 12.6.1",
    "description": "do-while statement",
    "test": "//CHECK#1\nif (eval(\"do ; while(false)\") !== undefined) {\n  $ERROR('#1: eval(\"do ; while(false)\") === undefined. Actual: ' + (eval(\"do ; while(false)\")));\n}    \n",
    "id": "S15.1.2.1_A3.2_T6"
   },
   {
    "section": "15.1.2.1, 12.6.2",
    "description": "do-while statement",
    "test": "//CHECK#1\nif (eval(\"while(false);\") !== undefined) {\n  $ERROR('#1: eval(\"while(false);\") === undefined. Actual: ' + (eval(\"while(false);\")));\n}    \n",
    "id": "S15.1.2.1_A3.2_T7"
   },
   {
    "section": "15.1.2.1, 12.6.3",
    "description": "for statement",
    "test": "//CHECK#1\nif (eval(\"for(false;false;false);\") !== undefined) {\n  $ERROR('#1: eval(\"for(false;false;false);\") === undefined. Actual: ' + (eval(\"for(false;false;false);\")));\n}    \n",
    "id": "S15.1.2.1_A3.2_T8"
   },
   {
    "section": "15.1.2.1, 12.7",
    "description": "Continue statement",
    "test": "//CHECK#1\ntry {\n  eval(\"continue;\");\n  $ERROR('#1.1: continue must throw SyntaxError. Actual: ' + (eval(\"continue;\")));\n} catch(e) {\n  if ((e instanceof SyntaxError) !== true) {\n    $ERROR('#1.2: continue must throw SyntaxError. Actual ' + (e));\n  }  \n}\n\n//CHECK#2\ntry {\n  for (var i = 0; i <= 1; i++) {\n    for (var j = 0; j <= 1; j++) {\n       eval(\"continue;\");       \n    }\n  }\n  $ERROR('#2.1: continue must throw SyntaxError. Actual: ' + (eval(\"continue;\")));    \n} catch(e) {\n  if ((e instanceof SyntaxError) !== true) {\n    $ERROR('#2.2: continue must throw SyntaxError. Actual: ' + (e));\n  }  \n}      \n",
    "id": "S15.1.2.1_A3.3_T1"
   },
   {
    "section": "15.1.2.1, 12.8",
    "description": "Break statement",
    "test": "//CHECK#1\ntry {\n  eval(\"break;\");\n  $ERROR('#1.1: break must throw SyntaxError. Actual: ' + (eval(\"break;\")));\n} catch(e) {\n  if ((e instanceof SyntaxError) !== true) {\n    $ERROR('#1.2: break must throw SyntaxError. Actual: ' + (e));\n  }  \n}\n\n//CHECK#2\ntry {\n  for (var i = 0; i <= 1; i++) {\n    for (var j = 0; j <= 1; j++) {\n       eval(\"break;\");\n    }\n  }\n  $ERROR('#2.1: break must throw SyntaxError. Actual: ' + (eval(\"break;\")));    \n} catch(e) {\n  if ((e instanceof SyntaxError) !== true) {   \n    $ERROR('#2.2: break must throw SyntaxError. Actual: ' + (e));\n  }  \n}      \n",
    "id": "S15.1.2.1_A3.3_T2"
   },
   {
    "section": "15.1.2.1, 12.9",
    "description": "Return statement",
    "test": "//CHECK#1\ntry {\n  eval(\"return;\");\n  $ERROR('#1.1: return must throw SyntaxError. Actual: ' + (eval(\"return;\")));\n} catch(e) {\n  if ((e instanceof SyntaxError) !== true) {\n    $ERROR('#1.2: return must throw SyntaxError. Actual: ' + (e));\n  }  \n}\n\n//CHECK#2\n\nfunction f() {  eval(\"return;\"); };\n\ntry {\n  f();      \n  $ERROR('#2.1: return must throw SyntaxError. Actual: ' + (f()));\n} catch(e) {\n  if ((e instanceof SyntaxError) !== true) {\n    $ERROR('#2.2: return must throw SyntaxError. Actual: ' + (e));\n  }  \n}      \n",
    "id": "S15.1.2.1_A3.3_T3"
   },
   {
    "section": "15.1.2.1, 12.13",
    "description": "Throw statement",
    "test": "//CHECK#1\ntry {\n  eval(\"throw 1;\");\n  $ERROR('#1.1: throw 1 must throw SyntaxError. Actual: ' + (eval(\"throw 1;\")));\n} catch(e) {\n  if (e !== 1) {\n    $ERROR('#1.2: throw 1 must throw SyntaxError. Actual: ' + (e));\n  }  \n}\n",
    "id": "S15.1.2.1_A3.3_T4"
   },
   {
    "section": "15.1.2.1, 15.2.4.7, 12.6.4",
    "description": "Checking use propertyIsEnumerable, for-in",
    "test": "//CHECK#1\nif (eval.propertyIsEnumerable('length') !== false) {\n  $ERROR('#1: eval.propertyIsEnumerable(\\'length\\') === false. Actual: ' + (eval.propertyIsEnumerable('length')));\n}\n\n//CHECK#2\nvar result = true;\nfor (p in eval){\n  if (p === \"length\") {\n    result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#2: result = true; for (p in eval) { if (p === \"length\") result = false; };  result === true;');\n}\n",
    "id": "S15.1.2.1_A4.1"
   },
   {
    "section": "15.1.2.1, 15.2.4.5, 11.4.1",
    "description": "Checking use hasOwnProperty, delete",
    "test": "//CHECK#1\nif (eval.hasOwnProperty('length') !== true) {\n  $FAIL('#1: eval.hasOwnProperty(\\'length\\') === true. Actual: ' + (eval.hasOwnProperty('length')));\n}\n\ndelete eval.length;\n\n//CHECK#2\nif (eval.hasOwnProperty('length') !== true) {\n  $ERROR('#2: delete eval.length; eval.hasOwnProperty(\\'length\\') === true. Actual: ' + (eval.hasOwnProperty('length')));\n}\n\n//CHECK#3\nif (eval.length === undefined) {\n  $ERROR('#3: delete eval.length; eval.length !== undefined');\n}\n\n\n\n",
    "id": "S15.1.2.1_A4.2"
   },
   {
    "section": "15.1.2.1",
    "description": "Checking if varying the length property fails",
    "strict_mode_negative": "",
    "test": "//CHECK#1\nvar x = eval.length;\neval.length = Infinity;\nif (eval.length !== x) {\n  $ERROR('#1: x = eval.length; eval.length = Infinity; eval.length === x. Actual: ' + (eval.length));\n}\n\n",
    "id": "S15.1.2.1_A4.3",
    "strict_only": ""
   },
   {
    "section": "15.1.2.1",
    "description": "eval.length === 1",
    "test": "//CHECK#1\nif (eval.length !== 1) {\n  $ERROR('#1: eval.length === 1. Actual: ' + (eval.length));\n} \n\n",
    "id": "S15.1.2.1_A4.4"
   },
   {
    "section": "15.1.2.1, 15.2.4.7, 12.6.4",
    "description": "Checking use propertyIsEnumerable, for-in",
    "test": "//CHECK#1\nif (this.propertyIsEnumerable('eval') !== false) {\n  $ERROR('#1: this.propertyIsEnumerable(\\'eval\\') === false. Actual: ' + (this.propertyIsEnumerable('eval')));\n}\n\n//CHECK#2\nvar result = true;\nfor (var p in this){\n  if (p === \"eval\") {\n    result = false;\n  }  \n}\n\nif (result !== true) {\n  $ERROR('#2: result = true; for (p in this) { if (p === \"eval\") result = false; }  result === true;');\n}\n",
    "id": "S15.1.2.1_A4.5"
   },
   {
    "section": "15.1.2.1",
    "description": "Checking eval.prototype",
    "test": "//CHECK#1\nif (eval.prototype !== undefined) {\n  $ERROR('#1: eval.prototype === undefined. Actual: ' + (eval.prototype));\n}\n",
    "id": "S15.1.2.1_A4.6"
   },
   {
    "section": "15.1.2.1, 11.2.2",
    "description": "If property does not implement the internal [[Construct]] method, throw a TypeError exception",
    "test": "//CHECK#1\n\ntry {\n  new eval();\n  $ERROR('#1.1: new eval() throw TypeError. Actual: ' + (new eval()));\n} catch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#1.2: new eval() throw TypeError. Actual: ' + (e));\n  }\n}\n",
    "id": "S15.1.2.1_A4.7"
   }
  ]
 }
}
