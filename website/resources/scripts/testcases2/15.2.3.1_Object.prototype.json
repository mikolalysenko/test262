{
 "testCollection": {
  "name": "15.2.3.1_Object.prototype",
  "numTests": 3,
  "tests": [
   {
    "section": "15.2.3.1, 15.2.4",
    "description": "Checking if varying \"Object.prototype\" property fails",
    "test": "var obj = Object.prototype;\nObject.prototype = function(){return \"shifted\";};\n\n//CHECK#1\nif (Object.prototype !== obj) {\n  $ERROR('#1: the Object.prototype property has the attributes ReadOnly.');\n}\n\n//CHECK#2\ntry {\n  Object.prototype();\n  $ERROR('#2: the Object.prototype property has the attributes ReadOnly');\n} catch (e) {\n  ;\n}\n",
    "id": "S15.2.3.1_A1"
   },
   {
    "section": "15.2.3.1, 15.2.4",
    "description": "Checking if enumerating \"Object.prototype\" property fails",
    "test": "// CHECK#1\nif (Object.propertyIsEnumerable('prototype')) {\n  $ERROR('#1: the Object.prototype property has the attributes DontEnum');\n}\n\n// CHECK#2\nvar cout=0;\n\nfor (p in Object){\n  if (p===\"prototype\") cout++;\n}\n\nif (cout !== 0) {\n  $ERROR('#2: the Object.prototype property has the attributes DontEnum');\n}\n",
    "id": "S15.2.3.1_A2"
   },
   {
    "test": "  // Copyright 2009 the Sputnik authors.  All rights reserved.\n// This code is governed by the BSD license found in the LICENSE file.\n\n/**\n* @name: S15.2.3.1_A3;\n* @section: 15.2.3.1, 15.2.4;\n* @assertion: The Object.prototype property has the attribute DontDelete;\n* @description: Checking if deleting \"Object.prototype\" property fails;\n* @strict_mode_negative\n*/\n\ndelete Object.prototype;\n\n//CHECK#2\nif (!(Object.hasOwnProperty('prototype'))) {\n  $ERROR('#2: the Object.prototype property has the attributes DontDelete.');\n}\n"
   }
  ]
 }
}
