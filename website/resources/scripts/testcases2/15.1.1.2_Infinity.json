{
 "testCollection": {
  "name": "15.1.1.2_Infinity",
  "numTests": 5,
  "tests": [
   {
    "section": "15.1.1.2, 11.4.3, 15.1.2.4, 15.1.2.5",
    "description": "Use typeof, isNaN, isFinite",
    "test": "// CHECK#1\nif (typeof(Infinity) !== \"number\") {\n\t$ERROR('#1: typeof(Infinity) === \"number\". Actual: ' + (typeof(Infinity))); \n}\n\n// CHECK#2\nif (isFinite(Infinity) !== false) {\n\t$ERROR('#2: Infinity === Not-a-Finite. Actual: ' + (Infinity)); \n}\n\n// CHECK#3\nif (isNaN(Infinity) !== false) {\n\t$ERROR('#3: Infinity === Not-a-Number. Actual: ' + (Infinity)); \n}\n\n\n// CHECK#4\nif (Infinity !== Number.POSITIVE_INFINITY) {\n\t$ERROR('#4: Infinity === Number.POSITIVE_INFINITY. Actual: ' + (Infinity)); \n}\n",
    "id": "S15.1.1.2_A1"
   },
   {
    "section": "15.1.1.2, 15.5.1, 15.6.1, 15.7.1",
    "description": "Checking Boolean, Number, String Functions",
    "strict_mode_negative": "",
    "test": "// CHECK#1\nInfinity = 0;\nif (Boolean(Infinity) !== false) {\n\t$ERROR('#1: Infinity = 0; Boolean(Infinity) === false. Actual: ' + (Boolean(Infinity))); \n}\n\n// CHECK#2\nInfinity = false;\nif (Number(Infinity) !== 0) {\n\t$ERROR('#2: Infinity = false; Number(Infinity) === 0. Actual: ' + (Number(Infinity))); \n}\n\n// CHECK#3\nInfinity = 0;\nif (String(Infinity) !== \"0\") {\n\t$ERROR('#3: Infinity = 0; String(Infinity) === \"0\". Actual: ' + (String(Infinity))); \n}\n\n",
    "id": "S15.1.1.2_A2_T1",
    "strict_only": ""
   },
   {
    "section": "15.1.1.2, 11.4.3",
    "description": "Checking typeof Functions",
    "test": "// CHECK#1\nvar Finite = true;\nif (typeof(Finite) !== \"boolean\") {\n\t$ERROR('#1: Finite = true; typeof(NaN) === \"boolean\". Actual: ' + (typeof(NaN))); \n}\n",
    "id": "S15.1.1.2_A2_T2"
   },
   {
    "section": "15.1.1.2, 11.4.1",
    "description": "Use delete",
    "strict_mode_negative": "",
    "test": "// CHECK#1\nif (delete Infinity !== false) {\n\t$ERROR('#1: delete Infinity === false. Actual: ' + (delete Infinity)); \n}\n",
    "id": "S15.1.1.2_A3.1",
    "strict_only": ""
   },
   {
    "section": "15.1.1.2, 12.6.4",
    "description": "Use for-in statement",
    "test": "// CHECK#1\nfor (var prop in this) {\n  if (prop === \"Infinity\") {\n\t$ERROR('#1: The Infinity is DontEnum');\n  }\t \t\n}\n",
    "id": "S15.1.1.2_A3.2"
   }
  ]
 }
}
