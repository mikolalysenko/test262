{
 "testCollection": {
  "name": "12.5_The_if_Statement",
  "numTests": 24,
  "tests": [
   {
    "section": "12.5",
    "description": "Using \"if\" without \"else\" construction",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\n\nif(0)\n\t$ERROR('#1: 0 in expression is evaluated to false ');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif(false)\n    $ERROR('#2: false in expression is evaluated to false ');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif(null)\n\t$ERROR('#3: null in expression is evaluated to false ');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#4\nif(undefined)\n\t$ERROR('#4: undefined in expression is evaluated to false ');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#5\nif(\"\")\n    $ERROR('#5: empty string in expression is evaluated to false ');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#6\nif(NaN)\n    $ERROR('#5: NaN in expression is evaluated to false ');\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A1.1_T1"
   },
   {
    "section": "12.5",
    "description": "Using \"if/else\" construction",
    "test": "var c=0;\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif(0)\n\t$ERROR('#1.1: 0 in expression is evaluated to false ');\nelse\n  c++;\nif (c!=1) $ERROR('#1.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif(false)\n    $ERROR('#2.1: false in expression is evaluated to false ');\nelse\n  c++;\nif (c!=2) $ERROR('#2.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif(null)\n\t$ERROR('#3.1: null in expression is evaluated to false ');\nelse\n  c++;\nif (c!=3) $ERROR('#3.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#4\nif(undefined)\n\t$ERROR('#4.1: undefined in expression is evaluated to false ');\nelse\n  c++;\nif (c!=4) $ERROR('#4.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#5\nif(\"\")\n    $ERROR('#5.1: empty string in expression is evaluated to false ');\nelse\n  c++;\nif (c!=5) $ERROR('#5.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#6\nif(NaN)\n    $ERROR('#6.1: NaN in expression is evaluated to false ');\nelse\n  c++;\nif (c!=6) $ERROR('#6.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A1.1_T2"
   },
   {
    "section": "12.5",
    "description": "Using \"if\" without \"else\" construction",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif(!(new Number(1)))\n\t$ERROR('#1: new 1 in expression is evaluated to true');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif(!(new Boolean(true)))\n\t$ERROR('#2: new true in expression is evaluated to true');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif(!(new String(\"1\")))\n\t$ERROR('#3: new \"1\" in expression is evaluated to true');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#4\nif(!(new String(\"A\")))\n\t$ERROR('#4: new \"A\" in expression is evaluated to true');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#5\nif(!(new Boolean(false)))\n    $ERROR('#2: new false in expression is evaluated to true ');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#6\nif(!(new Number(NaN)))\n    $ERROR('#6: new NaN in expression is evaluated to true ');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#7\nif(!(new Number(null)))\n  $ERROR('#7: new null in expression is evaluated to true ');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#8\nif(!(new String(undefined)))\n  $ERROR('#8: new undefined in expression is evaluated to true ');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#9\nif(!(new String(\"\")))\n    $ERROR('#9: new empty string in expression is evaluated to true ');\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A1.2_T1"
   },
   {
    "section": "12.5",
    "description": "Using \"if/else\" construction",
    "test": "var c=0;\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif(!(new Number(1)))\n\t$ERROR('#1.1: new 1 in expression is evaluated to true');\nelse\n  c++;\nif (c!=1) $ERROR('#1.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif(!(new Boolean(true)))\n\t$ERROR('#2.1: new true in expression is evaluated to true');\nelse\n  c++;\nif (c!=2) $ERROR('#2.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif(!(new String(\"1\")))\n\t$ERROR('#3.1: new \"1\" in expression is evaluated to true');\nelse\n  c++;\nif (c!=3) $ERROR('#3.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#4\nif(!(new String(\"A\")))\n\t$ERROR('#4.1: new \"A\" in expression is evaluated to true');\nelse\n  c++;\nif (c!=4) $ERROR('#4.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#5\nif(!(new Boolean(false)))\n    $ERROR('#5.1: new false in expression is evaluated to true ');\nelse\n  c++;\nif (c!=5) $ERROR('#5.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#6\nif(!(new Number(NaN)))\n    $ERROR('#6.1: new NaN in expression is evaluated to true ');\nelse\n  c++;\nif (c!=6) $ERROR('#6.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#7\nif(!(new Number(null)))\n  $ERROR('#7.1: new null in expression is evaluated to true ');\nelse\n  c++;\nif (c!=7) $ERROR('#7.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#8\nif(!(new String(undefined)))\n  $ERROR('#8.1: new undefined in expression is evaluated to true ');\nelse\n  c++;\nif (c!=8) $ERROR('#8.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#9\nif(!(new String(\"\")))\n    $ERROR('#9.1: new empty string in expression is evaluated to true ');\nelse\n  c++;\nif (c!=9) $ERROR('#9.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A1.2_T2"
   },
   {
    "section": "12.5",
    "description": ": Using function expession(function __func(){return 0;}) inside the \"if\" expression ;",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#\nif(function __func(){return 0;}){\n    ;\n}else {\n    $ERROR('#1: Function expession inside the \"if\" expression is allowed');\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A10_T1"
   },
   {
    "section": "12.5",
    "description": ": Using function expession \"function __func(){return 0;}()\" within \"if\" expression;",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#\nif(function __func(){return 0;}()){\n    $ERROR('#1: Function expession inside the if expression is allowed');\n}else {\n    ;\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A10_T2"
   },
   {
    "section": "12.5",
    "description": "Checking if execution of \"if({1})\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#\nif({1})\n  {\n    ;\n  }else\n  {\n    ;\n  }\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A11"
   },
   {
    "section": "12.5",
    "description": "Using embedded \"if/else\" into \"if/else\" constructions",
    "test": "//CHECK# 1\nif(true)\n  if (false)\n    $ERROR('#1.1: At embedded \"if/else\" constructions engine must select right branches');\n  else\n    ;\nelse \n  if (true)\n    $ERROR('#1.2: At embedded \"if/else\" constructions engine must select right branches');\n  else\n    $ERROR('#1.3: At embedded \"if/else\" constructions engine must select right branches');\n\n//CHECK# 2\nif(true)\n  if (true)\n    ;\n  else\n    $ERROR('#2.1: At embedded \"if/else\" constructions engine must select right branches');\nelse \n  if (true)\n    $ERROR('#2.2: At embedded \"if/else\" constructions engine must select right branches');\n  else\n    $ERROR('#2.3: At embedded \"if/else\" constructions engine must select right branches');\n\n//CHECK# 3\nif(false)\n  if (true)\n    $ERROR('#3.1: At embedded \"if/else\" constructions engine must select right branches');\n  else\n    $ERROR('#3.2: At embedded \"if/else\" constructions engine must select right branches');\nelse \n  if (true)\n    ;\n  else\n    $ERROR('#3.3: At embedded \"if/else\" constructions engine must select right branches');\n\n//CHECK# 4\nif(false)\n  if (true)\n    $ERROR('#4.1: At embedded \"if/else\" constructions engine must select right branches');\n  else\n    $ERROR('#4.2: At embedded \"if/else\" constructions engine must select right branches');\nelse \n  if (false)\n    $ERROR('#4.3: At embedded \"if/else\" constructions engine must select right branches');\n  else\n    ;\n",
    "id": "S12.5_A12_T1"
   },
   {
    "section": "12.5",
    "description": "Using embedded \"if\" into \"if/else\" constructions",
    "test": "//CHECK# 1\nif(true){\n  if (false)\n    $ERROR('#1.1: At embedded \"if/else\" constructions engine must select right branches');\n}\nelse{ \n  if (true)\n    $ERROR('#1.2: At embedded \"if/else\" constructions engine must select right branches');\n}\n\n//CHECK# 2\nif(true){\n  if (true)\n    ;\n}\nelse{ \n  if (true)\n    $ERROR('#2.2: At embedded \"if/else\" constructions engine must select right branches');\n}\n\n//CHECK# 3\nif(false){\n  if (true)\n    $ERROR('#3.1: At embedded \"if/else\" constructions engine must select right branches');\n}\nelse{ \n  if (true)\n    ;\n}\n\n//CHECK# 4\nif(false){\n  if (true)\n    $ERROR('#4.1: At embedded \"if/else\" constructions engine must select right branches');\n}\nelse{ \n  if (false)\n    $ERROR('#4.3: At embedded \"if/else\" constructions engine must select right branches');\n}\n",
    "id": "S12.5_A12_T2"
   },
   {
    "section": "12.5",
    "description": "Using embedded \"if/else\" into \"if\" without \"else\" constructions",
    "test": "//CHECK# 1\nif(true)\n  if (false)\n    $ERROR('#1.1: At embedded \"if/else\" constructions engine must select right branches');\n  else\n    ;\n\n//CHECK# 2\nif(true)\n  if (true)\n    ;\n  else\n    $ERROR('#2.1: At embedded \"if/else\" constructions engine must select right branches');\n\n//CHECK# 3\nif(false)\n  if (true)\n    $ERROR('#3.1: At embedded \"if/else\" constructions engine must select right branches');\n  else\n    $ERROR('#3.2: At embedded \"if/else\" constructions engine must select right branches');\n\n//CHECK# 4\nif(false)\n  if (true)\n    $ERROR('#4.1: At embedded \"if/else\" constructions engine must select right branches');\n  else\n    $ERROR('#4.2: At embedded \"if/else\" constructions engine must select right branches');\n",
    "id": "S12.5_A12_T3"
   },
   {
    "section": "12.5",
    "description": "Using embedded \"if\" into \"if\" constructions",
    "test": "//CHECK# 1\nif(true)\n  if (false)\n    $ERROR('#1.1: At embedded \"if/else\" constructions engine must select right branches');\n\n//CHECK# 2\nvar c=0;\nif(true)\n  if (true)\n    c=2;\nif (c!==2)\n    $ERROR('#2: At embedded \"if/else\" constructions engine must select right branches');\n\n//CHECK# 3\nif(false)\n  if (true)\n    $ERROR('#3.1: At embedded \"if/else\" constructions engine must select right branches');\n\n//CHECK# 4\nif(false)\n  if (true)\n    $ERROR('#4.1: At embedded \"if/else\" constructions engine must select right branches');\n",
    "id": "S12.5_A12_T4"
   },
   {
    "section": "12.5",
    "description": "Using \"if\" without \"else\" construction",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif(!(1))\n\t$ERROR('#1: 1 in expression is evaluated to true');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif(!(true))\n\t$ERROR('#2: true in expression is evaluated to true');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif(!(\"1\"))\n\t$ERROR('#3: \"1\" in expression is evaluated to true');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#4\nif(!(\"A\"))\n\t$ERROR('#4: \"A\" in expression is evaluated to true');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.5_A1_T1"
   },
   {
    "section": "12.5",
    "description": "Using \"if/else\" construction",
    "test": "var c=0;\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif(!(1))\n\t$ERROR('#1.1: 1 in expression is evaluated to true');\nelse\n  c++;\nif (c!=1) $ERROR('#1.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif(!(true))\n\t$ERROR('#2.1: true in expression is evaluated to true');\nelse\n  c++;\nif (c!=2) $ERROR('#2.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\nif(!(\"1\"))\n\t$ERROR('#3.1: \"1\" in expression is evaluated to true');\nelse\n  c++;\nif (c!=3) $ERROR('#3.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#4\nif(!(\"A\"))\n\t$ERROR('#4.1: \"A\" in expression is evaluated to true');\nelse\n  c++;\nif (c!=4) $ERROR('#4.2: else branch don`t execute');\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.5_A1_T2"
   },
   {
    "section": "12.5",
    "description": "Checking by using eval \"eval(\"true\")\"",
    "negative": "",
    "test": "if (eval(\"true\")) $FAIL('#1: In the \"if\" Statement eval as Expression is admitted');\n",
    "id": "S12.5_A2"
   },
   {
    "section": "12.5",
    "description": "The Expression is \"(function(){throw 1})()\"",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ntry {\n\tif ((function(){throw 1})()) abracadabra\n} catch (e) {\n\tif (e !== 1) {\n\t\t$ERROR('#1: Exception === 1. Actual:  Exception ==='+ e);\n\t}\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\ntry {\n\tif ((function(){throw 1})()) abracadabra; else blablachat;\n} catch (e) {\n\tif (e !== 1) {\n\t\t$ERROR('#2: Exception === 1. Actual:  Exception ==='+ e);\n\t}\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.5_A3"
   },
   {
    "section": "12.5",
    "description": "The first statement is \"(function(){throw \"instatement\"})()\"",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ntry {\n\tif (true) (function(){throw \"instatement\"})();\n\t$FAIL(\"#1 failed\")\n} catch (e) {\n\tif (e !== \"instatement\") {\n\t\t$ERROR('#1: Exception === \"instatement\". Actual:  Exception ==='+ e);\n\t}\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\ntry {\n\tif (false) (function(){throw \"truebranch\"})(); (function(){throw \"missbranch\"})();\n\t$FAIL(\"#2 failed\")\n} catch (e) {\n\tif (e !== \"missbranch\") {\n\t\t$ERROR('#2: Exception === \"missbranch\". Actual:  Exception ==='+ e);\n\t}\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.5_A4"
   },
   {
    "section": "12.5",
    "description": ": The \"if\" Expression is \"function __func(){throw \"FunctionExpression\";}\";",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ntry {\n\t__func=__func;\n\t$ERROR('#1: \"__func=__func\" lead to throwing exception');\n} catch (e) {\n\t;\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\ntry {\n\tif(function __func(){throw \"FunctionExpression\";}) (function(){throw \"TrueBranch\"})(); else (function(){\"MissBranch\"})();\n} catch (e) {\n\tif (e !== \"TrueBranch\") {\n\t\t$ERROR('#2: Exception ===\"TrueBranch\". Actual:  Exception ==='+ e);\n\t}\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//CHECK#3\ntry {\n\t__func=__func;\n\t$ERROR('#3: \"__func=__func\" lead to throwing exception');\n} catch (e) {\n\t;\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n\n\n\n",
    "id": "S12.5_A5"
   },
   {
    "section": "12.5",
    "description": "Checking if execution of \"if true\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif true;\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A6_T1"
   },
   {
    "section": "12.5",
    "description": "Checking if execution of \"if false\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#2\nif false;\n//\n//////////////////////////////////////////////////////////////////////////////\n\n",
    "id": "S12.5_A6_T2"
   },
   {
    "section": "12.5",
    "description": ": Checking by using eval \"eval(\"if(1);\"))\";",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\ntry {\n\tvar __evaluated = eval(\"if(1);\");\n\tif (__evaluated !== undefined) {\n\t\t$ERROR('#1: __evaluated === undefined. Actual:  __evaluated ==='+ __evaluated  );\n\t}\n\n} catch (e) {\n\t$ERROR('#1.1: \"__evaluated = eval(\"if(1);\")\" does not lead to throwing exception');\n\n}\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A7"
   },
   {
    "section": "12.5",
    "description": "Checking if execution of \"if()\" fails",
    "negative": "",
    "test": "//////////////////////////////////////////////////////////////////////////////\n//CHECK#1\nif();\n//\n//////////////////////////////////////////////////////////////////////////////\n",
    "id": "S12.5_A8"
   },
   {
    "section": "12.5",
    "description": "Declaring function within an \"if\" statement",
    "negative": "SyntaxError",
    "test": "\"use strict\";\nif (true) {\n    function __func(){};\n} else {\n    function __func(){};\n}\n",
    "id": "S12.5_A9_T1"
   },
   {
    "section": "12.5",
    "description": "Declaring function within an \"if\" that is declared within the strict function",
    "negative": "SyntaxError",
    "test": "(function(){\n\"use strict\";\n\nif (true) {\n    function __func(){};\n} else {\n    function __func(){};\n}\n\n});\n",
    "id": "S12.5_A9_T2"
   },
   {
    "section": "12.5",
    "description": "Declaring function within an \"if\" statement that is declared within the function declaration",
    "negative": "",
    "test": "function(){\n\nif (true) {\n    function __func(){};\n} else {\n    function __func(){};\n}\n\n};\n",
    "id": "S12.5_A9_T3"
   }
  ]
 }
}
