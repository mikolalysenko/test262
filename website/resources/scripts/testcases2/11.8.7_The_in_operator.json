{
 "testCollection": {
  "name": "11.8.7_The_in_operator",
  "numTests": 9,
  "tests": [
   {
    "section": "11.8.7, 7.2, 7.3",
    "description": "Checking by using eval",
    "test": "//CHECK#1\nif (eval(\"'MAX_VALUE'\\u0009in\\u0009Number\") !== true) {\n  $ERROR('#1: \"MAX_VALUE\"\\\\u0009in\\\\u0009Number === true');\n}\n\n//CHECK#2\nif (eval(\"'MAX_VALUE'\\u000Bin\\u000BNumber\") !== true) {\n  $ERROR('#2: \"MAX_VALUE\"\\\\u000Bin\\\\u000BNumber === true');  \n}\n\n//CHECK#3\nif (eval(\"'MAX_VALUE'\\u000Cin\\u000CNumber\") !== true) {\n  $ERROR('#3: \"MAX_VALUE\"\\\\u000Cin\\\\u000CNumber === true');\n}\n\n//CHECK#4\nif (eval(\"'MAX_VALUE'\\u0020in\\u0020Number\") !== true) {\n  $ERROR('#4: \"MAX_VALUE\"\\\\u0020in\\\\u0020Number === true');\n}\n\n//CHECK#5\nif (eval(\"'MAX_VALUE'\\u00A0in\\u00A0Number\") !== true) {\n  $ERROR('#5: \"MAX_VALUE\"\\\\u00A0in\\\\u00A0Number === true');\n}\n\n//CHECK#6\nif (eval(\"'MAX_VALUE'\\u000Ain\\u000ANumber\") !== true) {\n  $ERROR('#6: \"MAX_VALUE\"\\\\u000Ain\\\\u000ANumber === true');  \n}\n\n//CHECK#7\nif (eval(\"'MAX_VALUE'\\u000Din\\u000DNumber\") !== true) {\n  $ERROR('#7: \"MAX_VALUE\"\\\\u000Din\\\\u000DNumber === true');\n}\n\n//CHECK#8\nif (eval(\"'MAX_VALUE'\\u2028in\\u2028Number\") !== true) {\n  $ERROR('#8: \"MAX_VALUE\"\\\\u2028in\\\\u2028Number === true');\n}\n\n//CHECK#9\nif (eval(\"'MAX_VALUE'\\u2029in\\u2029Number\") !== true) {\n  $ERROR('#9: \"MAX_VALUE\"\\\\u2029in\\\\u2029Number === true');\n}\n\n//CHECK#10\nif (eval(\"'MAX_VALUE'\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029in\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029Number\") !== true) {\n  $ERROR('#10: \"MAX_VALUE\"\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029in\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029Number === true');\n}\n",
    "id": "S11.8.7_A1"
   },
   {
    "section": "11.8.7",
    "description": "Either Expression is not Reference or GetBase is not null",
    "test": "//CHECK#1\nif (\"MAX_VALUE\" in Number !== true) {\n  $ERROR('#1: \"MAX_VALUE\" in Number === true');\n}\n\n//CHECK#2\nvar x = \"MAX_VALUE\";\nif (x in Number !== true) {\n  $ERROR('#2: var x = \"MAX_VALUE\"; x in Number === true');\n}\n\n//CHECK#3\nvar y = Number;\nif (\"MAX_VALUE\" in  y !== true) {\n  $ERROR('#3: var y = Number; \"MAX_VALUE\" in y === true');\n}\n\n//CHECK#4\nvar x = \"MAX_VALUE\";\nvar y = Number;\nif (x in y !== true) {\n  $ERROR('#4: var x = \"MAX_VALUE\"; var y = Number; x in y === true');\n}\n\n",
    "id": "S11.8.7_A2.1_T1"
   },
   {
    "section": "11.8.7",
    "description": "If GetBase(RelationalExpression) is null, throw ReferenceError",
    "test": "//CHECK#1\ntry {\n  MAX_VALUE in Number;\n  $ERROR('#1.1: MAX_VALUE in Number throw ReferenceError. Actual: ' + (MAX_VALUE in Number));  \n}\ncatch (e) {\n  if ((e instanceof ReferenceError) !== true) {\n    $ERROR('#1.2: MAX_VALUE in Number throw ReferenceError. Actual: ' + (e));  \n  }\n}\n",
    "id": "S11.8.7_A2.1_T2"
   },
   {
    "section": "11.8.7",
    "description": "If GetBase(ShiftExpression) is null, throw ReferenceError",
    "test": "//CHECK#1\ntry {\n  \"MAX_VALUE\" in NUMBER;\n  $ERROR('#1.1: \"MAX_VALUE\" in NUMBER throw ReferenceError. Actual: ' + (\"MAX_VALUE\" in NUMBER));  \n}\ncatch (e) {\n  if ((e instanceof ReferenceError) !== true) {\n    $ERROR('#1.2: \"MAX_VALUE\" in NUMBER throw ReferenceError. Actual: ' + (e));  \n  }\n}\n",
    "id": "S11.8.7_A2.1_T3"
   },
   {
    "section": "11.8.7",
    "description": "Checking with \"=\"",
    "test": "//CHECK#1 \nvar NUMBER = 0;\nif ((NUMBER = Number, \"MAX_VALUE\") in NUMBER !== true) {\n  $ERROR('#1: var NUMBER = 0; (NUMBER = Number, \"MAX_VALUE\") in NUMBER === true');\n}\n\n//CHECK#2\nvar max_value = \"MAX_VALUE\"; \nif (max_value in (max_value = \"none\", Number) !== true) {\n  $ERROR('#2: var max_value = \"MAX_VALUE\"; max_value in (max_value = \"none\", Number) === true');\n}\n\n",
    "id": "S11.8.7_A2.4_T1"
   },
   {
    "section": "11.8.7",
    "description": "Checking with \"throw\"",
    "test": "//CHECK#1\nvar x = function () { throw \"x\"; };\nvar y = function () { throw \"y\"; };\ntry {\n   x() in y();\n   $ERROR('#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() in y() throw \"x\". Actual: ' + (x() in y()));\n} catch (e) {\n   if (e === \"y\") {\n     $ERROR('#1.2: First expression is evaluated first, and then second expression');\n   } else {\n     if (e !== \"x\") {\n       $ERROR('#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() in y() throw \"x\". Actual: ' + (e));\n     }\n   }\n}\n",
    "id": "S11.8.7_A2.4_T2"
   },
   {
    "section": "11.8.7",
    "description": "Checking with undeclarated variables",
    "test": "//CHECK#1\ntry {\n  max_value in (max_value = \"MAX_VALUE\", Number);\n  $ERROR('#1.1: max_value in (max_value = \"MAX_VALUE\", Number) throw ReferenceError. Actual: ' + (max_value in (max_value = \"MAX_VALUE\", Number)));  \n}\ncatch (e) {\n  if ((e instanceof ReferenceError) !== true) {\n    $ERROR('#1.2: max_value in (max_value = \"MAX_VALUE\", Number) throw ReferenceError. Actual: ' + (e));  \n  }\n}\n\n//CHECK#2\nif ((NUMBER = Number, \"MAX_VALUE\") in NUMBER !== true) {\n  $ERROR('#2: (NUMBER = Number, \"MAX_VALUE\") in NUMBER !== true');\n}\n\n",
    "id": "S11.8.7_A2.4_T3"
   },
   {
    "section": "11.8.7",
    "description": "Checking all the types of primitives",
    "test": "//CHECK#1\ntry {\n  \"toString\" in true;\n  $ERROR('#1: \"toString\" in true throw TypeError');  \n}\ncatch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#1: \"toString\" in true throw TypeError');  \n  }\n}\n\n//CHECK#2\ntry {\n  \"MAX_VALUE\" in 1;\n  $ERROR('#2: \"MAX_VALUE\" in 1 throw TypeError');  \n}\ncatch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#2: \"MAX_VALUE\" in 1 throw TypeError');  \n  }\n}\n\n//CHECK#3\ntry {\n  \"length\" in \"string\";\n  $ERROR('#3: \"length\" in \"string\" throw TypeError');  \n}\ncatch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#3: \"length\" in \"string\" throw TypeError');  \n  }\n}\n\n//CHECK#4\ntry {\n  \"toString\" in undefined;\n  $ERROR('#4: \"toString\" in undefined throw TypeError');  \n}\ncatch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#4: \"toString\" in undefined throw TypeError');  \n  }\n}\n\n//CHECK#5\ntry {\n  \"toString\" in null;\n  $ERROR('#5: \"toString\" in null throw TypeError');  \n}\ncatch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#5: \"toString\" in null throw TypeError');  \n  }\n}\n",
    "id": "S11.8.7_A3"
   },
   {
    "section": "11.8.7, 9.8",
    "description": ": Checking ToString coversion;;",
    "test": "//CHECK#1\nvar object = {};\nobject[\"true\"] = 1;\nif (true in object !== \"true\" in object) {  \n  $ERROR('#1: \"var object = {}; object[\"true\"] = 1; true in object === \"true\" in object');  \n}\n\n//CHECK#2\nvar object = {};\nobject.Infinity = 1;\nif (Infinity in object !== \"Infinity\" in object) {  \n  $ERROR('#2: \"var object = {}; object.Infinity = 1; Infinity in object === \"Infinity\" in object');  \n}\n\n//CHECK#4\nvar object = {};\nobject.undefined = 1;\nif (undefined in object !== \"undefined\" in object) {  \n  $ERROR('#4: \"var object = {}; object.undefined = 1; undefined in object === \"undefined\" in object');  \n}\n\n//CHECK#5\nvar object = {};\nobject[\"null\"] = 1;\nif (null in object !== \"null\" in object) {  \n  $ERROR('#5: \"var object = {}; object[\"null\"] = 1; null in object === \"null\" in object');  \n}\n",
    "id": "S11.8.7_A4"
   }
  ]
 }
}
