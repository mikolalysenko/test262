{
 "testCollection": {
  "name": "11.4.4_Prefix_Increment_Operator",
  "numTests": 15,
  "tests": [
   {
    "section": "11.4.4, 11.6.3, 7.2, 7.3",
    "description": "Checking by using eval",
    "test": "//CHECK#1\nif (eval(\"var x = 0; ++\\u0009x\") !== 1) {\n  $ERROR('#1: var x = 0; ++\\\\u0009x; x === 1. Actual: ' + (x));\n}\n\n//CHECK#2\nif (eval(\"var x = 0; ++\\u000Bx\") !== 1) {\n  $ERROR('#2: var x = 0; ++\\\\u000Bx; x === 1. Actual: ' + (x));  \n}\n\n//CHECK#3\nif (eval(\"var x = 0; ++\\u000Cx\") !== 1) {\n  $ERROR('#3: var x = 0; ++\\\\u000Cx; x === 1. Actual: ' + (x));\n}\n\n//CHECK#4\nif (eval(\"var x = 0; ++\\u0020x\") !== 1) {\n  $ERROR('#4: var x = 0; ++\\\\u0020x; x === 1. Actual: ' + (x));\n}\n\n//CHECK#5\nif (eval(\"var x = 0; ++\\u00A0x\") !== 1) {\n  $ERROR('#5: var x = 0; ++\\\\u00A0x; x === 1. Actual: ' + (x));\n}\n\n//CHECK#6\nif (eval(\"var x = 0; ++\\u000Ax\") !== 1) {\n  $ERROR('#6: var x = 0; ++\\\\u000Ax; x === 1. Actual: ' + (x));  \n}\n\n//CHECK#7\nif (eval(\"var x = 0; ++\\u000Dx\") !== 1) {\n  $ERROR('#7: var x = 0; ++\\\\u000Dx; x === 1. Actual: ' + (x));\n}\n\n//CHECK#8\nif (eval(\"var x = 0; ++\\u2028x\") !== 1) {\n  $ERROR('#8: var x = 0; ++\\\\u2028x; x === 1. Actual: ' + (x));\n}\n\n//CHECK#9\nif (eval(\"var x = 0; ++\\u2029x\") !== 1) {\n  $ERROR('#9: var x = 0; ++\\\\u2029x; x === 1. Actual: ' + (x));\n}\n\n//CHECK#10\nif (eval(\"var x = 0; ++\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029x\") !== 1) {\n  $ERROR('#10: var x = 0; ++\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029x; x === 1. Actual: ' + (x));\n}\n",
    "id": "S11.4.4_A1"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is Reference and GetBase(x) is not null",
    "test": "//CHECK#1\nvar x = 1;\nif (++x !== 1 + 1) {\n  $ERROR('#1: var x = 1; ++x === 1 + 1. Actual: ' + (++x));\n} else {\n  if (x !== 1 + 1) {\n    $ERROR('#1: var x = 1; ++x; x === 1 + 1. Actual: ' + (x));\n  } \n}\n\n//CHECK#2\nthis.x = 1;\nif (++this.x !== 1 + 1) {\n  $ERROR('#2: this.x = 1; ++this.x === 1 + 1. Actual: ' + (++this.x));\n} else {\n  if (this.x !== 1 + 1) {\n    $ERROR('#2: this.x = 1; ++this.x; this.x === 1 + 1. Actual: ' + (this.x));\n  } \n}\n\n//CHECK#3\nvar object = new Object();\nobject.prop = 1;\nif (++object.prop !== 1 + 1) {\n  $ERROR('#3: var object = new Object(); object.prop = 1; ++object.prop === 1 + 1. Actual: ' + (++object.prop));\n} else {\n  if (this.x !== 1 + 1) {\n    $ERROR('#3: var object = new Object(); object.prop = 1; ++object.prop; object.prop === 1 + 1. Actual: ' + (object.prop));\n  } \n}\n",
    "id": "S11.4.4_A2.1_T1"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "If GetBase(x) is null, throw ReferenceError",
    "test": "//CHECK#1\ntry {\n  ++x;\n  $ERROR('#1.1: ++x throw ReferenceError. Actual: ' + (++x));  \n}\ncatch (e) {\n  if ((e instanceof ReferenceError) !== true) {\n    $ERROR('#1.2: ++x throw ReferenceError. Actual: ' + (e));  \n  }\n}\n",
    "id": "S11.4.4_A2.1_T2"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "If Type(x) is not Reference, throw ReferenceError (or SyntaxError)",
    "negative": "",
    "test": "//CHECK#1\ntry {\n  ++1;\n  $ERROR('#1.1: ++1 throw ReferenceError (or SyntaxError). Actual: ' + (++1));  \n}\ncatch (e) {\n  if ((e instanceof ReferenceError) !== true) {\n    $ERROR('#1.2: ++1 throw ReferenceError (or SyntaxError). Actual: ' + (e));  \n  } else {\n    ++1;\n  }\n}\n\n",
    "id": "S11.4.4_A2.1_T3"
   },
   {
    "section": "11.4.4, 8.6.2.6",
    "description": "If Type(value) is Object, evaluate ToPrimitive(value, Number)",
    "test": "//CHECK#1\nvar object = {valueOf: function() {return 1}};\nif (++object !== 1 + 1) {\n  $ERROR('#1: var object = {valueOf: function() {return 1}}; ++object === 1 + 1. Actual: ' + (++object));\n} else {\n  if (object !== 1 + 1) {\n    $ERROR('#1: var object = {valueOf: function() {return 1}}; ++object; object === 1 + 1. Actual: ' + (object));\n  }\n}\n\n//CHECK#2\nvar object = {valueOf: function() {return 1}, toString: function() {return 0}};\nif (++object !== 1 + 1) {\n  $ERROR('#2: var object = {valueOf: function() {return 1}, toString: function() {return 0}}; ++object === 1 + 1. Actual: ' + (++object));\n} else {\n  if (object !== 1 + 1) {\n    $ERROR('#2: var object = {valueOf: function() {return 1}, toString: function() {return 0}}; ++object; object === 1 + 1. Actual: ' + (object));\n  }\n}\n\n//CHECK#3\nvar object = {valueOf: function() {return 1}, toString: function() {return {}}};\nif (++object !== 1 + 1) {\n  $ERROR('#3: var object = {valueOf: function() {return 1}, toString: function() {return {}}}; ++object === 1 + 1. Actual: ' + (++object));\n} else {\n  if (object !== 1 + 1) {\n    $ERROR('#3: var object = {valueOf: function() {return 1}, toString: function() {return {}}}; ++object; object === 1 + 1. Actual: ' + (object));\n  }\n}\n\n//CHECK#4\ntry {\n  var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}};\n  if (++object !== 1 + 1) {\n    $ERROR('#4.1: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; ++object === 1 + 1. Actual: ' + (++object));\n  } else {\n    if (object !== 1 + 1) {\n      $ERROR('#4.1: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; ++object; object === 1 + 1. Actual: ' + (object));\n    }\n  }\n}\ncatch (e) {\n  if (e === \"error\") {\n    $ERROR('#4.2: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; ++object not throw \"error\"');\n  } else {\n    $ERROR('#4.3: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; ++object not throw Error. Actual: ' + (e));\n  }\n}\n\n//CHECK#5\nvar object = {toString: function() {return 1}};\nif (++object !== 1 + 1) {\n  $ERROR('#5.1: var object = {toString: function() {return 1}}; ++object === 1 + 1. Actual: ' + (++object));\n} else {\n  if (object !== 1 + 1) {\n    $ERROR('#5.2: var object = {toString: function() {return 1}}; ++object; object === 1 + 1. Actual: ' + (object));\n  }\n}\n\n\n//CHECK#6\nvar object = {valueOf: function() {return {}}, toString: function() {return 1}}\nif (++object !== 1 + 1) {\n  $ERROR('#6.1: var object = {valueOf: function() {return {}}, toString: function() {return 1}}; ++object === 1 + 1. Actual: ' + (++object));\n} else {\n  if (object !== 1 + 1) {\n    $ERROR('#6.2: var object = {valueOf: function() {return {}}, toString: function() {return 1}}; ++object; object === 1 + 1. Actual: ' + (object));\n  }\n}\n\n//CHECK#7\ntry {\n  var object = {valueOf: function() {throw \"error\"}, toString: function() {return 1}};\n  ++object;\n  $ERROR('#7.1: var object = {valueOf: function() {throw \"error\"}, toString: function() {return 1}}; ++object throw \"error\". Actual: ' + (++object));\n}  \ncatch (e) {\n  if (e !== \"error\") {\n    $ERROR('#7.2: var object = {valueOf: function() {throw \"error\"}, toString: function() {return 1}}; ++object throw \"error\". Actual: ' + (e));\n  } \n}\n\n//CHECK#8\ntry {\n  var object = {valueOf: function() {return {}}, toString: function() {return {}}};\n  ++object;\n  $ERROR('#8.1: var object = {valueOf: function() {return {}}, toString: function() {return {}}}; ++object throw TypeError. Actual: ' + (++object));\n}  \ncatch (e) {\n  if ((e instanceof TypeError) !== true) {\n    $ERROR('#8.2: var object = {valueOf: function() {return {}}, toString: function() {return {}}}; ++object throw TypeError. Actual: ' + (e));\n  } \n}\n",
    "id": "S11.4.4_A2.2_T1"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is boolean primitive or Boolean object",
    "test": "//CHECK#1\nvar x = false; \n++x;\nif (x !== 0 + 1) {\n  $ERROR('#1: var x = false; ++x; x === 0 + 1. Actual: ' + (x));\n}\n\n//CHECK#2\nvar x = new Boolean(true); \n++x; \nif (x !== 1 + 1) {\n  $ERROR('#2: var x = new Boolean(true); ++x; x === 1 + 1. Actual: ' + (x));\n}\n",
    "id": "S11.4.4_A3_T1"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is number primitive or Number object",
    "test": "//CHECK#1\nvar x = 0.1; \n++x;\nif (x !== 0.1 + 1) {\n  $ERROR('#1: var x = 0.1; ++x; x === 0.1 + 1. Actual: ' + (x));\n}\n\n//CHECK#2\nvar x = new Number(-1.1); \n++x;\nif (x !== -1.1 + 1) {\n  $ERROR('#2: var x = new Number(-1.1); ++x; x === -1.1 + 1. Actual: ' + (x));\n}\n",
    "id": "S11.4.4_A3_T2"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is string primitive or String object",
    "test": "//CHECK#1\nvar x = \"1\"; \n++x;\nif (x !== 1 + 1) {\n  $ERROR('#1: var x = \"1\"; ++x; x === 1 + 1. Actual: ' + (x));\n}\n\n//CHECK#2\nvar x = \"x\"; \n++x; \nif (isNaN(x) !== true) {\n  $ERROR('#2: var x = \"x\"; ++x; x === Not-a-Number. Actual: ' + (x));\n}\n\n//CHECK#3\nvar x = new Number(\"-1\"); \n++x;\nif (x !== -1 + 1) {\n  $ERROR('#3: var x = new String(\"-1\"); ++x; x === -1 + 1. Actual: ' + (x));\n}\n",
    "id": "S11.4.4_A3_T3"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is undefined or null",
    "test": "//CHECK#1\nvar x; \n++x; \nif (isNaN(x) !== true) {\n  $ERROR('#1: var x; ++x; x === Not-a-Number. Actual: ' + (x));\n}\n\n//CHECK#2\nvar x = null; \n++x;\nif (x !== 1) {\n  $ERROR('#2: var x = null; ++x; x === 1. Actual: ' + (x));\n}\n",
    "id": "S11.4.4_A3_T4"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is Object object or Function object",
    "test": "//CHECK#1\nvar x = {}; \n++x; \nif (isNaN(x) !== true) {\n  $ERROR('#1: var x = {}; ++x; x === Not-a-Number. Actual: ' + (x));\n}\n\n//CHECK#2\nvar x = function(){return 1}; \n++x; \nif (isNaN(x) !== true) {\n  $ERROR('#2: var x = function(){return 1}; ++x; x === Not-a-Number. Actual: ' + (x));\n}\n",
    "id": "S11.4.4_A3_T5"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is boolean primitive or Boolean object",
    "test": "//CHECK#1\nvar x = false; \nif (++x !== 0 + 1) {\n  $ERROR('#1: var x = false; ++x === 0 + 1. Actual: ' + (++x));\n}\n\n//CHECK#2\nvar x = new Boolean(true);\nif (++x !== 1 + 1) {\n  $ERROR('#2: var x = new Boolean(true); ++x === 1 + 1. Actual: ' + (++x));\n}\n",
    "id": "S11.4.4_A4_T1"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is number primitive or Number object",
    "test": "//CHECK#1\nvar x = 0.1;\nif (++x !== 0.1 + 1) {\n  $ERROR('#1: var x = 0.1; ++x === 0.1 + 1. Actual: ' + (++x));\n}\n\n//CHECK#2\nvar x = new Number(-1.1);\nif (++x !== -1.1 + 1) {\n  $ERROR('#2: var x = new Number(-1.1); ++x === -1.1 + 1. Actual: ' + (++x));\n}\n",
    "id": "S11.4.4_A4_T2"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is string primitive or String object",
    "test": "//CHECK#1\nvar x = \"1\";\nif (++x !== 1 + 1) {\n  $ERROR('#1: var x = \"1\"; ++x === 1 + 1. Actual: ' + (++x));\n}\n\n//CHECK#2\nvar x = \"x\"; \nif (isNaN(++x) !== true) {\n  $ERROR('#2: var x = \"x\"; ++x === Not-a-Number. Actual: ' + (++x));\n}\n\n//CHECK#3\nvar x = new String(\"-1\");\nif (++x !== -1 + 1) {\n  $ERROR('#3: var x = new String(\"-1\"); ++x === -1 + 1. Actual: ' + (++x));\n}\n",
    "id": "S11.4.4_A4_T3"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is undefined or null",
    "test": "//CHECK#1\nvar x; \nif (isNaN(++x) !== true) {\n  $ERROR('#1: var x; ++x === Not-a-Number. Actual: ' + (++x));\n}\n\n//CHECK#2\nvar x = null;\nif (++x !== 1) {\n  $ERROR('#2: var x = null; ++x === 1. Actual: ' + (++x));\n}\n",
    "id": "S11.4.4_A4_T4"
   },
   {
    "section": "11.4.4, 11.6.3",
    "description": "Type(x) is Object object or Function object",
    "test": "//CHECK#1\nvar x = {}; \nif (isNaN(++x) !== true) {\n  $ERROR('#1: var x = {}; ++x === Not-a-Number. Actual: ' + (++x));\n}\n\n//CHECK#2\nvar x = function(){return 1}; \nif (isNaN(++x) !== true) {\n  $ERROR('#2: var x = function(){return 1}; ++x === Not-a-Number. Actual: ' + (++x));\n}\n",
    "id": "S11.4.4_A4_T5"
   }
  ]
 }
}
